[INFO ] 2021-04-15T13:07:38,738Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/peterli/Desktop/tokenTest/workflows ... {}
[INFO ] 2021-04-15T13:07:39,018Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:07:40,638Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2021-04-15T13:07:41,757Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2021-04-15T13:07:41,777Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2021-04-15T13:07:41,779Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:07:42,536Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:07:42,560Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2021-04-15T13:07:43,242Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:07:43,252Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:07:43,253Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2021-04-15T13:07:43,487Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:07:43,508Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:07:44,273Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2021-04-15T13:07:45,309Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:07:45,322Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2021-04-15T13:07:45,368Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:07:45,369Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2021-04-15T13:07:45,369Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:07:46,553Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:07:46,553Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2021-04-15T13:07:46,712Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:07:46,712Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2021-04-15T13:07:46,747Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:07:46,747Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2021-04-15T13:07:46,890Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:07:46,890Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:07:47,040Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:07:47,086Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:07:47,160Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2021-04-15T13:07:47,443Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:07:47,453Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2021-04-15T13:07:47,453Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:07:47,475Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2021-04-15T13:07:47,475Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:07:47,520Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:07:47,520Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2021-04-15T13:07:47,531Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:07:47,531Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2021-04-15T13:07:47,532Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:07:47,532Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:07:47,543Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2021-04-15T13:07:47,674Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:07:47,674Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:07:47,707Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:07:47,707Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:07:47,707Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:07:47,708Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:07:47,708Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:07:47,708Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:07:47,708Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:07:47,720Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:07:47,720Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2021-04-15T13:07:47,742Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:07:47,742Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:07:47,767Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2021-04-15T13:07:47,800Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:07:47,800Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2021-04-15T13:07:47,800Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:07:47,811Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2021-04-15T13:07:47,811Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:07:47,824Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:07:47,824Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2021-04-15T13:07:47,834Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:07:47,834Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2021-04-15T13:07:47,834Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:07:47,834Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:07:47,834Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2021-04-15T13:07:47,876Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:07:47,876Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:07:47,877Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:07:47,877Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:07:47,877Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:07:47,877Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:07:47,877Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:07:47,877Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:07:47,877Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:07:47,877Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:07:47,877Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:07:47,877Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:07:47,877Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2021-04-15T13:07:49,759Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:07:49,759Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:07:49,759Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2021-04-15T13:07:49,759Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:07:49,771Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:07:49,783Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/peterli/Desktop/tokenTest/.gradle {}
[INFO ] 2021-04-15T13:07:49,783Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:07:49,810Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2021-04-15T13:07:55,407Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/0/cordapps] {}
[INFO ] 2021-04-15T13:07:55,418Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:07:55,434Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:07:55,582Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:07:55,600Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:07:55,657Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:07:57,550Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:07:57,901Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:07:57,995Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:07:58,022Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:07:58,029Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL9tYPAt8Sru9h3K3JBhaJT4Vtv3vYUmVdxWvBaSpMn6Ng, alias: identity-private-key {}
[INFO ] 2021-04-15T13:07:58,234Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:07:58,234Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:07:58,238Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:07:58,239Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:07:58,240Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:07:58,240Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:07:58,241Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:07:58,241Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:07:58,242Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:07:58,243Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:07:58,244Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:07:58,245Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:07:58,246Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:07:58,247Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:07:58,248Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:07:58,287Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:07:58,408Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:07:34.227Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:08:05,397Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:08:05,526Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-04-15T13:08:05,536Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-04-15T13:08:08,884Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-04-15T13:08:09,485Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:08:09,499Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618492089485), owningKey=DL9tYPAt8Sru9h3K3JBhaJT4Vtv3vYUmVdxWvBaSpMn6Ng {}
[INFO ] 2021-04-15T13:08:09,499Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:08:09,745Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618492089485) {}
[INFO ] 2021-04-15T13:08:09,826Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:08:09,863Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:08:09,864Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:08:09,908Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618492089485), owningKey=DL9tYPAt8Sru9h3K3JBhaJT4Vtv3vYUmVdxWvBaSpMn6Ng {}
[INFO ] 2021-04-15T13:08:09,908Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:08:10,032Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:08:10,060Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:08:10,076Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:08:10,091Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:08:10,192Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:08:10,294Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:08:10,294Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-04-15T13:08:11,208Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618492089485) {}
[INFO ] 2021-04-15T13:08:11,216Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618492089485), owningKey=DL9tYPAt8Sru9h3K3JBhaJT4Vtv3vYUmVdxWvBaSpMn6Ng {}
[INFO ] 2021-04-15T13:08:11,216Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:08:11,217Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618492089485), owningKey=DL9tYPAt8Sru9h3K3JBhaJT4Vtv3vYUmVdxWvBaSpMn6Ng {}
[INFO ] 2021-04-15T13:08:11,217Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:08:11,232Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/1/cordapps] {}
[INFO ] 2021-04-15T13:08:11,233Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:08:11,233Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:08:11,242Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:08:11,250Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:08:11,266Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:08:11,334Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:08:11,336Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:08:11,339Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:08:11,405Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:08:11,405Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLA8VcDW3Ncr9pyStTBadr9yzXF2G5qmCuvWpoLTUqCQpP, alias: identity-private-key {}
[INFO ] 2021-04-15T13:08:11,415Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:08:11,416Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:08:11,416Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:08:11,416Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:08:11,416Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:08:11,416Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:08:11,416Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:08:11,416Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:08:11,416Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:08:11,417Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:08:11,417Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:08:11,417Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:08:11,417Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:08:11,417Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:08:11,417Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:08:11,417Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:08:11,424Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:07:34.227Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:08:12,317Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:08:12,320Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:08:12,320Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:08:12,601Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:08:12,611Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:08:12,617Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618492092611), owningKey=DLA8VcDW3Ncr9pyStTBadr9yzXF2G5qmCuvWpoLTUqCQpP {}
[INFO ] 2021-04-15T13:08:12,617Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:08:12,630Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618492092611) {}
[INFO ] 2021-04-15T13:08:12,642Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:08:12,642Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:08:12,643Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:08:12,656Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618492092611), owningKey=DLA8VcDW3Ncr9pyStTBadr9yzXF2G5qmCuvWpoLTUqCQpP {}
[INFO ] 2021-04-15T13:08:12,656Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:08:12,703Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:08:12,749Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:08:12,753Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:08:12,755Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:08:12,756Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:08:12,766Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:08:12,838Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618492092611) {}
[INFO ] 2021-04-15T13:08:12,842Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618492089485), owningKey=DL9tYPAt8Sru9h3K3JBhaJT4Vtv3vYUmVdxWvBaSpMn6Ng {}
[INFO ] 2021-04-15T13:08:12,842Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:08:12,870Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618492092611), owningKey=DLA8VcDW3Ncr9pyStTBadr9yzXF2G5qmCuvWpoLTUqCQpP {}
[INFO ] 2021-04-15T13:08:12,870Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:08:12,893Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618492092611), owningKey=DLA8VcDW3Ncr9pyStTBadr9yzXF2G5qmCuvWpoLTUqCQpP {}
[INFO ] 2021-04-15T13:08:12,893Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:08:12,893Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618492092611), owningKey=DLA8VcDW3Ncr9pyStTBadr9yzXF2G5qmCuvWpoLTUqCQpP {}
[INFO ] 2021-04-15T13:08:12,893Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:08:12,911Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/2/cordapps] {}
[INFO ] 2021-04-15T13:08:12,911Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:08:12,912Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:08:12,922Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:08:12,929Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:08:12,940Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:08:13,003Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:08:13,005Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:08:13,007Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:08:13,061Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:08:13,061Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL7jC2AK6JaZgLeKJsaRRpLmnuvxx2aakAUq4DmtDtubYM, alias: identity-private-key {}
[INFO ] 2021-04-15T13:08:13,070Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:08:13,070Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:08:13,070Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:08:13,070Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:08:13,071Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:08:13,071Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:08:13,071Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:08:13,071Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:08:13,071Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:08:13,071Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:08:13,071Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:08:13,072Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:08:13,072Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:08:13,072Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:08:13,072Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:08:13,072Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:08:13,078Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:07:34.227Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:08:13,859Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:08:13,861Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:08:13,861Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:08:14,090Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:08:14,098Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:08:14,104Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618492094098), owningKey=DL7jC2AK6JaZgLeKJsaRRpLmnuvxx2aakAUq4DmtDtubYM {}
[INFO ] 2021-04-15T13:08:14,104Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:08:14,117Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618492094098) {}
[INFO ] 2021-04-15T13:08:14,132Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:08:14,132Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:08:14,132Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:08:14,144Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618492094098), owningKey=DL7jC2AK6JaZgLeKJsaRRpLmnuvxx2aakAUq4DmtDtubYM {}
[INFO ] 2021-04-15T13:08:14,144Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:08:14,183Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:08:14,220Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:08:14,224Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:08:14,224Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:08:14,225Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:08:14,235Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:08:14,271Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618492094098) {}
[INFO ] 2021-04-15T13:08:14,274Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618492089485), owningKey=DL9tYPAt8Sru9h3K3JBhaJT4Vtv3vYUmVdxWvBaSpMn6Ng {}
[INFO ] 2021-04-15T13:08:14,274Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:08:14,296Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618492094098), owningKey=DL7jC2AK6JaZgLeKJsaRRpLmnuvxx2aakAUq4DmtDtubYM {}
[INFO ] 2021-04-15T13:08:14,296Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:08:14,316Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618492092611), owningKey=DLA8VcDW3Ncr9pyStTBadr9yzXF2G5qmCuvWpoLTUqCQpP {}
[INFO ] 2021-04-15T13:08:14,316Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:08:14,335Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618492094098), owningKey=DL7jC2AK6JaZgLeKJsaRRpLmnuvxx2aakAUq4DmtDtubYM {}
[INFO ] 2021-04-15T13:08:14,335Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:08:14,350Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618492094098), owningKey=DL7jC2AK6JaZgLeKJsaRRpLmnuvxx2aakAUq4DmtDtubYM {}
[INFO ] 2021-04-15T13:08:14,350Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:08:14,350Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618492094098), owningKey=DL7jC2AK6JaZgLeKJsaRRpLmnuvxx2aakAUq4DmtDtubYM {}
[INFO ] 2021-04-15T13:08:14,350Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:08:14,365Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/3/cordapps] {}
[INFO ] 2021-04-15T13:08:14,365Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/3/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/3/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/3/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/3/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:08:14,365Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/3/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:08:14,375Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/3/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:08:14,388Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/3/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:08:14,412Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/3/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:08:14,468Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:08:14,469Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:08:14,470Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:08:14,522Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:08:14,523Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLGiAWsHxLSeh7cge8Dn1777TLEVSAgmCbDTMdTbhmppaQ, alias: identity-private-key {}
[INFO ] 2021-04-15T13:08:14,534Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:08:14,534Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:08:14,534Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:08:14,534Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:08:14,534Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:08:14,534Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:08:14,534Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:08:14,534Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:08:14,534Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:08:14,534Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:08:14,534Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:08:14,534Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:08:14,534Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:08:14,534Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:08:14,535Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:08:14,535Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:08:14,539Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:07:34.227Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:08:15,422Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:08:15,424Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:08:15,424Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:08:15,695Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:08:15,706Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:08:15,714Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618492095706), owningKey=DLGiAWsHxLSeh7cge8Dn1777TLEVSAgmCbDTMdTbhmppaQ {}
[INFO ] 2021-04-15T13:08:15,714Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:08:15,725Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618492095706) {}
[INFO ] 2021-04-15T13:08:15,734Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:08:15,735Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:08:15,735Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:08:15,746Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618492095706), owningKey=DLGiAWsHxLSeh7cge8Dn1777TLEVSAgmCbDTMdTbhmppaQ {}
[INFO ] 2021-04-15T13:08:15,746Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:08:15,787Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:08:15,819Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:08:15,823Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:08:15,823Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-130737.253-F54347A1469EDF88/nodes/3/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:08:15,824Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:08:15,833Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:08:15,866Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618492095706) {}
[INFO ] 2021-04-15T13:08:15,870Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618492089485), owningKey=DL9tYPAt8Sru9h3K3JBhaJT4Vtv3vYUmVdxWvBaSpMn6Ng {}
[INFO ] 2021-04-15T13:08:15,870Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:08:15,887Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618492095706), owningKey=DLGiAWsHxLSeh7cge8Dn1777TLEVSAgmCbDTMdTbhmppaQ {}
[INFO ] 2021-04-15T13:08:15,887Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:08:15,908Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618492092611), owningKey=DLA8VcDW3Ncr9pyStTBadr9yzXF2G5qmCuvWpoLTUqCQpP {}
[INFO ] 2021-04-15T13:08:15,908Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:08:15,927Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618492095706), owningKey=DLGiAWsHxLSeh7cge8Dn1777TLEVSAgmCbDTMdTbhmppaQ {}
[INFO ] 2021-04-15T13:08:15,927Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:08:15,945Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618492094098), owningKey=DL7jC2AK6JaZgLeKJsaRRpLmnuvxx2aakAUq4DmtDtubYM {}
[INFO ] 2021-04-15T13:08:15,945Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:08:15,963Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618492095706), owningKey=DLGiAWsHxLSeh7cge8Dn1777TLEVSAgmCbDTMdTbhmppaQ {}
[INFO ] 2021-04-15T13:08:15,963Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:08:15,978Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618492095706), owningKey=DLGiAWsHxLSeh7cge8Dn1777TLEVSAgmCbDTMdTbhmppaQ {}
[INFO ] 2021-04-15T13:08:15,978Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:08:15,978Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618492095706), owningKey=DLGiAWsHxLSeh7cge8Dn1777TLEVSAgmCbDTMdTbhmppaQ {}
[INFO ] 2021-04-15T13:08:15,978Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:08:16,938Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=0c890a04-e94f-4e26-96ac-df9dd40c544c, invocation_id=ae5f9ead-2f3e-4ae3-ab2a-fee08883bdd6, invocation_timestamp=2021-04-15T13:08:16.036Z, origin=Only For Testing, session_id=ae5f9ead-2f3e-4ae3-ab2a-fee08883bdd6, session_timestamp=2021-04-15T13:08:16.036Z, thread-id=650, tx_id=C3ADC50D9926A29D1EC33E7A0CF0339621AD7678C3E96BC3CFB17CCEACCC9089}
[INFO ] 2021-04-15T13:08:16,938Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=0c890a04-e94f-4e26-96ac-df9dd40c544c, invocation_id=ae5f9ead-2f3e-4ae3-ab2a-fee08883bdd6, invocation_timestamp=2021-04-15T13:08:16.036Z, origin=Only For Testing, session_id=ae5f9ead-2f3e-4ae3-ab2a-fee08883bdd6, session_timestamp=2021-04-15T13:08:16.036Z, thread-id=650, tx_id=C3ADC50D9926A29D1EC33E7A0CF0339621AD7678C3E96BC3CFB17CCEACCC9089}
[INFO ] 2021-04-15T13:08:17,102Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=0c890a04-e94f-4e26-96ac-df9dd40c544c, invocation_id=ae5f9ead-2f3e-4ae3-ab2a-fee08883bdd6, invocation_timestamp=2021-04-15T13:08:16.036Z, origin=Only For Testing, session_id=ae5f9ead-2f3e-4ae3-ab2a-fee08883bdd6, session_timestamp=2021-04-15T13:08:16.036Z, thread-id=650, tx_id=C3ADC50D9926A29D1EC33E7A0CF0339621AD7678C3E96BC3CFB17CCEACCC9089}
[INFO ] 2021-04-15T13:08:17,102Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=0c890a04-e94f-4e26-96ac-df9dd40c544c, invocation_id=ae5f9ead-2f3e-4ae3-ab2a-fee08883bdd6, invocation_timestamp=2021-04-15T13:08:16.036Z, origin=Only For Testing, session_id=ae5f9ead-2f3e-4ae3-ab2a-fee08883bdd6, session_timestamp=2021-04-15T13:08:16.036Z, thread-id=650, tx_id=C3ADC50D9926A29D1EC33E7A0CF0339621AD7678C3E96BC3CFB17CCEACCC9089}
[INFO ] 2021-04-15T13:08:17,634Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary, L=London, C=GB. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=ad70625c-a41b-45bf-b2e7-539cf7d11aab, invocation_id=6918a0df-8f8c-4b23-93b6-bfa66ea53032, invocation_timestamp=2021-04-15T13:08:17.216Z, origin=Only For Testing, session_id=6918a0df-8f8c-4b23-93b6-bfa66ea53032, session_timestamp=2021-04-15T13:08:17.216Z, thread-id=650, tx_id=49F34E1011A3F7379AE4E1D784A28FDDA128836383548C9A4A5144DC9CE64287}
[INFO ] 2021-04-15T13:08:17,805Z [Mock network] corda.flow. - Received a notarisation request for Tx [49F34E1011A3F7379AE4E1D784A28FDDA128836383548C9A4A5144DC9CE64287] from [O=InvestorA, L=TestLand, C=US] {fiber-id=10000003, flow-id=365a09dc-1b9b-46c3-8846-a0db49629f33, invocation_id=f9b6b5e5-ae87-472d-80f1-072da8348cc8, invocation_timestamp=2021-04-15T13:08:17.757Z, origin=O=InvestorA, L=TestLand, C=US, session_id=f9b6b5e5-ae87-472d-80f1-072da8348cc8, session_timestamp=2021-04-15T13:08:17.757Z, thread-id=650}
[INFO ] 2021-04-15T13:08:18,698Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 0 input states and 1 references {}
[INFO ] 2021-04-15T13:08:18,742Z [Mock network] corda.flow. - Transaction [49F34E1011A3F7379AE4E1D784A28FDDA128836383548C9A4A5144DC9CE64287] successfully notarised, sending signature back to [O=InvestorA, L=TestLand, C=US] {fiber-id=10000003, flow-id=365a09dc-1b9b-46c3-8846-a0db49629f33, invocation_id=f9b6b5e5-ae87-472d-80f1-072da8348cc8, invocation_timestamp=2021-04-15T13:08:17.757Z, origin=O=InvestorA, L=TestLand, C=US, session_id=f9b6b5e5-ae87-472d-80f1-072da8348cc8, session_timestamp=2021-04-15T13:08:17.757Z, thread-id=650}
[INFO ] 2021-04-15T13:08:18,802Z [Mock network] corda.flow. - Notary responded (O=Notary, L=London, C=GB). {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=ad70625c-a41b-45bf-b2e7-539cf7d11aab, invocation_id=6918a0df-8f8c-4b23-93b6-bfa66ea53032, invocation_timestamp=2021-04-15T13:08:17.216Z, origin=Only For Testing, session_id=6918a0df-8f8c-4b23-93b6-bfa66ea53032, session_timestamp=2021-04-15T13:08:17.216Z, thread-id=650, tx_id=49F34E1011A3F7379AE4E1D784A28FDDA128836383548C9A4A5144DC9CE64287}
[INFO ] 2021-04-15T13:08:18,803Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=ad70625c-a41b-45bf-b2e7-539cf7d11aab, invocation_id=6918a0df-8f8c-4b23-93b6-bfa66ea53032, invocation_timestamp=2021-04-15T13:08:17.216Z, origin=Only For Testing, session_id=6918a0df-8f8c-4b23-93b6-bfa66ea53032, session_timestamp=2021-04-15T13:08:17.216Z, thread-id=650, tx_id=49F34E1011A3F7379AE4E1D784A28FDDA128836383548C9A4A5144DC9CE64287}
[INFO ] 2021-04-15T13:08:18,850Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=ad70625c-a41b-45bf-b2e7-539cf7d11aab, invocation_id=6918a0df-8f8c-4b23-93b6-bfa66ea53032, invocation_timestamp=2021-04-15T13:08:17.216Z, origin=Only For Testing, session_id=6918a0df-8f8c-4b23-93b6-bfa66ea53032, session_timestamp=2021-04-15T13:08:17.216Z, thread-id=650, tx_id=49F34E1011A3F7379AE4E1D784A28FDDA128836383548C9A4A5144DC9CE64287}
[INFO ] 2021-04-15T13:08:18,850Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=ad70625c-a41b-45bf-b2e7-539cf7d11aab, invocation_id=6918a0df-8f8c-4b23-93b6-bfa66ea53032, invocation_timestamp=2021-04-15T13:08:17.216Z, origin=Only For Testing, session_id=6918a0df-8f8c-4b23-93b6-bfa66ea53032, session_timestamp=2021-04-15T13:08:17.216Z, thread-id=650, tx_id=49F34E1011A3F7379AE4E1D784A28FDDA128836383548C9A4A5144DC9CE64287}
[INFO ] 2021-04-15T13:08:19,228Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary, L=London, C=GB. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=9fdf8440-ad1f-4bdc-988c-4f97b2bc6553, invocation_id=9c9bd413-4d61-4a5d-b329-d51950eb75fb, invocation_timestamp=2021-04-15T13:08:18.958Z, origin=Only For Testing, session_id=9c9bd413-4d61-4a5d-b329-d51950eb75fb, session_timestamp=2021-04-15T13:08:18.958Z, thread-id=650, tx_id=6FF95A5238E28A9998DDF210EFEA40188A355DC13EAC3AFD9B7FD08232DC46C6}
[INFO ] 2021-04-15T13:08:19,272Z [Mock network] corda.flow. - Received a notarisation request for Tx [6FF95A5238E28A9998DDF210EFEA40188A355DC13EAC3AFD9B7FD08232DC46C6] from [O=InvestorA, L=TestLand, C=US] {fiber-id=10000005, flow-id=2193cd2a-e10b-476d-b412-f0293166e36c, invocation_id=a950da35-beb4-40fc-8996-e3502b9d65e6, invocation_timestamp=2021-04-15T13:08:19.256Z, origin=O=InvestorA, L=TestLand, C=US, session_id=a950da35-beb4-40fc-8996-e3502b9d65e6, session_timestamp=2021-04-15T13:08:19.256Z, thread-id=650}
[INFO ] 2021-04-15T13:08:19,553Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 1 references {}
[INFO ] 2021-04-15T13:08:19,561Z [Mock network] corda.flow. - Transaction [6FF95A5238E28A9998DDF210EFEA40188A355DC13EAC3AFD9B7FD08232DC46C6] successfully notarised, sending signature back to [O=InvestorA, L=TestLand, C=US] {fiber-id=10000005, flow-id=2193cd2a-e10b-476d-b412-f0293166e36c, invocation_id=a950da35-beb4-40fc-8996-e3502b9d65e6, invocation_timestamp=2021-04-15T13:08:19.256Z, origin=O=InvestorA, L=TestLand, C=US, session_id=a950da35-beb4-40fc-8996-e3502b9d65e6, session_timestamp=2021-04-15T13:08:19.256Z, thread-id=650}
[INFO ] 2021-04-15T13:08:19,642Z [Mock network] corda.flow. - Notary responded (O=Notary, L=London, C=GB). {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=9fdf8440-ad1f-4bdc-988c-4f97b2bc6553, invocation_id=9c9bd413-4d61-4a5d-b329-d51950eb75fb, invocation_timestamp=2021-04-15T13:08:18.958Z, origin=Only For Testing, session_id=9c9bd413-4d61-4a5d-b329-d51950eb75fb, session_timestamp=2021-04-15T13:08:18.958Z, thread-id=650, tx_id=6FF95A5238E28A9998DDF210EFEA40188A355DC13EAC3AFD9B7FD08232DC46C6}
[INFO ] 2021-04-15T13:08:19,644Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=9fdf8440-ad1f-4bdc-988c-4f97b2bc6553, invocation_id=9c9bd413-4d61-4a5d-b329-d51950eb75fb, invocation_timestamp=2021-04-15T13:08:18.958Z, origin=Only For Testing, session_id=9c9bd413-4d61-4a5d-b329-d51950eb75fb, session_timestamp=2021-04-15T13:08:18.958Z, thread-id=650, tx_id=6FF95A5238E28A9998DDF210EFEA40188A355DC13EAC3AFD9B7FD08232DC46C6}
[INFO ] 2021-04-15T13:08:19,665Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=9fdf8440-ad1f-4bdc-988c-4f97b2bc6553, invocation_id=9c9bd413-4d61-4a5d-b329-d51950eb75fb, invocation_timestamp=2021-04-15T13:08:18.958Z, origin=Only For Testing, session_id=9c9bd413-4d61-4a5d-b329-d51950eb75fb, session_timestamp=2021-04-15T13:08:18.958Z, thread-id=650, tx_id=6FF95A5238E28A9998DDF210EFEA40188A355DC13EAC3AFD9B7FD08232DC46C6}
[INFO ] 2021-04-15T13:08:19,708Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=InvestorA, L=TestLand, C=US. {fiber-id=10000006, flow-id=e7959a4e-12a2-4f67-a9b9-fdba265f5ce9, invocation_id=d6904f36-e811-49f5-b49c-f3d2e187e0c3, invocation_timestamp=2021-04-15T13:08:19.306Z, origin=O=InvestorA, L=TestLand, C=US, session_id=d6904f36-e811-49f5-b49c-f3d2e187e0c3, session_timestamp=2021-04-15T13:08:19.306Z, thread-id=650, tx_id=6FF95A5238E28A9998DDF210EFEA40188A355DC13EAC3AFD9B7FD08232DC46C6}
[INFO ] 2021-04-15T13:08:19,995Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=e7959a4e-12a2-4f67-a9b9-fdba265f5ce9, invocation_id=d6904f36-e811-49f5-b49c-f3d2e187e0c3, invocation_timestamp=2021-04-15T13:08:19.306Z, origin=O=InvestorA, L=TestLand, C=US, session_id=d6904f36-e811-49f5-b49c-f3d2e187e0c3, session_timestamp=2021-04-15T13:08:19.306Z, thread-id=650, tx_id=6FF95A5238E28A9998DDF210EFEA40188A355DC13EAC3AFD9B7FD08232DC46C6}
[INFO ] 2021-04-15T13:08:20,008Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000006, flow-id=e7959a4e-12a2-4f67-a9b9-fdba265f5ce9, invocation_id=d6904f36-e811-49f5-b49c-f3d2e187e0c3, invocation_timestamp=2021-04-15T13:08:19.306Z, origin=O=InvestorA, L=TestLand, C=US, session_id=d6904f36-e811-49f5-b49c-f3d2e187e0c3, session_timestamp=2021-04-15T13:08:19.306Z, thread-id=650, tx_id=6FF95A5238E28A9998DDF210EFEA40188A355DC13EAC3AFD9B7FD08232DC46C6}
[INFO ] 2021-04-15T13:08:20,035Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000006, flow-id=e7959a4e-12a2-4f67-a9b9-fdba265f5ce9, invocation_id=d6904f36-e811-49f5-b49c-f3d2e187e0c3, invocation_timestamp=2021-04-15T13:08:19.306Z, origin=O=InvestorA, L=TestLand, C=US, session_id=d6904f36-e811-49f5-b49c-f3d2e187e0c3, session_timestamp=2021-04-15T13:08:19.306Z, thread-id=650, tx_id=6FF95A5238E28A9998DDF210EFEA40188A355DC13EAC3AFD9B7FD08232DC46C6}
[INFO ] 2021-04-15T13:08:20,050Z [Mock network] corda.flow. - Party O=InvestorB, L=TestCity, C=US received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=9fdf8440-ad1f-4bdc-988c-4f97b2bc6553, invocation_id=9c9bd413-4d61-4a5d-b329-d51950eb75fb, invocation_timestamp=2021-04-15T13:08:18.958Z, origin=Only For Testing, session_id=9c9bd413-4d61-4a5d-b329-d51950eb75fb, session_timestamp=2021-04-15T13:08:18.958Z, thread-id=650, tx_id=6FF95A5238E28A9998DDF210EFEA40188A355DC13EAC3AFD9B7FD08232DC46C6}
[INFO ] 2021-04-15T13:08:20,074Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=InvestorA, L=TestLand, C=US. {fiber-id=10000007, flow-id=58b93662-6f09-46bf-bd28-edde4830ec31, invocation_id=814665f4-78ac-42a6-91c6-16af196f4d67, invocation_timestamp=2021-04-15T13:08:19.357Z, origin=O=InvestorA, L=TestLand, C=US, session_id=814665f4-78ac-42a6-91c6-16af196f4d67, session_timestamp=2021-04-15T13:08:19.357Z, thread-id=650, tx_id=6FF95A5238E28A9998DDF210EFEA40188A355DC13EAC3AFD9B7FD08232DC46C6}
[INFO ] 2021-04-15T13:08:20,622Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=58b93662-6f09-46bf-bd28-edde4830ec31, invocation_id=814665f4-78ac-42a6-91c6-16af196f4d67, invocation_timestamp=2021-04-15T13:08:19.357Z, origin=O=InvestorA, L=TestLand, C=US, session_id=814665f4-78ac-42a6-91c6-16af196f4d67, session_timestamp=2021-04-15T13:08:19.357Z, thread-id=650, tx_id=6FF95A5238E28A9998DDF210EFEA40188A355DC13EAC3AFD9B7FD08232DC46C6}
[INFO ] 2021-04-15T13:08:20,638Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=58b93662-6f09-46bf-bd28-edde4830ec31, invocation_id=814665f4-78ac-42a6-91c6-16af196f4d67, invocation_timestamp=2021-04-15T13:08:19.357Z, origin=O=InvestorA, L=TestLand, C=US, session_id=814665f4-78ac-42a6-91c6-16af196f4d67, session_timestamp=2021-04-15T13:08:19.357Z, thread-id=650, tx_id=6FF95A5238E28A9998DDF210EFEA40188A355DC13EAC3AFD9B7FD08232DC46C6}
[INFO ] 2021-04-15T13:08:20,663Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=58b93662-6f09-46bf-bd28-edde4830ec31, invocation_id=814665f4-78ac-42a6-91c6-16af196f4d67, invocation_timestamp=2021-04-15T13:08:19.357Z, origin=O=InvestorA, L=TestLand, C=US, session_id=814665f4-78ac-42a6-91c6-16af196f4d67, session_timestamp=2021-04-15T13:08:19.357Z, thread-id=650, tx_id=6FF95A5238E28A9998DDF210EFEA40188A355DC13EAC3AFD9B7FD08232DC46C6}
[INFO ] 2021-04-15T13:08:20,680Z [Mock network] corda.flow. - Party O=TIE, L=TestVillage, C=US received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=9fdf8440-ad1f-4bdc-988c-4f97b2bc6553, invocation_id=9c9bd413-4d61-4a5d-b329-d51950eb75fb, invocation_timestamp=2021-04-15T13:08:18.958Z, origin=Only For Testing, session_id=9c9bd413-4d61-4a5d-b329-d51950eb75fb, session_timestamp=2021-04-15T13:08:18.958Z, thread-id=650, tx_id=6FF95A5238E28A9998DDF210EFEA40188A355DC13EAC3AFD9B7FD08232DC46C6}
[INFO ] 2021-04-15T13:08:20,680Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=9fdf8440-ad1f-4bdc-988c-4f97b2bc6553, invocation_id=9c9bd413-4d61-4a5d-b329-d51950eb75fb, invocation_timestamp=2021-04-15T13:08:18.958Z, origin=Only For Testing, session_id=9c9bd413-4d61-4a5d-b329-d51950eb75fb, session_timestamp=2021-04-15T13:08:18.958Z, thread-id=650, tx_id=6FF95A5238E28A9998DDF210EFEA40188A355DC13EAC3AFD9B7FD08232DC46C6}
[INFO ] 2021-04-15T13:08:20,762Z [Mock network] corda.flow. - Already stored a distribution record for O=InvestorA, L=TestLand, C=US and ddaba21a-417e-4bab-98b9-60453e72f17e. {fiber-id=10000009, flow-id=787e54e9-7624-4feb-bc1d-e89a4194ef46, invocation_id=9070a8e6-b6cb-4f36-9deb-91783e7cc42b, invocation_timestamp=2021-04-15T13:08:20.751Z, origin=O=InvestorA, L=TestLand, C=US, session_id=9070a8e6-b6cb-4f36-9deb-91783e7cc42b, session_timestamp=2021-04-15T13:08:20.751Z, thread-id=650}
[INFO ] 2021-04-15T13:08:20,809Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2021-04-15T13:08:20,833Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:08:20,833Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:08:20,837Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2021-04-15T13:08:20,852Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:08:20,852Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:08:20,854Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2021-04-15T13:08:20,864Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:08:20,864Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:08:20,866Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2021-04-15T13:08:20,876Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:08:20,876Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:14:00,585Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/peterli/Desktop/tokenTest/workflows ... {}
[INFO ] 2021-04-15T13:14:00,804Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:14:02,259Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2021-04-15T13:14:03,224Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2021-04-15T13:14:03,238Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2021-04-15T13:14:03,239Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:14:03,881Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:14:03,914Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2021-04-15T13:14:04,455Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:14:04,455Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:14:04,456Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2021-04-15T13:14:04,662Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:14:04,672Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:14:05,304Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2021-04-15T13:14:06,199Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:14:06,224Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2021-04-15T13:14:06,246Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:14:06,246Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2021-04-15T13:14:06,246Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:14:07,153Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:14:07,153Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2021-04-15T13:14:07,304Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:14:07,304Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2021-04-15T13:14:07,337Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:14:07,337Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2021-04-15T13:14:07,462Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:14:07,462Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:14:07,611Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:14:07,655Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:14:07,718Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2021-04-15T13:14:08,016Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:14:08,016Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2021-04-15T13:14:08,026Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:14:08,037Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2021-04-15T13:14:08,037Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:14:08,091Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:14:08,091Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2021-04-15T13:14:08,091Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:14:08,091Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2021-04-15T13:14:08,091Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:14:08,091Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:14:08,103Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2021-04-15T13:14:08,211Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:14:08,212Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:14:08,222Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:14:08,222Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:14:08,222Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:14:08,222Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:14:08,222Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:14:08,222Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:14:08,222Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:14:08,235Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:14:08,235Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2021-04-15T13:14:08,268Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:14:08,268Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:14:08,294Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2021-04-15T13:14:08,337Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:14:08,337Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2021-04-15T13:14:08,337Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:14:08,337Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2021-04-15T13:14:08,337Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:14:08,348Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:14:08,348Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2021-04-15T13:14:08,359Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:14:08,359Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2021-04-15T13:14:08,359Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:14:08,360Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:14:08,360Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2021-04-15T13:14:08,437Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:14:08,437Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:14:08,437Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:14:08,437Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:14:08,447Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:14:08,447Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:14:08,447Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:14:08,447Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:14:08,447Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:14:08,447Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:14:08,447Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:14:08,447Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:14:08,447Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2021-04-15T13:14:10,271Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:14:10,271Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:14:10,271Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2021-04-15T13:14:10,271Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:14:10,283Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:14:10,294Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/peterli/Desktop/tokenTest/.gradle {}
[INFO ] 2021-04-15T13:14:10,294Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:14:10,317Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2021-04-15T13:14:15,414Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/0/cordapps] {}
[INFO ] 2021-04-15T13:14:15,422Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:14:15,438Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:14:15,552Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:14:15,568Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:14:15,623Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:14:17,257Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:14:17,599Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:14:17,704Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:14:17,734Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:14:17,741Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLCthcMak3ZZ3BGFVBUPqZiYEHXJgCFF4hgvtwjxNUUZa7, alias: identity-private-key {}
[INFO ] 2021-04-15T13:14:17,927Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:14:17,927Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:14:17,933Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:17,934Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:17,934Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:17,935Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:17,935Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:17,936Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:17,937Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:17,938Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:17,938Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:17,940Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:17,941Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:14:17,942Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:14:17,942Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:14:17,980Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:14:18,096Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:13:56.241Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:14:24,165Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:14:24,272Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-04-15T13:14:24,278Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-04-15T13:14:27,618Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-04-15T13:14:28,174Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:14:28,184Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618492468174), owningKey=DLCthcMak3ZZ3BGFVBUPqZiYEHXJgCFF4hgvtwjxNUUZa7 {}
[INFO ] 2021-04-15T13:14:28,184Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:14:28,380Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618492468174) {}
[INFO ] 2021-04-15T13:14:28,472Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:14:28,507Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:14:28,508Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:14:28,551Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618492468174), owningKey=DLCthcMak3ZZ3BGFVBUPqZiYEHXJgCFF4hgvtwjxNUUZa7 {}
[INFO ] 2021-04-15T13:14:28,551Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:14:28,676Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:14:28,705Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:14:28,722Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:14:28,736Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:14:28,839Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:14:28,940Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:14:28,940Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-04-15T13:14:29,800Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618492468174) {}
[INFO ] 2021-04-15T13:14:29,808Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618492468174), owningKey=DLCthcMak3ZZ3BGFVBUPqZiYEHXJgCFF4hgvtwjxNUUZa7 {}
[INFO ] 2021-04-15T13:14:29,808Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:14:29,809Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618492468174), owningKey=DLCthcMak3ZZ3BGFVBUPqZiYEHXJgCFF4hgvtwjxNUUZa7 {}
[INFO ] 2021-04-15T13:14:29,809Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:14:29,820Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/1/cordapps] {}
[INFO ] 2021-04-15T13:14:29,820Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:14:29,820Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:14:29,830Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:14:29,837Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:14:29,852Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:14:29,909Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:14:29,911Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:14:29,914Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:14:29,962Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:14:29,963Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLMNHRioHZwsz9ouAii3Tg8MDS1GrgUd1PhbuhSB3tG81, alias: identity-private-key {}
[INFO ] 2021-04-15T13:14:29,970Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:14:29,971Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:14:29,971Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:29,971Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:29,971Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:29,971Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:29,971Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:29,971Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:29,971Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:29,971Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:29,971Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:29,972Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:29,972Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:14:29,972Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:14:29,972Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:14:29,972Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:14:29,984Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:13:56.241Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:14:30,776Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:14:30,778Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:14:30,778Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:14:31,029Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:14:31,038Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:14:31,045Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618492471038), owningKey=DLMNHRioHZwsz9ouAii3Tg8MDS1GrgUd1PhbuhSB3tG81 {}
[INFO ] 2021-04-15T13:14:31,045Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:14:31,059Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618492471038) {}
[INFO ] 2021-04-15T13:14:31,070Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:14:31,071Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:14:31,071Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:14:31,082Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618492471038), owningKey=DLMNHRioHZwsz9ouAii3Tg8MDS1GrgUd1PhbuhSB3tG81 {}
[INFO ] 2021-04-15T13:14:31,082Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:14:31,129Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:14:31,159Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:14:31,163Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:14:31,164Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:14:31,164Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:14:31,172Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:14:31,207Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618492471038) {}
[INFO ] 2021-04-15T13:14:31,210Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618492468174), owningKey=DLCthcMak3ZZ3BGFVBUPqZiYEHXJgCFF4hgvtwjxNUUZa7 {}
[INFO ] 2021-04-15T13:14:31,210Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:14:31,230Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618492471038), owningKey=DLMNHRioHZwsz9ouAii3Tg8MDS1GrgUd1PhbuhSB3tG81 {}
[INFO ] 2021-04-15T13:14:31,230Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:14:31,249Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618492471038), owningKey=DLMNHRioHZwsz9ouAii3Tg8MDS1GrgUd1PhbuhSB3tG81 {}
[INFO ] 2021-04-15T13:14:31,249Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:14:31,250Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618492471038), owningKey=DLMNHRioHZwsz9ouAii3Tg8MDS1GrgUd1PhbuhSB3tG81 {}
[INFO ] 2021-04-15T13:14:31,250Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:14:31,264Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/2/cordapps] {}
[INFO ] 2021-04-15T13:14:31,264Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:14:31,265Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:14:31,273Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:14:31,280Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:14:31,292Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:14:31,351Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:14:31,353Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:14:31,354Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:14:31,404Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:14:31,404Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLH3BdS9j3GCa3KU4ASDuNhaK4LHFqBcnXvDsK3kNeyBQU, alias: identity-private-key {}
[INFO ] 2021-04-15T13:14:31,414Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:14:31,414Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:14:31,414Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:31,414Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:31,414Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:31,414Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:31,414Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:31,414Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:31,414Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:31,415Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:31,415Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:31,415Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:31,415Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:14:31,415Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:14:31,415Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:14:31,415Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:14:31,422Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:13:56.241Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:14:32,281Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:14:32,283Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:14:32,283Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:14:32,484Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:14:32,489Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:14:32,494Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618492472489), owningKey=DLH3BdS9j3GCa3KU4ASDuNhaK4LHFqBcnXvDsK3kNeyBQU {}
[INFO ] 2021-04-15T13:14:32,494Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:14:32,505Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618492472489) {}
[INFO ] 2021-04-15T13:14:32,520Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:14:32,521Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:14:32,521Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:14:32,532Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618492472489), owningKey=DLH3BdS9j3GCa3KU4ASDuNhaK4LHFqBcnXvDsK3kNeyBQU {}
[INFO ] 2021-04-15T13:14:32,532Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:14:32,570Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:14:32,599Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:14:32,603Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:14:32,603Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:14:32,604Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:14:32,623Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:14:32,657Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618492472489) {}
[INFO ] 2021-04-15T13:14:32,662Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618492468174), owningKey=DLCthcMak3ZZ3BGFVBUPqZiYEHXJgCFF4hgvtwjxNUUZa7 {}
[INFO ] 2021-04-15T13:14:32,662Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:14:32,689Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618492472489), owningKey=DLH3BdS9j3GCa3KU4ASDuNhaK4LHFqBcnXvDsK3kNeyBQU {}
[INFO ] 2021-04-15T13:14:32,689Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:14:32,709Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618492471038), owningKey=DLMNHRioHZwsz9ouAii3Tg8MDS1GrgUd1PhbuhSB3tG81 {}
[INFO ] 2021-04-15T13:14:32,709Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:14:32,727Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618492472489), owningKey=DLH3BdS9j3GCa3KU4ASDuNhaK4LHFqBcnXvDsK3kNeyBQU {}
[INFO ] 2021-04-15T13:14:32,727Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:14:32,746Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618492472489), owningKey=DLH3BdS9j3GCa3KU4ASDuNhaK4LHFqBcnXvDsK3kNeyBQU {}
[INFO ] 2021-04-15T13:14:32,746Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:14:32,746Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618492472489), owningKey=DLH3BdS9j3GCa3KU4ASDuNhaK4LHFqBcnXvDsK3kNeyBQU {}
[INFO ] 2021-04-15T13:14:32,747Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:14:32,761Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/3/cordapps] {}
[INFO ] 2021-04-15T13:14:32,762Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/3/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/3/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/3/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/3/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:14:32,762Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/3/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:14:32,771Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/3/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:14:32,788Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/3/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:14:32,799Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/3/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:14:32,850Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:14:32,852Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:14:32,854Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:14:32,905Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:14:32,905Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLAkKGWsECpLskcV52y3zGP7VpGRGFmJisHXhQx5KCBvax, alias: identity-private-key {}
[INFO ] 2021-04-15T13:14:32,915Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:14:32,915Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:14:32,915Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:32,915Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:32,915Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:32,915Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:32,915Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:32,915Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:32,916Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:32,916Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:32,916Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:32,916Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:14:32,916Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:14:32,916Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:14:32,916Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:14:32,916Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:14:32,922Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:13:56.241Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:14:33,721Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:14:33,724Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:14:33,724Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:14:33,945Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:14:33,952Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:14:33,957Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618492473952), owningKey=DLAkKGWsECpLskcV52y3zGP7VpGRGFmJisHXhQx5KCBvax {}
[INFO ] 2021-04-15T13:14:33,957Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:14:33,967Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618492473952) {}
[INFO ] 2021-04-15T13:14:33,976Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:14:33,976Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:14:33,976Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:14:33,986Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618492473952), owningKey=DLAkKGWsECpLskcV52y3zGP7VpGRGFmJisHXhQx5KCBvax {}
[INFO ] 2021-04-15T13:14:33,986Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:14:34,039Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:14:34,071Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:14:34,075Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:14:34,075Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-131359.119-63C5CB9493259A83/nodes/3/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:14:34,076Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:14:34,085Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:14:34,117Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618492473952) {}
[INFO ] 2021-04-15T13:14:34,120Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618492468174), owningKey=DLCthcMak3ZZ3BGFVBUPqZiYEHXJgCFF4hgvtwjxNUUZa7 {}
[INFO ] 2021-04-15T13:14:34,120Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:14:34,138Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618492473952), owningKey=DLAkKGWsECpLskcV52y3zGP7VpGRGFmJisHXhQx5KCBvax {}
[INFO ] 2021-04-15T13:14:34,138Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:14:34,161Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618492471038), owningKey=DLMNHRioHZwsz9ouAii3Tg8MDS1GrgUd1PhbuhSB3tG81 {}
[INFO ] 2021-04-15T13:14:34,161Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:14:34,180Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618492473952), owningKey=DLAkKGWsECpLskcV52y3zGP7VpGRGFmJisHXhQx5KCBvax {}
[INFO ] 2021-04-15T13:14:34,180Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:14:34,201Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618492472489), owningKey=DLH3BdS9j3GCa3KU4ASDuNhaK4LHFqBcnXvDsK3kNeyBQU {}
[INFO ] 2021-04-15T13:14:34,201Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:14:34,222Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618492473952), owningKey=DLAkKGWsECpLskcV52y3zGP7VpGRGFmJisHXhQx5KCBvax {}
[INFO ] 2021-04-15T13:14:34,222Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:14:34,235Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618492473952), owningKey=DLAkKGWsECpLskcV52y3zGP7VpGRGFmJisHXhQx5KCBvax {}
[INFO ] 2021-04-15T13:14:34,235Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:14:34,236Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618492473952), owningKey=DLAkKGWsECpLskcV52y3zGP7VpGRGFmJisHXhQx5KCBvax {}
[INFO ] 2021-04-15T13:14:34,236Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:14:35,259Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=3ab414e2-4582-4acf-96ca-5ced2a3597ee, invocation_id=c7fb780c-3b3d-4755-953d-b0ddd6744c76, invocation_timestamp=2021-04-15T13:14:34.290Z, origin=Only For Testing, session_id=c7fb780c-3b3d-4755-953d-b0ddd6744c76, session_timestamp=2021-04-15T13:14:34.290Z, thread-id=649, tx_id=A1B0C753E96835F142D9139B771FD571413C8C785AD08730013CDDB97FA0A543}
[INFO ] 2021-04-15T13:14:35,259Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=3ab414e2-4582-4acf-96ca-5ced2a3597ee, invocation_id=c7fb780c-3b3d-4755-953d-b0ddd6744c76, invocation_timestamp=2021-04-15T13:14:34.290Z, origin=Only For Testing, session_id=c7fb780c-3b3d-4755-953d-b0ddd6744c76, session_timestamp=2021-04-15T13:14:34.290Z, thread-id=649, tx_id=A1B0C753E96835F142D9139B771FD571413C8C785AD08730013CDDB97FA0A543}
[INFO ] 2021-04-15T13:14:35,399Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=3ab414e2-4582-4acf-96ca-5ced2a3597ee, invocation_id=c7fb780c-3b3d-4755-953d-b0ddd6744c76, invocation_timestamp=2021-04-15T13:14:34.290Z, origin=Only For Testing, session_id=c7fb780c-3b3d-4755-953d-b0ddd6744c76, session_timestamp=2021-04-15T13:14:34.290Z, thread-id=649, tx_id=A1B0C753E96835F142D9139B771FD571413C8C785AD08730013CDDB97FA0A543}
[INFO ] 2021-04-15T13:14:35,400Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=3ab414e2-4582-4acf-96ca-5ced2a3597ee, invocation_id=c7fb780c-3b3d-4755-953d-b0ddd6744c76, invocation_timestamp=2021-04-15T13:14:34.290Z, origin=Only For Testing, session_id=c7fb780c-3b3d-4755-953d-b0ddd6744c76, session_timestamp=2021-04-15T13:14:34.290Z, thread-id=649, tx_id=A1B0C753E96835F142D9139B771FD571413C8C785AD08730013CDDB97FA0A543}
[INFO ] 2021-04-15T13:14:35,947Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary, L=London, C=GB. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=351a833a-7591-4923-8289-26a017be586b, invocation_id=c76876f2-acf3-46c6-87b4-38b5e78ce3aa, invocation_timestamp=2021-04-15T13:14:35.509Z, origin=Only For Testing, session_id=c76876f2-acf3-46c6-87b4-38b5e78ce3aa, session_timestamp=2021-04-15T13:14:35.509Z, thread-id=649, tx_id=28E86B49C33FFB5583710F9B789834460100FD8685851F75E74CA1B9005422DC}
[INFO ] 2021-04-15T13:14:36,101Z [Mock network] corda.flow. - Received a notarisation request for Tx [28E86B49C33FFB5583710F9B789834460100FD8685851F75E74CA1B9005422DC] from [O=InvestorA, L=TestLand, C=US] {fiber-id=10000003, flow-id=d2dbbe0c-d74b-4c27-be72-43f394911fe2, invocation_id=ad80e412-c87b-4487-ab34-1d6140bf7c2a, invocation_timestamp=2021-04-15T13:14:36.060Z, origin=O=InvestorA, L=TestLand, C=US, session_id=ad80e412-c87b-4487-ab34-1d6140bf7c2a, session_timestamp=2021-04-15T13:14:36.060Z, thread-id=649}
[INFO ] 2021-04-15T13:14:36,833Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 0 input states and 1 references {}
[INFO ] 2021-04-15T13:14:36,872Z [Mock network] corda.flow. - Transaction [28E86B49C33FFB5583710F9B789834460100FD8685851F75E74CA1B9005422DC] successfully notarised, sending signature back to [O=InvestorA, L=TestLand, C=US] {fiber-id=10000003, flow-id=d2dbbe0c-d74b-4c27-be72-43f394911fe2, invocation_id=ad80e412-c87b-4487-ab34-1d6140bf7c2a, invocation_timestamp=2021-04-15T13:14:36.060Z, origin=O=InvestorA, L=TestLand, C=US, session_id=ad80e412-c87b-4487-ab34-1d6140bf7c2a, session_timestamp=2021-04-15T13:14:36.060Z, thread-id=649}
[INFO ] 2021-04-15T13:14:36,926Z [Mock network] corda.flow. - Notary responded (O=Notary, L=London, C=GB). {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=351a833a-7591-4923-8289-26a017be586b, invocation_id=c76876f2-acf3-46c6-87b4-38b5e78ce3aa, invocation_timestamp=2021-04-15T13:14:35.509Z, origin=Only For Testing, session_id=c76876f2-acf3-46c6-87b4-38b5e78ce3aa, session_timestamp=2021-04-15T13:14:35.509Z, thread-id=649, tx_id=28E86B49C33FFB5583710F9B789834460100FD8685851F75E74CA1B9005422DC}
[INFO ] 2021-04-15T13:14:36,927Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=351a833a-7591-4923-8289-26a017be586b, invocation_id=c76876f2-acf3-46c6-87b4-38b5e78ce3aa, invocation_timestamp=2021-04-15T13:14:35.509Z, origin=Only For Testing, session_id=c76876f2-acf3-46c6-87b4-38b5e78ce3aa, session_timestamp=2021-04-15T13:14:35.509Z, thread-id=649, tx_id=28E86B49C33FFB5583710F9B789834460100FD8685851F75E74CA1B9005422DC}
[INFO ] 2021-04-15T13:14:36,960Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=351a833a-7591-4923-8289-26a017be586b, invocation_id=c76876f2-acf3-46c6-87b4-38b5e78ce3aa, invocation_timestamp=2021-04-15T13:14:35.509Z, origin=Only For Testing, session_id=c76876f2-acf3-46c6-87b4-38b5e78ce3aa, session_timestamp=2021-04-15T13:14:35.509Z, thread-id=649, tx_id=28E86B49C33FFB5583710F9B789834460100FD8685851F75E74CA1B9005422DC}
[INFO ] 2021-04-15T13:14:36,960Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=351a833a-7591-4923-8289-26a017be586b, invocation_id=c76876f2-acf3-46c6-87b4-38b5e78ce3aa, invocation_timestamp=2021-04-15T13:14:35.509Z, origin=Only For Testing, session_id=c76876f2-acf3-46c6-87b4-38b5e78ce3aa, session_timestamp=2021-04-15T13:14:35.509Z, thread-id=649, tx_id=28E86B49C33FFB5583710F9B789834460100FD8685851F75E74CA1B9005422DC}
[ERROR] 2021-04-15T13:14:37,240Z [Mock network] amqp.DeserializationInput. - Serialization failed direction="Deserialize", type="com.r3.corda.lib.tokens.workflows.internal.flows.finality.TransactionRole", msg="Described type with descriptor net.corda:7mttgXO2HdBLwATyV7pCpg== was expected to be of type class com.r3.corda.lib.tokens.workflows.internal.flows.finality.TransactionRole but was class net.corda.core.transactions.SignedTransaction", ClassChain="com.r3.corda.lib.tokens.workflows.internal.flows.finality.TransactionRole" {fiber-id=10000005, flow-id=77aba71d-573a-4425-be09-bf68e4e0b625, invocation_id=efbad77b-14f8-4598-9c0d-f981fbf63d34, invocation_timestamp=2021-04-15T13:14:37.216Z, origin=O=InvestorA, L=TestLand, C=US, session_id=efbad77b-14f8-4598-9c0d-f981fbf63d34, session_timestamp=2021-04-15T13:14:37.216Z, thread-id=649}
[INFO ] 2021-04-15T13:14:37,240Z [Mock network] corda.flow. - Flow raised an error: Payload invalid. Sending it to flow hospital to be triaged. {fiber-id=10000005, flow-id=77aba71d-573a-4425-be09-bf68e4e0b625, invocation_id=efbad77b-14f8-4598-9c0d-f981fbf63d34, invocation_timestamp=2021-04-15T13:14:37.216Z, origin=O=InvestorA, L=TestLand, C=US, session_id=efbad77b-14f8-4598-9c0d-f981fbf63d34, session_timestamp=2021-04-15T13:14:37.216Z, thread-id=649}
[INFO ] 2021-04-15T13:14:37,245Z [Mock network] statemachine.StaffedFlowHospital. - Flow [77aba71d-573a-4425-be09-bf68e4e0b625] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=efbad77b-14f8-4598-9c0d-f981fbf63d34, timestamp: 2021-04-15T13:14:37.216Z, entityType: Invocation, sessionId=efbad77b-14f8-4598-9c0d-f981fbf63d34, timestamp: 2021-04-15T13:14:37.216Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={SessionId(toLong=-4451718971574348839)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3102446253495974003), deduplicationSeed=D--3102446253495974003--5417308107243938528)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-4451718971574348839))]), frozenFiber=A60C89ABC2C9A549F85242705C145C57D0031B448B195FD1CDF954953D1CA2B1), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@4442311, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=7c8c36e4-a346-44da-8025-bbcf6cd7abdf, reloadCheckpointAfterSuspendCount=null, numberOfCommits=2, lock=java.util.concurrent.Semaphore@53c34827[Permits = 0]) {fiber-id=10000005, flow-id=77aba71d-573a-4425-be09-bf68e4e0b625, invocation_id=efbad77b-14f8-4598-9c0d-f981fbf63d34, invocation_timestamp=2021-04-15T13:14:37.216Z, origin=O=InvestorA, L=TestLand, C=US, session_id=efbad77b-14f8-4598-9c0d-f981fbf63d34, session_timestamp=2021-04-15T13:14:37.216Z, thread-id=649}
[INFO ] 2021-04-15T13:14:37,248Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {fiber-id=10000005, flow-id=77aba71d-573a-4425-be09-bf68e4e0b625, invocation_id=efbad77b-14f8-4598-9c0d-f981fbf63d34, invocation_timestamp=2021-04-15T13:14:37.216Z, origin=O=InvestorA, L=TestLand, C=US, session_id=efbad77b-14f8-4598-9c0d-f981fbf63d34, session_timestamp=2021-04-15T13:14:37.216Z, thread-id=649}
java.lang.IllegalArgumentException: Payload invalid
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:568) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler.call(ObserverAwareFinalityFlowHandler.kt:27) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler.call(ObserverAwareFinalityFlowHandler.kt:11) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:93) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:72) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
Caused by: java.io.NotSerializableException: Described type with descriptor net.corda:7mttgXO2HdBLwATyV7pCpg== was expected to be of type class com.r3.corda.lib.tokens.workflows.internal.flows.finality.TransactionRole but was class net.corda.core.transactions.SignedTransaction
	at net.corda.serialization.internal.amqp.DeserializationInput.des(DeserializationInput.kt:103) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.DeserializationInput.deserialize(DeserializationInput.kt:120) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.AbstractAMQPSerializationScheme.deserialize(AMQPSerializationScheme.kt:151) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.withCurrentContext(SerializationAPI.kt:71) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:80) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.asCurrent(SerializationAPI.kt:85) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl.deserialize(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:566) ~[corda-core-4.7.jar:?]
	... 21 more
[INFO ] 2021-04-15T13:14:37,252Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {fiber-id=10000005, flow-id=77aba71d-573a-4425-be09-bf68e4e0b625, invocation_id=efbad77b-14f8-4598-9c0d-f981fbf63d34, invocation_timestamp=2021-04-15T13:14:37.216Z, origin=O=InvestorA, L=TestLand, C=US, session_id=efbad77b-14f8-4598-9c0d-f981fbf63d34, session_timestamp=2021-04-15T13:14:37.216Z, thread-id=649}
java.lang.IllegalArgumentException: Payload invalid
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:568) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler.call(ObserverAwareFinalityFlowHandler.kt:27) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler.call(ObserverAwareFinalityFlowHandler.kt:11) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:93) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:72) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
Caused by: java.io.NotSerializableException: Described type with descriptor net.corda:7mttgXO2HdBLwATyV7pCpg== was expected to be of type class com.r3.corda.lib.tokens.workflows.internal.flows.finality.TransactionRole but was class net.corda.core.transactions.SignedTransaction
	at net.corda.serialization.internal.amqp.DeserializationInput.des(DeserializationInput.kt:103) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.DeserializationInput.deserialize(DeserializationInput.kt:120) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.AbstractAMQPSerializationScheme.deserialize(AMQPSerializationScheme.kt:151) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.withCurrentContext(SerializationAPI.kt:71) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:80) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.asCurrent(SerializationAPI.kt:85) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl.deserialize(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:566) ~[corda-core-4.7.jar:?]
	... 21 more
[WARN ] 2021-04-15T13:14:37,282Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [77aba71d-573a-4425-be09-bf68e4e0b625] errored, dumping all transitions:

 --- Transition of flow [77aba71d-573a-4425-be09-bf68e4e0b625] ---
  Timestamp: 2021-04-15T13:14:37.225Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[77aba71d-573a-4425-be09-bf68e4e0b625], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=efbad77b-14f8-4598-9c0d-f981fbf63d34, timestamp: 2021-04-15T13:14:37.216Z, entityType: Invocation, sessionId=efbad77b-14f8-4598-9c0d-f981fbf63d34, timestamp: 2021-04-15T13:14:37.216Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=0E57746233E51DAE3F3B161532D76128BB52B1348AEFCD8FD5FAC02C6A5B385A), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@45ef6c93])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@45ef6c93])
    SignalFlowHasStarted(flowId=[77aba71d-573a-4425-be09-bf68e4e0b625])
    SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3102446253495974003), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-4451718971574348839), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--3102446253495974003--5417308107243938528-0-0), senderUUID=7c8c36e4-a346-44da-8025-bbcf6cd7abdf))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:14:37.217Z
    2021-04-15T13:14:37.218Z
checkpoint.checkpointState.sessions.SessionId(toLong=-4451718971574348839): 
    null
    Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3102446253495974003), deduplicationSeed=D--3102446253495974003--5417308107243938528)
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@45ef6c93]
    []
isAnyCheckpointPersisted: 
    false
    true


 --- Transition of flow [77aba71d-573a-4425-be09-bf68e4e0b625] ---
  Timestamp: 2021-04-15T13:14:37.226Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:14:37.218Z
    2021-04-15T13:14:37.226Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [77aba71d-573a-4425-be09-bf68e4e0b625] ---
  Timestamp: 2021-04-15T13:14:37.237Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-4451718971574348839))]), maySkipCheckpoint=false, fiber=A60C89ABC2C9A549F85242705C145C57D0031B448B195FD1CDF954953D1CA2B1, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[77aba71d-573a-4425-be09-bf68e4e0b625], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=efbad77b-14f8-4598-9c0d-f981fbf63d34, timestamp: 2021-04-15T13:14:37.216Z, entityType: Invocation, sessionId=efbad77b-14f8-4598-9c0d-f981fbf63d34, timestamp: 2021-04-15T13:14:37.216Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={SessionId(toLong=-4451718971574348839)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3102446253495974003), deduplicationSeed=D--3102446253495974003--5417308107243938528)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-4451718971574348839))]), frozenFiber=A60C89ABC2C9A549F85242705C145C57D0031B448B195FD1CDF954953D1CA2B1), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2021-04-15T13:14:37.226Z
    2021-04-15T13:14:37.234Z
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=0E57746233E51DAE3F3B161532D76128BB52B1348AEFCD8FD5FAC02C6A5B385A)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-4451718971574348839))]), frozenFiber=A60C89ABC2C9A549F85242705C145C57D0031B448B195FD1CDF954953D1CA2B1)
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.progressStep: 
    null
    Starting
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2


 --- Transition of flow [77aba71d-573a-4425-be09-bf68e4e0b625] ---
  Timestamp: 2021-04-15T13:14:37.237Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:14:37.234Z
    2021-04-15T13:14:37.237Z
checkpoint.checkpointState.sessions.SessionId(toLong=-4451718971574348839).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [77aba71d-573a-4425-be09-bf68e4e0b625] ---
  Timestamp: 2021-04-15T13:14:37.240Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:14:37.237Z
    2021-04-15T13:14:37.240Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false)]


 --- Transition of flow [77aba71d-573a-4425-be09-bf68e4e0b625] ---
  Timestamp: 2021-04-15T13:14:37.254Z
  Event: Error(exception=java.lang.IllegalArgumentException: Payload invalid, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2021-04-15T13:14:37.240Z
    2021-04-15T13:14:37.244Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-1502524873520780000, exception=java.lang.IllegalArgumentException: Payload invalid)], propagatedIndex=0, propagating=false)


 --- Transition of flow [77aba71d-573a-4425-be09-bf68e4e0b625] ---
  Timestamp: 2021-04-15T13:14:37.258Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [77aba71d-573a-4425-be09-bf68e4e0b625] ---
  Timestamp: 2021-04-15T13:14:37.259Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:14:37.244Z
    2021-04-15T13:14:37.259Z
checkpoint.errorState.propagating: 
    false
    true
 {fiber-id=10000005, flow-id=77aba71d-573a-4425-be09-bf68e4e0b625, invocation_id=efbad77b-14f8-4598-9c0d-f981fbf63d34, invocation_timestamp=2021-04-15T13:14:37.216Z, origin=O=InvestorA, L=TestLand, C=US, session_id=efbad77b-14f8-4598-9c0d-f981fbf63d34, session_timestamp=2021-04-15T13:14:37.216Z, thread-id=649}
[WARN ] 2021-04-15T13:14:37,282Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [77aba71d-573a-4425-be09-bf68e4e0b625] error {fiber-id=10000005, flow-id=77aba71d-573a-4425-be09-bf68e4e0b625, invocation_id=efbad77b-14f8-4598-9c0d-f981fbf63d34, invocation_timestamp=2021-04-15T13:14:37.216Z, origin=O=InvestorA, L=TestLand, C=US, session_id=efbad77b-14f8-4598-9c0d-f981fbf63d34, session_timestamp=2021-04-15T13:14:37.216Z, thread-id=649}
java.lang.IllegalArgumentException: Payload invalid
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:568) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler.call(ObserverAwareFinalityFlowHandler.kt:27) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler.call(ObserverAwareFinalityFlowHandler.kt:11) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:93) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:72) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
Caused by: java.io.NotSerializableException: Described type with descriptor net.corda:7mttgXO2HdBLwATyV7pCpg== was expected to be of type class com.r3.corda.lib.tokens.workflows.internal.flows.finality.TransactionRole but was class net.corda.core.transactions.SignedTransaction
	at net.corda.serialization.internal.amqp.DeserializationInput.des(DeserializationInput.kt:103) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.DeserializationInput.deserialize(DeserializationInput.kt:120) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.AbstractAMQPSerializationScheme.deserialize(AMQPSerializationScheme.kt:151) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.withCurrentContext(SerializationAPI.kt:71) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:80) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.asCurrent(SerializationAPI.kt:85) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl.deserialize(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:566) ~[corda-core-4.7.jar:?]
	... 21 more
[WARN ] 2021-04-15T13:14:37,283Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {fiber-id=10000005, flow-id=77aba71d-573a-4425-be09-bf68e4e0b625, invocation_id=efbad77b-14f8-4598-9c0d-f981fbf63d34, invocation_timestamp=2021-04-15T13:14:37.216Z, origin=O=InvestorA, L=TestLand, C=US, session_id=efbad77b-14f8-4598-9c0d-f981fbf63d34, session_timestamp=2021-04-15T13:14:37.216Z, thread-id=649}
[WARN ] 2021-04-15T13:14:37,358Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [77aba71d-573a-4425-be09-bf68e4e0b625] errored, dumping all transitions:

 --- Transition of flow [77aba71d-573a-4425-be09-bf68e4e0b625] ---
  Timestamp: 2021-04-15T13:14:37.225Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[77aba71d-573a-4425-be09-bf68e4e0b625], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=efbad77b-14f8-4598-9c0d-f981fbf63d34, timestamp: 2021-04-15T13:14:37.216Z, entityType: Invocation, sessionId=efbad77b-14f8-4598-9c0d-f981fbf63d34, timestamp: 2021-04-15T13:14:37.216Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=0E57746233E51DAE3F3B161532D76128BB52B1348AEFCD8FD5FAC02C6A5B385A), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@45ef6c93])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@45ef6c93])
    SignalFlowHasStarted(flowId=[77aba71d-573a-4425-be09-bf68e4e0b625])
    SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3102446253495974003), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-4451718971574348839), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--3102446253495974003--5417308107243938528-0-0), senderUUID=7c8c36e4-a346-44da-8025-bbcf6cd7abdf))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:14:37.217Z
    2021-04-15T13:14:37.218Z
checkpoint.checkpointState.sessions.SessionId(toLong=-4451718971574348839): 
    null
    Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3102446253495974003), deduplicationSeed=D--3102446253495974003--5417308107243938528)
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@45ef6c93]
    []
isAnyCheckpointPersisted: 
    false
    true


 --- Transition of flow [77aba71d-573a-4425-be09-bf68e4e0b625] ---
  Timestamp: 2021-04-15T13:14:37.226Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:14:37.218Z
    2021-04-15T13:14:37.226Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [77aba71d-573a-4425-be09-bf68e4e0b625] ---
  Timestamp: 2021-04-15T13:14:37.237Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-4451718971574348839))]), maySkipCheckpoint=false, fiber=A60C89ABC2C9A549F85242705C145C57D0031B448B195FD1CDF954953D1CA2B1, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[77aba71d-573a-4425-be09-bf68e4e0b625], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=efbad77b-14f8-4598-9c0d-f981fbf63d34, timestamp: 2021-04-15T13:14:37.216Z, entityType: Invocation, sessionId=efbad77b-14f8-4598-9c0d-f981fbf63d34, timestamp: 2021-04-15T13:14:37.216Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={SessionId(toLong=-4451718971574348839)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3102446253495974003), deduplicationSeed=D--3102446253495974003--5417308107243938528)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-4451718971574348839))]), frozenFiber=A60C89ABC2C9A549F85242705C145C57D0031B448B195FD1CDF954953D1CA2B1), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2021-04-15T13:14:37.226Z
    2021-04-15T13:14:37.234Z
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=0E57746233E51DAE3F3B161532D76128BB52B1348AEFCD8FD5FAC02C6A5B385A)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-4451718971574348839))]), frozenFiber=A60C89ABC2C9A549F85242705C145C57D0031B448B195FD1CDF954953D1CA2B1)
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.progressStep: 
    null
    Starting
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2


 --- Transition of flow [77aba71d-573a-4425-be09-bf68e4e0b625] ---
  Timestamp: 2021-04-15T13:14:37.237Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:14:37.234Z
    2021-04-15T13:14:37.237Z
checkpoint.checkpointState.sessions.SessionId(toLong=-4451718971574348839).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [77aba71d-573a-4425-be09-bf68e4e0b625] ---
  Timestamp: 2021-04-15T13:14:37.240Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:14:37.237Z
    2021-04-15T13:14:37.240Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false)]


 --- Transition of flow [77aba71d-573a-4425-be09-bf68e4e0b625] ---
  Timestamp: 2021-04-15T13:14:37.254Z
  Event: Error(exception=java.lang.IllegalArgumentException: Payload invalid, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2021-04-15T13:14:37.240Z
    2021-04-15T13:14:37.244Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-1502524873520780000, exception=java.lang.IllegalArgumentException: Payload invalid)], propagatedIndex=0, propagating=false)


 --- Transition of flow [77aba71d-573a-4425-be09-bf68e4e0b625] ---
  Timestamp: 2021-04-15T13:14:37.258Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [77aba71d-573a-4425-be09-bf68e4e0b625] ---
  Timestamp: 2021-04-15T13:14:37.259Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:14:37.244Z
    2021-04-15T13:14:37.259Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [77aba71d-573a-4425-be09-bf68e4e0b625] ---
  Timestamp: 2021-04-15T13:14:37.356Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=-1502524873520780000)], sessions=[Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3102446253495974003), deduplicationSeed=D--3102446253495974003--5417308107243938528)], senderUUID=7c8c36e4-a346-44da-8025-bbcf6cd7abdf)
    CreateTransaction
    RemoveCheckpoint(id=[77aba71d-573a-4425-be09-bf68e4e0b625], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=77aba71d-573a-4425-be09-bf68e4e0b625)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-4451718971574348839)])
    RemoveFlow(flowId=[77aba71d-573a-4425-be09-bf68e4e0b625], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-1502524873520780000, exception=java.lang.IllegalArgumentException: Payload invalid)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=efbad77b-14f8-4598-9c0d-f981fbf63d34, timestamp: 2021-04-15T13:14:37.216Z, entityType: Invocation, sessionId=efbad77b-14f8-4598-9c0d-f981fbf63d34, timestamp: 2021-04-15T13:14:37.216Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={SessionId(toLong=-4451718971574348839)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3102446253495974003), deduplicationSeed=D--3102446253495974003--5417308107243938528)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=3), flowState=net.corda.node.services.statemachine.FlowState$Finished@73447fbb, errorState=Errored(errors=[FlowError(errorId=-1502524873520780000, exception=java.lang.IllegalArgumentException: Payload invalid)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@4442311, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, senderUUID=7c8c36e4-a346-44da-8025-bbcf6cd7abdf, reloadCheckpointAfterSuspendCount=null, numberOfCommits=3, lock=java.util.concurrent.Semaphore@53c34827[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.timestamp: 
    2021-04-15T13:14:37.259Z
    2021-04-15T13:14:37.282Z
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-4451718971574348839))]), frozenFiber=A60C89ABC2C9A549F85242705C145C57D0031B448B195FD1CDF954953D1CA2B1)
    net.corda.node.services.statemachine.FlowState$Finished@73447fbb
checkpoint.checkpointState.numberOfCommits: 
    2
    3
isRemoved: 
    false
    true
numberOfCommits: 
    2
    3
 {fiber-id=10000005, flow-id=77aba71d-573a-4425-be09-bf68e4e0b625, invocation_id=efbad77b-14f8-4598-9c0d-f981fbf63d34, invocation_timestamp=2021-04-15T13:14:37.216Z, origin=O=InvestorA, L=TestLand, C=US, session_id=efbad77b-14f8-4598-9c0d-f981fbf63d34, session_timestamp=2021-04-15T13:14:37.216Z, thread-id=649}
[WARN ] 2021-04-15T13:14:37,358Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [77aba71d-573a-4425-be09-bf68e4e0b625] error {fiber-id=10000005, flow-id=77aba71d-573a-4425-be09-bf68e4e0b625, invocation_id=efbad77b-14f8-4598-9c0d-f981fbf63d34, invocation_timestamp=2021-04-15T13:14:37.216Z, origin=O=InvestorA, L=TestLand, C=US, session_id=efbad77b-14f8-4598-9c0d-f981fbf63d34, session_timestamp=2021-04-15T13:14:37.216Z, thread-id=649}
java.lang.IllegalArgumentException: Payload invalid
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:568) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler.call(ObserverAwareFinalityFlowHandler.kt:27) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler.call(ObserverAwareFinalityFlowHandler.kt:11) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:93) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:72) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
Caused by: java.io.NotSerializableException: Described type with descriptor net.corda:7mttgXO2HdBLwATyV7pCpg== was expected to be of type class com.r3.corda.lib.tokens.workflows.internal.flows.finality.TransactionRole but was class net.corda.core.transactions.SignedTransaction
	at net.corda.serialization.internal.amqp.DeserializationInput.des(DeserializationInput.kt:103) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.DeserializationInput.deserialize(DeserializationInput.kt:120) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.AbstractAMQPSerializationScheme.deserialize(AMQPSerializationScheme.kt:151) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.withCurrentContext(SerializationAPI.kt:71) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:80) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.asCurrent(SerializationAPI.kt:85) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl.deserialize(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:566) ~[corda-core-4.7.jar:?]
	... 21 more
[INFO ] 2021-04-15T13:14:37,374Z [Mock network] corda.flow. - Flow raised an error: Counter-flow errored. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=08751b74-4cdc-42bd-9f70-cb7fff33ce4d, invocation_id=873456df-079e-41db-8d38-99a846433b59, invocation_timestamp=2021-04-15T13:14:37.050Z, origin=Only For Testing, session_id=873456df-079e-41db-8d38-99a846433b59, session_timestamp=2021-04-15T13:14:37.050Z, thread-id=649}
[INFO ] 2021-04-15T13:14:37,376Z [Mock network] statemachine.StaffedFlowHospital. - Flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=873456df-079e-41db-8d38-99a846433b59, timestamp: 2021-04-15T13:14:37.050Z, entityType: Invocation, sessionId=873456df-079e-41db-8d38-99a846433b59, timestamp: 2021-04-15T13:14:37.050Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=-3102446253495974003)=Initiated(peerParty=O=InvestorB, L=TestCity, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=-4451718971574348839), deduplicationSeed=R--3102446253495974003--5417308107243938528), SessionId(toLong=-6507298886939173856)=Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-6507298886939173856), additionalEntropy=-684710363169117683)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-3102446253495974003))]), frozenFiber=1AD2F5C0874976AC1DEBFAF11FA30B2D4A47B97BFF33C95D298F8D460BBF0758), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator@2e66075b, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f6e67e3, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@cade07d], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=301bae56-2848-4b7f-b110-724fe4b0ce1b, reloadCheckpointAfterSuspendCount=null, numberOfCommits=2, lock=java.util.concurrent.Semaphore@61709bae[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=08751b74-4cdc-42bd-9f70-cb7fff33ce4d, invocation_id=873456df-079e-41db-8d38-99a846433b59, invocation_timestamp=2021-04-15T13:14:37.050Z, origin=Only For Testing, session_id=873456df-079e-41db-8d38-99a846433b59, session_timestamp=2021-04-15T13:14:37.050Z, thread-id=649}
[INFO ] 2021-04-15T13:14:37,376Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=08751b74-4cdc-42bd-9f70-cb7fff33ce4d, invocation_id=873456df-079e-41db-8d38-99a846433b59, invocation_timestamp=2021-04-15T13:14:37.050Z, origin=Only For Testing, session_id=873456df-079e-41db-8d38-99a846433b59, session_timestamp=2021-04-15T13:14:37.050Z, thread-id=649}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=InvestorB, L=TestCity, C=US.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:574) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.sendAndReceive(FlowSessionImpl.kt:54) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.sendAndReceive(FlowSessionImpl.kt:61) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.DataVendingFlow.sendPayloadAndReceiveDataRequest(SendTransactionFlow.kt:244) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.DataVendingFlow.call(SendTransactionFlow.kt:127) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.DataVendingFlow.call(SendTransactionFlow.kt:83) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:206) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:177) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:62) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:26) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[INFO ] 2021-04-15T13:14:37,376Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=08751b74-4cdc-42bd-9f70-cb7fff33ce4d, invocation_id=873456df-079e-41db-8d38-99a846433b59, invocation_timestamp=2021-04-15T13:14:37.050Z, origin=Only For Testing, session_id=873456df-079e-41db-8d38-99a846433b59, session_timestamp=2021-04-15T13:14:37.050Z, thread-id=649}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=InvestorB, L=TestCity, C=US.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:574) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.sendAndReceive(FlowSessionImpl.kt:54) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.sendAndReceive(FlowSessionImpl.kt:61) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.DataVendingFlow.sendPayloadAndReceiveDataRequest(SendTransactionFlow.kt:244) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.DataVendingFlow.call(SendTransactionFlow.kt:127) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.DataVendingFlow.call(SendTransactionFlow.kt:83) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:206) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:177) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:62) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:26) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[WARN ] 2021-04-15T13:14:37,388Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] errored, dumping all transitions:

 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.055Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[08751b74-4cdc-42bd-9f70-cb7fff33ce4d], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=873456df-079e-41db-8d38-99a846433b59, timestamp: 2021-04-15T13:14:37.050Z, entityType: Invocation, sessionId=873456df-079e-41db-8d38-99a846433b59, timestamp: 2021-04-15T13:14:37.050Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=EFAFD922B82D4B498EF3B610A0EF91C5F1B455C76EED33490FBA65F271237F85), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@46582c91])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@46582c91])
    SignalFlowHasStarted(flowId=[08751b74-4cdc-42bd-9f70-cb7fff33ce4d])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@46582c91]
    []
isAnyCheckpointPersisted: 
    false
    true


 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.170Z
  Event: InitiateFlow(destination=O=InvestorB, L=TestCity, C=US, wellKnownParty=O=InvestorB, L=TestCity, C=US)
  Actions: 
    AddSessionBinding(flowId=[08751b74-4cdc-42bd-9f70-cb7fff33ce4d], sessionId=SessionId(toLong=-3102446253495974003))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:14:37.052Z
    2021-04-15T13:14:37.170Z
checkpoint.checkpointState.sessions.SessionId(toLong=-3102446253495974003): 
    null
    Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-3102446253495974003), additionalEntropy=-5417308107243938528)


 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.171Z
  Event: InitiateFlow(destination=O=TIE, L=TestVillage, C=US, wellKnownParty=O=TIE, L=TestVillage, C=US)
  Actions: 
    AddSessionBinding(flowId=[08751b74-4cdc-42bd-9f70-cb7fff33ce4d], sessionId=SessionId(toLong=-6507298886939173856))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:14:37.170Z
    2021-04-15T13:14:37.171Z
checkpoint.checkpointState.sessions.SessionId(toLong=-6507298886939173856): 
    null
    Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-6507298886939173856), additionalEntropy=-684710363169117683)


 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.171Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.184Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:14:37.171Z
    2021-04-15T13:14:37.184Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.186Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:14:37.184Z
    2021-04-15T13:14:37.186Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.203Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-3102446253495974003))=FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-3102446253495974003))=4CAC247D7AD4C1A6417E1D2C6075FFE4318D1D1AD5708CDD71F73A78B63FC00B}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=1AD2F5C0874976AC1DEBFAF11FA30B2D4A47B97BFF33C95D298F8D460BBF0758, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[08751b74-4cdc-42bd-9f70-cb7fff33ce4d], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=873456df-079e-41db-8d38-99a846433b59, timestamp: 2021-04-15T13:14:37.050Z, entityType: Invocation, sessionId=873456df-079e-41db-8d38-99a846433b59, timestamp: 2021-04-15T13:14:37.050Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=-3102446253495974003)=Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-3102446253495974003), additionalEntropy=-5417308107243938528), SessionId(toLong=-6507298886939173856)=Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-6507298886939173856), additionalEntropy=-684710363169117683)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-3102446253495974003))=FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-3102446253495974003))=4CAC247D7AD4C1A6417E1D2C6075FFE4318D1D1AD5708CDD71F73A78B63FC00B}, shouldRetrySend=false), frozenFiber=1AD2F5C0874976AC1DEBFAF11FA30B2D4A47B97BFF33C95D298F8D460BBF0758), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2021-04-15T13:14:37.186Z
    2021-04-15T13:14:37.200Z
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=EFAFD922B82D4B498EF3B610A0EF91C5F1B455C76EED33490FBA65F271237F85)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-3102446253495974003))=FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-3102446253495974003))=4CAC247D7AD4C1A6417E1D2C6075FFE4318D1D1AD5708CDD71F73A78B63FC00B}, shouldRetrySend=false), frozenFiber=1AD2F5C0874976AC1DEBFAF11FA30B2D4A47B97BFF33C95D298F8D460BBF0758)
checkpoint.flowIoRequest: 
    null
    SendAndReceive
checkpoint.progressStep: 
    null
    Starting
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2


 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.207Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=InvestorB, L=TestCity, C=US, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-3102446253495974003), initiationEntropy=-5417308107243938528, initiatorFlowClassName=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--3102446253495974003--5417308107243938528-1-0), senderUUID=301bae56-2848-4b7f-b110-724fe4b0ce1b))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:14:37.200Z
    2021-04-15T13:14:37.204Z
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-3102446253495974003))=FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-3102446253495974003))=4CAC247D7AD4C1A6417E1D2C6075FFE4318D1D1AD5708CDD71F73A78B63FC00B}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-3102446253495974003))])
checkpoint.checkpointState.sessions.SessionId(toLong=-3102446253495974003): 
    Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-3102446253495974003), additionalEntropy=-5417308107243938528)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--3102446253495974003--5417308107243938528)


 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.365Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3102446253495974003), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-4451718971574348839), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f6e67e3, sender=O=InvestorB, L=TestCity, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:14:37.204Z
    2021-04-15T13:14:37.365Z
checkpoint.checkpointState.sessions.SessionId(toLong=-3102446253495974003): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--3102446253495974003--5417308107243938528)
    Initiated(peerParty=O=InvestorB, L=TestCity, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-4451718971574348839), deduplicationSeed=R--3102446253495974003--5417308107243938528)
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f6e67e3]


 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.365Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.373Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3102446253495974003), payload=ErrorSessionMessage(flowException=null, errorId=-1502524873520780000)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@cade07d, sender=O=InvestorB, L=TestCity, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:14:37.365Z
    2021-04-15T13:14:37.373Z
checkpoint.checkpointState.sessions.SessionId(toLong=-3102446253495974003).receivedMessages: 
    []
    [ErrorSessionMessage(flowException=null, errorId=-1502524873520780000)]
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f6e67e3]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f6e67e3, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@cade07d]


 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.373Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-3102446253495974003).otherSideErrored: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-3102446253495974003).receivedMessages: 
    [ErrorSessionMessage(flowException=null, errorId=-1502524873520780000)]
    []


 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.374Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:14:37.373Z
    2021-04-15T13:14:37.374Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.374Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.374Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false)]


 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.376Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2021-04-15T13:14:37.374Z
    2021-04-15T13:14:37.375Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-1502524873520780000, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=0, propagating=false)


 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.377Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.377Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:14:37.375Z
    2021-04-15T13:14:37.377Z
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=08751b74-4cdc-42bd-9f70-cb7fff33ce4d, invocation_id=873456df-079e-41db-8d38-99a846433b59, invocation_timestamp=2021-04-15T13:14:37.050Z, origin=Only For Testing, session_id=873456df-079e-41db-8d38-99a846433b59, session_timestamp=2021-04-15T13:14:37.050Z, thread-id=649}
[WARN ] 2021-04-15T13:14:37,388Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] error {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=08751b74-4cdc-42bd-9f70-cb7fff33ce4d, invocation_id=873456df-079e-41db-8d38-99a846433b59, invocation_timestamp=2021-04-15T13:14:37.050Z, origin=Only For Testing, session_id=873456df-079e-41db-8d38-99a846433b59, session_timestamp=2021-04-15T13:14:37.050Z, thread-id=649}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=InvestorB, L=TestCity, C=US.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:574) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.sendAndReceive(FlowSessionImpl.kt:54) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.sendAndReceive(FlowSessionImpl.kt:61) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.DataVendingFlow.sendPayloadAndReceiveDataRequest(SendTransactionFlow.kt:244) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.DataVendingFlow.call(SendTransactionFlow.kt:127) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.DataVendingFlow.call(SendTransactionFlow.kt:83) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:206) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:177) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:62) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:26) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[WARN ] 2021-04-15T13:14:37,388Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=08751b74-4cdc-42bd-9f70-cb7fff33ce4d, invocation_id=873456df-079e-41db-8d38-99a846433b59, invocation_timestamp=2021-04-15T13:14:37.050Z, origin=Only For Testing, session_id=873456df-079e-41db-8d38-99a846433b59, session_timestamp=2021-04-15T13:14:37.050Z, thread-id=649}
[WARN ] 2021-04-15T13:14:37,405Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] errored, dumping all transitions:

 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.055Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[08751b74-4cdc-42bd-9f70-cb7fff33ce4d], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=873456df-079e-41db-8d38-99a846433b59, timestamp: 2021-04-15T13:14:37.050Z, entityType: Invocation, sessionId=873456df-079e-41db-8d38-99a846433b59, timestamp: 2021-04-15T13:14:37.050Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=EFAFD922B82D4B498EF3B610A0EF91C5F1B455C76EED33490FBA65F271237F85), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@46582c91])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@46582c91])
    SignalFlowHasStarted(flowId=[08751b74-4cdc-42bd-9f70-cb7fff33ce4d])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@46582c91]
    []
isAnyCheckpointPersisted: 
    false
    true


 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.170Z
  Event: InitiateFlow(destination=O=InvestorB, L=TestCity, C=US, wellKnownParty=O=InvestorB, L=TestCity, C=US)
  Actions: 
    AddSessionBinding(flowId=[08751b74-4cdc-42bd-9f70-cb7fff33ce4d], sessionId=SessionId(toLong=-3102446253495974003))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:14:37.052Z
    2021-04-15T13:14:37.170Z
checkpoint.checkpointState.sessions.SessionId(toLong=-3102446253495974003): 
    null
    Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-3102446253495974003), additionalEntropy=-5417308107243938528)


 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.171Z
  Event: InitiateFlow(destination=O=TIE, L=TestVillage, C=US, wellKnownParty=O=TIE, L=TestVillage, C=US)
  Actions: 
    AddSessionBinding(flowId=[08751b74-4cdc-42bd-9f70-cb7fff33ce4d], sessionId=SessionId(toLong=-6507298886939173856))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:14:37.170Z
    2021-04-15T13:14:37.171Z
checkpoint.checkpointState.sessions.SessionId(toLong=-6507298886939173856): 
    null
    Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-6507298886939173856), additionalEntropy=-684710363169117683)


 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.171Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.184Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:14:37.171Z
    2021-04-15T13:14:37.184Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.186Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:14:37.184Z
    2021-04-15T13:14:37.186Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.203Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-3102446253495974003))=FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-3102446253495974003))=4CAC247D7AD4C1A6417E1D2C6075FFE4318D1D1AD5708CDD71F73A78B63FC00B}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=1AD2F5C0874976AC1DEBFAF11FA30B2D4A47B97BFF33C95D298F8D460BBF0758, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[08751b74-4cdc-42bd-9f70-cb7fff33ce4d], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=873456df-079e-41db-8d38-99a846433b59, timestamp: 2021-04-15T13:14:37.050Z, entityType: Invocation, sessionId=873456df-079e-41db-8d38-99a846433b59, timestamp: 2021-04-15T13:14:37.050Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=-3102446253495974003)=Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-3102446253495974003), additionalEntropy=-5417308107243938528), SessionId(toLong=-6507298886939173856)=Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-6507298886939173856), additionalEntropy=-684710363169117683)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-3102446253495974003))=FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-3102446253495974003))=4CAC247D7AD4C1A6417E1D2C6075FFE4318D1D1AD5708CDD71F73A78B63FC00B}, shouldRetrySend=false), frozenFiber=1AD2F5C0874976AC1DEBFAF11FA30B2D4A47B97BFF33C95D298F8D460BBF0758), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2021-04-15T13:14:37.186Z
    2021-04-15T13:14:37.200Z
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=EFAFD922B82D4B498EF3B610A0EF91C5F1B455C76EED33490FBA65F271237F85)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-3102446253495974003))=FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-3102446253495974003))=4CAC247D7AD4C1A6417E1D2C6075FFE4318D1D1AD5708CDD71F73A78B63FC00B}, shouldRetrySend=false), frozenFiber=1AD2F5C0874976AC1DEBFAF11FA30B2D4A47B97BFF33C95D298F8D460BBF0758)
checkpoint.flowIoRequest: 
    null
    SendAndReceive
checkpoint.progressStep: 
    null
    Starting
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2


 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.207Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=InvestorB, L=TestCity, C=US, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-3102446253495974003), initiationEntropy=-5417308107243938528, initiatorFlowClassName=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--3102446253495974003--5417308107243938528-1-0), senderUUID=301bae56-2848-4b7f-b110-724fe4b0ce1b))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:14:37.200Z
    2021-04-15T13:14:37.204Z
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-3102446253495974003))=FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-3102446253495974003))=4CAC247D7AD4C1A6417E1D2C6075FFE4318D1D1AD5708CDD71F73A78B63FC00B}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-3102446253495974003))])
checkpoint.checkpointState.sessions.SessionId(toLong=-3102446253495974003): 
    Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-3102446253495974003), additionalEntropy=-5417308107243938528)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--3102446253495974003--5417308107243938528)


 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.365Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3102446253495974003), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-4451718971574348839), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f6e67e3, sender=O=InvestorB, L=TestCity, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:14:37.204Z
    2021-04-15T13:14:37.365Z
checkpoint.checkpointState.sessions.SessionId(toLong=-3102446253495974003): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--3102446253495974003--5417308107243938528)
    Initiated(peerParty=O=InvestorB, L=TestCity, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-4451718971574348839), deduplicationSeed=R--3102446253495974003--5417308107243938528)
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f6e67e3]


 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.365Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.373Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3102446253495974003), payload=ErrorSessionMessage(flowException=null, errorId=-1502524873520780000)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@cade07d, sender=O=InvestorB, L=TestCity, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:14:37.365Z
    2021-04-15T13:14:37.373Z
checkpoint.checkpointState.sessions.SessionId(toLong=-3102446253495974003).receivedMessages: 
    []
    [ErrorSessionMessage(flowException=null, errorId=-1502524873520780000)]
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f6e67e3]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f6e67e3, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@cade07d]


 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.373Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-3102446253495974003).otherSideErrored: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-3102446253495974003).receivedMessages: 
    [ErrorSessionMessage(flowException=null, errorId=-1502524873520780000)]
    []


 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.374Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:14:37.373Z
    2021-04-15T13:14:37.374Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.374Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.374Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false)]


 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.376Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2021-04-15T13:14:37.374Z
    2021-04-15T13:14:37.375Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-1502524873520780000, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=0, propagating=false)


 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.377Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.377Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:14:37.375Z
    2021-04-15T13:14:37.377Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] ---
  Timestamp: 2021-04-15T13:14:37.396Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=-1502524873520780000)], sessions=[], senderUUID=301bae56-2848-4b7f-b110-724fe4b0ce1b)
    CreateTransaction
    RemoveCheckpoint(id=[08751b74-4cdc-42bd-9f70-cb7fff33ce4d], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f6e67e3, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@cade07d])
    ReleaseSoftLocks(uuid=08751b74-4cdc-42bd-9f70-cb7fff33ce4d)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f6e67e3, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@cade07d])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-3102446253495974003), SessionId(toLong=-6507298886939173856)])
    RemoveFlow(flowId=[08751b74-4cdc-42bd-9f70-cb7fff33ce4d], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-1502524873520780000, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=873456df-079e-41db-8d38-99a846433b59, timestamp: 2021-04-15T13:14:37.050Z, entityType: Invocation, sessionId=873456df-079e-41db-8d38-99a846433b59, timestamp: 2021-04-15T13:14:37.050Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=-3102446253495974003)=Initiated(peerParty=O=InvestorB, L=TestCity, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=-4451718971574348839), deduplicationSeed=R--3102446253495974003--5417308107243938528), SessionId(toLong=-6507298886939173856)=Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-6507298886939173856), additionalEntropy=-684710363169117683)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=3E4E8805DFE3601F426C95AB2479EAA300D3D5C8C02E6595B2EF7DDD0F99C230), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=3), flowState=net.corda.node.services.statemachine.FlowState$Finished@73447fbb, errorState=Errored(errors=[FlowError(errorId=-1502524873520780000, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator@2e66075b, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, senderUUID=301bae56-2848-4b7f-b110-724fe4b0ce1b, reloadCheckpointAfterSuspendCount=null, numberOfCommits=3, lock=java.util.concurrent.Semaphore@61709bae[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.timestamp: 
    2021-04-15T13:14:37.377Z
    2021-04-15T13:14:37.388Z
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-3102446253495974003))]), frozenFiber=1AD2F5C0874976AC1DEBFAF11FA30B2D4A47B97BFF33C95D298F8D460BBF0758)
    net.corda.node.services.statemachine.FlowState$Finished@73447fbb
checkpoint.checkpointState.numberOfCommits: 
    2
    3
isRemoved: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f6e67e3, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@cade07d]
    []
numberOfCommits: 
    2
    3
 {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=08751b74-4cdc-42bd-9f70-cb7fff33ce4d, invocation_id=873456df-079e-41db-8d38-99a846433b59, invocation_timestamp=2021-04-15T13:14:37.050Z, origin=Only For Testing, session_id=873456df-079e-41db-8d38-99a846433b59, session_timestamp=2021-04-15T13:14:37.050Z, thread-id=649}
[WARN ] 2021-04-15T13:14:37,405Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [08751b74-4cdc-42bd-9f70-cb7fff33ce4d] error {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=08751b74-4cdc-42bd-9f70-cb7fff33ce4d, invocation_id=873456df-079e-41db-8d38-99a846433b59, invocation_timestamp=2021-04-15T13:14:37.050Z, origin=Only For Testing, session_id=873456df-079e-41db-8d38-99a846433b59, session_timestamp=2021-04-15T13:14:37.050Z, thread-id=649}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=InvestorB, L=TestCity, C=US.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:574) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.sendAndReceive(FlowSessionImpl.kt:54) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.sendAndReceive(FlowSessionImpl.kt:61) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.DataVendingFlow.sendPayloadAndReceiveDataRequest(SendTransactionFlow.kt:244) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.DataVendingFlow.call(SendTransactionFlow.kt:127) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.DataVendingFlow.call(SendTransactionFlow.kt:83) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:206) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:177) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:62) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:26) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[INFO ] 2021-04-15T13:14:37,437Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2021-04-15T13:14:37,469Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:14:37,469Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:14:37,476Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2021-04-15T13:14:37,495Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:14:37,495Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:14:37,500Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2021-04-15T13:14:37,524Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:14:37,524Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:14:37,527Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2021-04-15T13:14:37,548Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:14:37,548Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:17:27,832Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/peterli/Desktop/tokenTest/workflows ... {}
[INFO ] 2021-04-15T13:17:28,075Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:17:29,685Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2021-04-15T13:17:30,690Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2021-04-15T13:17:30,708Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2021-04-15T13:17:30,709Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:17:31,352Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:17:31,384Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2021-04-15T13:17:31,966Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:17:31,966Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:17:31,966Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2021-04-15T13:17:32,179Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:17:32,191Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:17:32,956Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2021-04-15T13:17:33,892Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:17:33,892Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2021-04-15T13:17:33,926Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:17:33,927Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2021-04-15T13:17:33,927Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:17:34,855Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:17:34,856Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2021-04-15T13:17:35,012Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:17:35,012Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2021-04-15T13:17:35,053Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:17:35,053Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2021-04-15T13:17:35,170Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:17:35,170Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:17:35,314Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:17:35,339Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:17:35,411Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2021-04-15T13:17:35,715Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:17:35,715Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2021-04-15T13:17:35,725Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:17:35,736Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2021-04-15T13:17:35,736Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:17:35,780Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:17:35,780Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2021-04-15T13:17:35,790Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:17:35,791Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2021-04-15T13:17:35,791Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:17:35,791Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:17:35,803Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2021-04-15T13:17:35,900Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:17:35,900Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:17:35,923Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:17:35,923Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:17:35,924Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:17:35,924Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:17:35,924Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:17:35,924Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:17:35,924Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:17:35,938Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:17:35,938Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2021-04-15T13:17:35,958Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:17:35,958Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:17:35,980Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2021-04-15T13:17:36,028Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:17:36,028Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2021-04-15T13:17:36,040Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:17:36,040Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2021-04-15T13:17:36,040Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:17:36,052Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:17:36,052Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2021-04-15T13:17:36,052Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:17:36,064Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2021-04-15T13:17:36,064Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:17:36,064Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:17:36,064Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2021-04-15T13:17:36,107Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:17:36,107Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:17:36,107Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:17:36,107Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:17:36,107Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:17:36,108Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:17:36,108Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:17:36,108Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:17:36,108Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:17:36,108Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:17:36,108Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:17:36,118Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:17:36,118Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2021-04-15T13:17:37,868Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:17:37,878Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:17:37,879Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2021-04-15T13:17:37,879Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:17:37,880Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:17:37,890Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/peterli/Desktop/tokenTest/.gradle {}
[INFO ] 2021-04-15T13:17:37,891Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:17:37,915Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2021-04-15T13:17:43,001Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/0/cordapps] {}
[INFO ] 2021-04-15T13:17:43,009Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:17:43,022Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:17:43,136Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:17:43,152Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:17:43,205Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:17:44,888Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:17:45,190Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:17:45,266Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:17:45,287Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:17:45,291Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLEn65Sm5QtHUc87YQhmDciUka9tiZaPodsQhQHrEJHdRe, alias: identity-private-key {}
[INFO ] 2021-04-15T13:17:45,454Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:17:45,456Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:17:45,461Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:17:45,461Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:17:45,462Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:17:45,463Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:17:45,463Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:17:45,464Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:17:45,464Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:17:45,465Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:17:45,465Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:17:45,466Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:17:45,467Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:17:45,468Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:17:45,468Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:17:45,505Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:17:45,619Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:17:23.679Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:17:52,266Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:17:52,387Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-04-15T13:17:52,395Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-04-15T13:17:55,826Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-04-15T13:17:56,343Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:17:56,352Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618492676343), owningKey=DLEn65Sm5QtHUc87YQhmDciUka9tiZaPodsQhQHrEJHdRe {}
[INFO ] 2021-04-15T13:17:56,352Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:17:56,550Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618492676343) {}
[INFO ] 2021-04-15T13:17:56,623Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:17:56,659Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:17:56,661Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:17:56,699Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618492676343), owningKey=DLEn65Sm5QtHUc87YQhmDciUka9tiZaPodsQhQHrEJHdRe {}
[INFO ] 2021-04-15T13:17:56,700Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:17:56,824Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:17:56,853Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:17:56,868Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:17:56,882Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:17:56,970Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:17:57,077Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:17:57,078Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-04-15T13:17:57,952Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618492676343) {}
[INFO ] 2021-04-15T13:17:57,960Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618492676343), owningKey=DLEn65Sm5QtHUc87YQhmDciUka9tiZaPodsQhQHrEJHdRe {}
[INFO ] 2021-04-15T13:17:57,960Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:17:57,961Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618492676343), owningKey=DLEn65Sm5QtHUc87YQhmDciUka9tiZaPodsQhQHrEJHdRe {}
[INFO ] 2021-04-15T13:17:57,961Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:17:57,972Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/1/cordapps] {}
[INFO ] 2021-04-15T13:17:57,973Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:17:57,973Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:17:57,981Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:17:57,988Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:17:57,999Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:17:58,050Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:17:58,051Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:17:58,052Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:17:58,100Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:17:58,105Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLBLzzMnAyKxC3cE8MpwLutvFHs6txL13ZtqrFLmA3gNHG, alias: identity-private-key {}
[INFO ] 2021-04-15T13:17:58,114Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:17:58,114Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:17:58,114Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:17:58,114Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:17:58,114Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:17:58,114Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:17:58,115Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:17:58,115Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:17:58,115Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:17:58,115Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:17:58,115Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:17:58,115Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:17:58,115Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:17:58,115Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:17:58,115Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:17:58,115Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:17:58,121Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:17:23.679Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:17:58,913Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:17:58,915Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:17:58,915Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:17:59,148Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:17:59,157Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:17:59,164Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618492679157), owningKey=DLBLzzMnAyKxC3cE8MpwLutvFHs6txL13ZtqrFLmA3gNHG {}
[INFO ] 2021-04-15T13:17:59,164Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:17:59,176Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618492679157) {}
[INFO ] 2021-04-15T13:17:59,186Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:17:59,186Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:17:59,186Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:17:59,199Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618492679157), owningKey=DLBLzzMnAyKxC3cE8MpwLutvFHs6txL13ZtqrFLmA3gNHG {}
[INFO ] 2021-04-15T13:17:59,199Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:17:59,241Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:17:59,271Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:17:59,274Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:17:59,274Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:17:59,275Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:17:59,284Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:17:59,321Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618492679157) {}
[INFO ] 2021-04-15T13:17:59,324Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618492676343), owningKey=DLEn65Sm5QtHUc87YQhmDciUka9tiZaPodsQhQHrEJHdRe {}
[INFO ] 2021-04-15T13:17:59,324Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:17:59,346Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618492679157), owningKey=DLBLzzMnAyKxC3cE8MpwLutvFHs6txL13ZtqrFLmA3gNHG {}
[INFO ] 2021-04-15T13:17:59,346Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:17:59,363Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618492679157), owningKey=DLBLzzMnAyKxC3cE8MpwLutvFHs6txL13ZtqrFLmA3gNHG {}
[INFO ] 2021-04-15T13:17:59,363Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:17:59,363Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618492679157), owningKey=DLBLzzMnAyKxC3cE8MpwLutvFHs6txL13ZtqrFLmA3gNHG {}
[INFO ] 2021-04-15T13:17:59,363Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:17:59,376Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/2/cordapps] {}
[INFO ] 2021-04-15T13:17:59,377Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:17:59,377Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:17:59,386Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:17:59,393Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:17:59,403Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:17:59,452Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:17:59,453Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:17:59,454Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:17:59,500Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:17:59,500Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLBYXwYBC6z9mjDSDGnKT5YuYmGaJVh3ek9isNQTC9G36s, alias: identity-private-key {}
[INFO ] 2021-04-15T13:17:59,510Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:17:59,510Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:17:59,510Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:17:59,510Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:17:59,510Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:17:59,510Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:17:59,511Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:17:59,511Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:17:59,511Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:17:59,511Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:17:59,511Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:17:59,511Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:17:59,511Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:17:59,511Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:17:59,511Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:17:59,511Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:17:59,518Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:17:23.679Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:18:00,202Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:18:00,203Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:18:00,204Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:18:00,412Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:18:00,419Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:18:00,423Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618492680419), owningKey=DLBYXwYBC6z9mjDSDGnKT5YuYmGaJVh3ek9isNQTC9G36s {}
[INFO ] 2021-04-15T13:18:00,423Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:18:00,435Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618492680419) {}
[INFO ] 2021-04-15T13:18:00,446Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:18:00,447Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:18:00,447Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:18:00,459Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618492680419), owningKey=DLBYXwYBC6z9mjDSDGnKT5YuYmGaJVh3ek9isNQTC9G36s {}
[INFO ] 2021-04-15T13:18:00,459Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:18:00,495Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:18:00,525Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:18:00,528Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:18:00,529Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:18:00,529Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:18:00,537Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:18:00,565Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618492680419) {}
[INFO ] 2021-04-15T13:18:00,567Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618492676343), owningKey=DLEn65Sm5QtHUc87YQhmDciUka9tiZaPodsQhQHrEJHdRe {}
[INFO ] 2021-04-15T13:18:00,567Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:18:00,586Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618492680419), owningKey=DLBYXwYBC6z9mjDSDGnKT5YuYmGaJVh3ek9isNQTC9G36s {}
[INFO ] 2021-04-15T13:18:00,586Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:18:00,604Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618492679157), owningKey=DLBLzzMnAyKxC3cE8MpwLutvFHs6txL13ZtqrFLmA3gNHG {}
[INFO ] 2021-04-15T13:18:00,604Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:18:00,622Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618492680419), owningKey=DLBYXwYBC6z9mjDSDGnKT5YuYmGaJVh3ek9isNQTC9G36s {}
[INFO ] 2021-04-15T13:18:00,622Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:18:00,637Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618492680419), owningKey=DLBYXwYBC6z9mjDSDGnKT5YuYmGaJVh3ek9isNQTC9G36s {}
[INFO ] 2021-04-15T13:18:00,637Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:18:00,637Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618492680419), owningKey=DLBYXwYBC6z9mjDSDGnKT5YuYmGaJVh3ek9isNQTC9G36s {}
[INFO ] 2021-04-15T13:18:00,637Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:18:00,653Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/3/cordapps] {}
[INFO ] 2021-04-15T13:18:00,653Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/3/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/3/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/3/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/3/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:18:00,653Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/3/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:18:00,662Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/3/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:18:00,668Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/3/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:18:00,690Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/3/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:18:00,743Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:18:00,744Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:18:00,746Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:18:00,791Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:18:00,791Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLH77Rbd4hhVe7rdtgBEtWd3DYAu4wSRdv91sc28ZsyZjf, alias: identity-private-key {}
[INFO ] 2021-04-15T13:18:00,803Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:18:00,803Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:18:00,803Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:18:00,803Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:18:00,804Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:18:00,804Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:18:00,804Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:18:00,804Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:18:00,804Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:18:00,804Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:18:00,804Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:18:00,804Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:18:00,804Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:18:00,804Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:18:00,805Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:18:00,805Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:18:00,809Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:17:23.679Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:18:01,437Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:18:01,438Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:18:01,438Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:18:01,663Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:18:01,671Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:18:01,676Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618492681671), owningKey=DLH77Rbd4hhVe7rdtgBEtWd3DYAu4wSRdv91sc28ZsyZjf {}
[INFO ] 2021-04-15T13:18:01,676Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:18:01,688Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618492681671) {}
[INFO ] 2021-04-15T13:18:01,697Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:18:01,698Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:18:01,698Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:18:01,709Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618492681671), owningKey=DLH77Rbd4hhVe7rdtgBEtWd3DYAu4wSRdv91sc28ZsyZjf {}
[INFO ] 2021-04-15T13:18:01,709Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:18:01,750Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:18:01,781Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:18:01,785Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:18:01,785Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-131726.316-AB8EF04CA005DF83/nodes/3/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:18:01,786Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:18:01,794Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:18:01,824Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618492681671) {}
[INFO ] 2021-04-15T13:18:01,827Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618492676343), owningKey=DLEn65Sm5QtHUc87YQhmDciUka9tiZaPodsQhQHrEJHdRe {}
[INFO ] 2021-04-15T13:18:01,827Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:18:01,843Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618492681671), owningKey=DLH77Rbd4hhVe7rdtgBEtWd3DYAu4wSRdv91sc28ZsyZjf {}
[INFO ] 2021-04-15T13:18:01,843Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:18:01,866Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618492679157), owningKey=DLBLzzMnAyKxC3cE8MpwLutvFHs6txL13ZtqrFLmA3gNHG {}
[INFO ] 2021-04-15T13:18:01,866Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:18:01,881Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618492681671), owningKey=DLH77Rbd4hhVe7rdtgBEtWd3DYAu4wSRdv91sc28ZsyZjf {}
[INFO ] 2021-04-15T13:18:01,881Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:18:01,897Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618492680419), owningKey=DLBYXwYBC6z9mjDSDGnKT5YuYmGaJVh3ek9isNQTC9G36s {}
[INFO ] 2021-04-15T13:18:01,897Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:18:01,914Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618492681671), owningKey=DLH77Rbd4hhVe7rdtgBEtWd3DYAu4wSRdv91sc28ZsyZjf {}
[INFO ] 2021-04-15T13:18:01,914Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:18:01,930Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618492681671), owningKey=DLH77Rbd4hhVe7rdtgBEtWd3DYAu4wSRdv91sc28ZsyZjf {}
[INFO ] 2021-04-15T13:18:01,930Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:18:01,930Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618492681671), owningKey=DLH77Rbd4hhVe7rdtgBEtWd3DYAu4wSRdv91sc28ZsyZjf {}
[INFO ] 2021-04-15T13:18:01,930Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:18:02,759Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=8efa3f78-7567-4568-a1a8-5aa46a1d0299, invocation_id=823d44d1-c04e-4a45-a242-8c05de76dd1a, invocation_timestamp=2021-04-15T13:18:01.980Z, origin=Only For Testing, session_id=823d44d1-c04e-4a45-a242-8c05de76dd1a, session_timestamp=2021-04-15T13:18:01.980Z, thread-id=649, tx_id=D629DBE79DA4370C312CBDB66F6A8538D18AF041B960463C9A29DFB8DCCEF212}
[INFO ] 2021-04-15T13:18:02,759Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=8efa3f78-7567-4568-a1a8-5aa46a1d0299, invocation_id=823d44d1-c04e-4a45-a242-8c05de76dd1a, invocation_timestamp=2021-04-15T13:18:01.980Z, origin=Only For Testing, session_id=823d44d1-c04e-4a45-a242-8c05de76dd1a, session_timestamp=2021-04-15T13:18:01.980Z, thread-id=649, tx_id=D629DBE79DA4370C312CBDB66F6A8538D18AF041B960463C9A29DFB8DCCEF212}
[INFO ] 2021-04-15T13:18:02,898Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=8efa3f78-7567-4568-a1a8-5aa46a1d0299, invocation_id=823d44d1-c04e-4a45-a242-8c05de76dd1a, invocation_timestamp=2021-04-15T13:18:01.980Z, origin=Only For Testing, session_id=823d44d1-c04e-4a45-a242-8c05de76dd1a, session_timestamp=2021-04-15T13:18:01.980Z, thread-id=649, tx_id=D629DBE79DA4370C312CBDB66F6A8538D18AF041B960463C9A29DFB8DCCEF212}
[INFO ] 2021-04-15T13:18:02,899Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=8efa3f78-7567-4568-a1a8-5aa46a1d0299, invocation_id=823d44d1-c04e-4a45-a242-8c05de76dd1a, invocation_timestamp=2021-04-15T13:18:01.980Z, origin=Only For Testing, session_id=823d44d1-c04e-4a45-a242-8c05de76dd1a, session_timestamp=2021-04-15T13:18:01.980Z, thread-id=649, tx_id=D629DBE79DA4370C312CBDB66F6A8538D18AF041B960463C9A29DFB8DCCEF212}
[INFO ] 2021-04-15T13:18:03,360Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary, L=London, C=GB. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=c484ad48-78cf-4316-bc96-9f08aa9d261a, invocation_id=f14b99b9-012d-4c60-a260-df00630ae6c3, invocation_timestamp=2021-04-15T13:18:03.005Z, origin=Only For Testing, session_id=f14b99b9-012d-4c60-a260-df00630ae6c3, session_timestamp=2021-04-15T13:18:03.005Z, thread-id=649, tx_id=97643DF836B3AA4FFFC0D8F2F36EA8938CD6CD23AC08D9FE78A8E7D804A0B81E}
[INFO ] 2021-04-15T13:18:03,510Z [Mock network] corda.flow. - Received a notarisation request for Tx [97643DF836B3AA4FFFC0D8F2F36EA8938CD6CD23AC08D9FE78A8E7D804A0B81E] from [O=InvestorA, L=TestLand, C=US] {fiber-id=10000003, flow-id=83301bf2-b865-46ec-9c9b-08ee3e2d52eb, invocation_id=0a9f22b7-ec91-4fc4-a57b-331e439eb8fc, invocation_timestamp=2021-04-15T13:18:03.470Z, origin=O=InvestorA, L=TestLand, C=US, session_id=0a9f22b7-ec91-4fc4-a57b-331e439eb8fc, session_timestamp=2021-04-15T13:18:03.470Z, thread-id=649}
[INFO ] 2021-04-15T13:18:04,261Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 0 input states and 1 references {}
[INFO ] 2021-04-15T13:18:04,297Z [Mock network] corda.flow. - Transaction [97643DF836B3AA4FFFC0D8F2F36EA8938CD6CD23AC08D9FE78A8E7D804A0B81E] successfully notarised, sending signature back to [O=InvestorA, L=TestLand, C=US] {fiber-id=10000003, flow-id=83301bf2-b865-46ec-9c9b-08ee3e2d52eb, invocation_id=0a9f22b7-ec91-4fc4-a57b-331e439eb8fc, invocation_timestamp=2021-04-15T13:18:03.470Z, origin=O=InvestorA, L=TestLand, C=US, session_id=0a9f22b7-ec91-4fc4-a57b-331e439eb8fc, session_timestamp=2021-04-15T13:18:03.470Z, thread-id=649}
[INFO ] 2021-04-15T13:18:04,360Z [Mock network] corda.flow. - Notary responded (O=Notary, L=London, C=GB). {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=c484ad48-78cf-4316-bc96-9f08aa9d261a, invocation_id=f14b99b9-012d-4c60-a260-df00630ae6c3, invocation_timestamp=2021-04-15T13:18:03.005Z, origin=Only For Testing, session_id=f14b99b9-012d-4c60-a260-df00630ae6c3, session_timestamp=2021-04-15T13:18:03.005Z, thread-id=649, tx_id=97643DF836B3AA4FFFC0D8F2F36EA8938CD6CD23AC08D9FE78A8E7D804A0B81E}
[INFO ] 2021-04-15T13:18:04,361Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=c484ad48-78cf-4316-bc96-9f08aa9d261a, invocation_id=f14b99b9-012d-4c60-a260-df00630ae6c3, invocation_timestamp=2021-04-15T13:18:03.005Z, origin=Only For Testing, session_id=f14b99b9-012d-4c60-a260-df00630ae6c3, session_timestamp=2021-04-15T13:18:03.005Z, thread-id=649, tx_id=97643DF836B3AA4FFFC0D8F2F36EA8938CD6CD23AC08D9FE78A8E7D804A0B81E}
[INFO ] 2021-04-15T13:18:04,399Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=c484ad48-78cf-4316-bc96-9f08aa9d261a, invocation_id=f14b99b9-012d-4c60-a260-df00630ae6c3, invocation_timestamp=2021-04-15T13:18:03.005Z, origin=Only For Testing, session_id=f14b99b9-012d-4c60-a260-df00630ae6c3, session_timestamp=2021-04-15T13:18:03.005Z, thread-id=649, tx_id=97643DF836B3AA4FFFC0D8F2F36EA8938CD6CD23AC08D9FE78A8E7D804A0B81E}
[INFO ] 2021-04-15T13:18:04,399Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=c484ad48-78cf-4316-bc96-9f08aa9d261a, invocation_id=f14b99b9-012d-4c60-a260-df00630ae6c3, invocation_timestamp=2021-04-15T13:18:03.005Z, origin=Only For Testing, session_id=f14b99b9-012d-4c60-a260-df00630ae6c3, session_timestamp=2021-04-15T13:18:03.005Z, thread-id=649, tx_id=97643DF836B3AA4FFFC0D8F2F36EA8938CD6CD23AC08D9FE78A8E7D804A0B81E}
[INFO ] 2021-04-15T13:18:04,673Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary, L=London, C=GB. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=7acfc17e-9d9c-4a65-b5c4-f73f5680c184, invocation_id=82081eb1-516a-4fbd-a311-54f3f9946b64, invocation_timestamp=2021-04-15T13:18:04.485Z, origin=Only For Testing, session_id=82081eb1-516a-4fbd-a311-54f3f9946b64, session_timestamp=2021-04-15T13:18:04.485Z, thread-id=649, tx_id=93E0BA91322446DA706A3418BDE43641509A4C9C451E6DD59319F57ED4011EAD}
[INFO ] 2021-04-15T13:18:04,707Z [Mock network] corda.flow. - Received a notarisation request for Tx [93E0BA91322446DA706A3418BDE43641509A4C9C451E6DD59319F57ED4011EAD] from [O=InvestorA, L=TestLand, C=US] {fiber-id=10000005, flow-id=5a022f34-40ee-4a5e-8b68-d089a8835a14, invocation_id=0a94b749-8df4-4122-9d63-261dc761a447, invocation_timestamp=2021-04-15T13:18:04.695Z, origin=O=InvestorA, L=TestLand, C=US, session_id=0a94b749-8df4-4122-9d63-261dc761a447, session_timestamp=2021-04-15T13:18:04.695Z, thread-id=649}
[ERROR] 2021-04-15T13:18:04,766Z [Mock network] amqp.DeserializationInput. - Serialization failed direction="Deserialize", type="net.corda.core.transactions.SignedTransaction", msg="Described type with descriptor net.corda:vlc3i8lJnO7K1i2g0g0+aA== was expected to be of type class net.corda.core.transactions.SignedTransaction but was class com.r3.corda.lib.tokens.workflows.internal.flows.finality.TransactionRole", ClassChain="net.corda.core.transactions.SignedTransaction" {fiber-id=10000006, flow-id=0168805f-4799-4734-9be0-42579082bbb4, invocation_id=a65e34f4-155e-43fa-bd4a-397474feec6a, invocation_timestamp=2021-04-15T13:18:04.736Z, origin=O=InvestorA, L=TestLand, C=US, session_id=a65e34f4-155e-43fa-bd4a-397474feec6a, session_timestamp=2021-04-15T13:18:04.736Z, thread-id=649}
[INFO ] 2021-04-15T13:18:04,767Z [Mock network] corda.flow. - Flow raised an error: Payload invalid. Sending it to flow hospital to be triaged. {fiber-id=10000006, flow-id=0168805f-4799-4734-9be0-42579082bbb4, invocation_id=a65e34f4-155e-43fa-bd4a-397474feec6a, invocation_timestamp=2021-04-15T13:18:04.736Z, origin=O=InvestorA, L=TestLand, C=US, session_id=a65e34f4-155e-43fa-bd4a-397474feec6a, session_timestamp=2021-04-15T13:18:04.736Z, thread-id=649}
[INFO ] 2021-04-15T13:18:04,770Z [Mock network] statemachine.StaffedFlowHospital. - Flow [0168805f-4799-4734-9be0-42579082bbb4] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=a65e34f4-155e-43fa-bd4a-397474feec6a, timestamp: 2021-04-15T13:18:04.736Z, entityType: Invocation, sessionId=a65e34f4-155e-43fa-bd4a-397474feec6a, timestamp: 2021-04-15T13:18:04.736Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={SessionId(toLong=3311962895803091771)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7417116133110659815), deduplicationSeed=D-7417116133110659815--4721346096929140260)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3311962895803091771))]), frozenFiber=BF9003219914B4F6C22B659A643468F95252350C02778E8AE3894943F9C01731), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@43baa7fe, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=8a8161b1-85b5-4d59-ba54-c33844924dd6, reloadCheckpointAfterSuspendCount=null, numberOfCommits=2, lock=java.util.concurrent.Semaphore@2efbdbc1[Permits = 0]) {fiber-id=10000006, flow-id=0168805f-4799-4734-9be0-42579082bbb4, invocation_id=a65e34f4-155e-43fa-bd4a-397474feec6a, invocation_timestamp=2021-04-15T13:18:04.736Z, origin=O=InvestorA, L=TestLand, C=US, session_id=a65e34f4-155e-43fa-bd4a-397474feec6a, session_timestamp=2021-04-15T13:18:04.736Z, thread-id=649}
[INFO ] 2021-04-15T13:18:04,773Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {fiber-id=10000006, flow-id=0168805f-4799-4734-9be0-42579082bbb4, invocation_id=a65e34f4-155e-43fa-bd4a-397474feec6a, invocation_timestamp=2021-04-15T13:18:04.736Z, origin=O=InvestorA, L=TestLand, C=US, session_id=a65e34f4-155e-43fa-bd4a-397474feec6a, session_timestamp=2021-04-15T13:18:04.736Z, thread-id=649}
java.lang.IllegalArgumentException: Payload invalid
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:568) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:277) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:85) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:72) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
Caused by: java.io.NotSerializableException: Described type with descriptor net.corda:vlc3i8lJnO7K1i2g0g0+aA== was expected to be of type class net.corda.core.transactions.SignedTransaction but was class com.r3.corda.lib.tokens.workflows.internal.flows.finality.TransactionRole
	at net.corda.serialization.internal.amqp.DeserializationInput.des(DeserializationInput.kt:103) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.DeserializationInput.deserialize(DeserializationInput.kt:120) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.AbstractAMQPSerializationScheme.deserialize(AMQPSerializationScheme.kt:151) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.withCurrentContext(SerializationAPI.kt:71) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:80) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.asCurrent(SerializationAPI.kt:85) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl.deserialize(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:566) ~[corda-core-4.7.jar:?]
	... 25 more
[INFO ] 2021-04-15T13:18:04,776Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {fiber-id=10000006, flow-id=0168805f-4799-4734-9be0-42579082bbb4, invocation_id=a65e34f4-155e-43fa-bd4a-397474feec6a, invocation_timestamp=2021-04-15T13:18:04.736Z, origin=O=InvestorA, L=TestLand, C=US, session_id=a65e34f4-155e-43fa-bd4a-397474feec6a, session_timestamp=2021-04-15T13:18:04.736Z, thread-id=649}
java.lang.IllegalArgumentException: Payload invalid
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:568) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:277) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:85) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:72) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
Caused by: java.io.NotSerializableException: Described type with descriptor net.corda:vlc3i8lJnO7K1i2g0g0+aA== was expected to be of type class net.corda.core.transactions.SignedTransaction but was class com.r3.corda.lib.tokens.workflows.internal.flows.finality.TransactionRole
	at net.corda.serialization.internal.amqp.DeserializationInput.des(DeserializationInput.kt:103) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.DeserializationInput.deserialize(DeserializationInput.kt:120) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.AbstractAMQPSerializationScheme.deserialize(AMQPSerializationScheme.kt:151) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.withCurrentContext(SerializationAPI.kt:71) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:80) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.asCurrent(SerializationAPI.kt:85) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl.deserialize(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:566) ~[corda-core-4.7.jar:?]
	... 25 more
[WARN ] 2021-04-15T13:18:04,802Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [0168805f-4799-4734-9be0-42579082bbb4] errored, dumping all transitions:

 --- Transition of flow [0168805f-4799-4734-9be0-42579082bbb4] ---
  Timestamp: 2021-04-15T13:18:04.745Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[0168805f-4799-4734-9be0-42579082bbb4], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=a65e34f4-155e-43fa-bd4a-397474feec6a, timestamp: 2021-04-15T13:18:04.736Z, entityType: Invocation, sessionId=a65e34f4-155e-43fa-bd4a-397474feec6a, timestamp: 2021-04-15T13:18:04.736Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=B16669485912DF406CD612548BBD71F30327E957ABB37746A9D5106182318521), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@20185053])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@20185053])
    SignalFlowHasStarted(flowId=[0168805f-4799-4734-9be0-42579082bbb4])
    SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7417116133110659815), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=3311962895803091771), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-7417116133110659815--4721346096929140260-0-0), senderUUID=8a8161b1-85b5-4d59-ba54-c33844924dd6))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=3311962895803091771): 
    null
    Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7417116133110659815), deduplicationSeed=D-7417116133110659815--4721346096929140260)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@20185053]
    []


 --- Transition of flow [0168805f-4799-4734-9be0-42579082bbb4] ---
  Timestamp: 2021-04-15T13:18:04.750Z
  Event: EnterSubFlow(subFlowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:04.737Z
    2021-04-15T13:18:04.750Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [0168805f-4799-4734-9be0-42579082bbb4] ---
  Timestamp: 2021-04-15T13:18:04.753Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:04.750Z
    2021-04-15T13:18:04.753Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [0168805f-4799-4734-9be0-42579082bbb4] ---
  Timestamp: 2021-04-15T13:18:04.763Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3311962895803091771))]), maySkipCheckpoint=false, fiber=BF9003219914B4F6C22B659A643468F95252350C02778E8AE3894943F9C01731, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[0168805f-4799-4734-9be0-42579082bbb4], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=a65e34f4-155e-43fa-bd4a-397474feec6a, timestamp: 2021-04-15T13:18:04.736Z, entityType: Invocation, sessionId=a65e34f4-155e-43fa-bd4a-397474feec6a, timestamp: 2021-04-15T13:18:04.736Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={SessionId(toLong=3311962895803091771)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7417116133110659815), deduplicationSeed=D-7417116133110659815--4721346096929140260)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3311962895803091771))]), frozenFiber=BF9003219914B4F6C22B659A643468F95252350C02778E8AE3894943F9C01731), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=B16669485912DF406CD612548BBD71F30327E957ABB37746A9D5106182318521)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3311962895803091771))]), frozenFiber=BF9003219914B4F6C22B659A643468F95252350C02778E8AE3894943F9C01731)
checkpoint.timestamp: 
    2021-04-15T13:18:04.753Z
    2021-04-15T13:18:04.760Z
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.progressStep: 
    null
    Starting
numberOfCommits: 
    0
    2


 --- Transition of flow [0168805f-4799-4734-9be0-42579082bbb4] ---
  Timestamp: 2021-04-15T13:18:04.763Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:18:04.760Z
    2021-04-15T13:18:04.763Z
checkpoint.checkpointState.sessions.SessionId(toLong=3311962895803091771).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [0168805f-4799-4734-9be0-42579082bbb4] ---
  Timestamp: 2021-04-15T13:18:04.767Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:04.763Z
    2021-04-15T13:18:04.767Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [0168805f-4799-4734-9be0-42579082bbb4] ---
  Timestamp: 2021-04-15T13:18:04.767Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false)]


 --- Transition of flow [0168805f-4799-4734-9be0-42579082bbb4] ---
  Timestamp: 2021-04-15T13:18:04.778Z
  Event: Error(exception=java.lang.IllegalArgumentException: Payload invalid, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2021-04-15T13:18:04.767Z
    2021-04-15T13:18:04.769Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=3246541615951131585, exception=java.lang.IllegalArgumentException: Payload invalid)], propagatedIndex=0, propagating=false)


 --- Transition of flow [0168805f-4799-4734-9be0-42579082bbb4] ---
  Timestamp: 2021-04-15T13:18:04.781Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [0168805f-4799-4734-9be0-42579082bbb4] ---
  Timestamp: 2021-04-15T13:18:04.783Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:04.769Z
    2021-04-15T13:18:04.782Z
checkpoint.errorState.propagating: 
    false
    true
 {fiber-id=10000006, flow-id=0168805f-4799-4734-9be0-42579082bbb4, invocation_id=a65e34f4-155e-43fa-bd4a-397474feec6a, invocation_timestamp=2021-04-15T13:18:04.736Z, origin=O=InvestorA, L=TestLand, C=US, session_id=a65e34f4-155e-43fa-bd4a-397474feec6a, session_timestamp=2021-04-15T13:18:04.736Z, thread-id=649}
[WARN ] 2021-04-15T13:18:04,802Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [0168805f-4799-4734-9be0-42579082bbb4] error {fiber-id=10000006, flow-id=0168805f-4799-4734-9be0-42579082bbb4, invocation_id=a65e34f4-155e-43fa-bd4a-397474feec6a, invocation_timestamp=2021-04-15T13:18:04.736Z, origin=O=InvestorA, L=TestLand, C=US, session_id=a65e34f4-155e-43fa-bd4a-397474feec6a, session_timestamp=2021-04-15T13:18:04.736Z, thread-id=649}
java.lang.IllegalArgumentException: Payload invalid
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:568) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:277) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:85) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:72) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
Caused by: java.io.NotSerializableException: Described type with descriptor net.corda:vlc3i8lJnO7K1i2g0g0+aA== was expected to be of type class net.corda.core.transactions.SignedTransaction but was class com.r3.corda.lib.tokens.workflows.internal.flows.finality.TransactionRole
	at net.corda.serialization.internal.amqp.DeserializationInput.des(DeserializationInput.kt:103) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.DeserializationInput.deserialize(DeserializationInput.kt:120) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.AbstractAMQPSerializationScheme.deserialize(AMQPSerializationScheme.kt:151) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.withCurrentContext(SerializationAPI.kt:71) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:80) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.asCurrent(SerializationAPI.kt:85) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl.deserialize(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:566) ~[corda-core-4.7.jar:?]
	... 25 more
[WARN ] 2021-04-15T13:18:04,803Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {fiber-id=10000006, flow-id=0168805f-4799-4734-9be0-42579082bbb4, invocation_id=a65e34f4-155e-43fa-bd4a-397474feec6a, invocation_timestamp=2021-04-15T13:18:04.736Z, origin=O=InvestorA, L=TestLand, C=US, session_id=a65e34f4-155e-43fa-bd4a-397474feec6a, session_timestamp=2021-04-15T13:18:04.736Z, thread-id=649}
[WARN ] 2021-04-15T13:18:04,864Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [0168805f-4799-4734-9be0-42579082bbb4] errored, dumping all transitions:

 --- Transition of flow [0168805f-4799-4734-9be0-42579082bbb4] ---
  Timestamp: 2021-04-15T13:18:04.745Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[0168805f-4799-4734-9be0-42579082bbb4], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=a65e34f4-155e-43fa-bd4a-397474feec6a, timestamp: 2021-04-15T13:18:04.736Z, entityType: Invocation, sessionId=a65e34f4-155e-43fa-bd4a-397474feec6a, timestamp: 2021-04-15T13:18:04.736Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=B16669485912DF406CD612548BBD71F30327E957ABB37746A9D5106182318521), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@20185053])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@20185053])
    SignalFlowHasStarted(flowId=[0168805f-4799-4734-9be0-42579082bbb4])
    SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7417116133110659815), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=3311962895803091771), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-7417116133110659815--4721346096929140260-0-0), senderUUID=8a8161b1-85b5-4d59-ba54-c33844924dd6))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=3311962895803091771): 
    null
    Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7417116133110659815), deduplicationSeed=D-7417116133110659815--4721346096929140260)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@20185053]
    []


 --- Transition of flow [0168805f-4799-4734-9be0-42579082bbb4] ---
  Timestamp: 2021-04-15T13:18:04.750Z
  Event: EnterSubFlow(subFlowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:04.737Z
    2021-04-15T13:18:04.750Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [0168805f-4799-4734-9be0-42579082bbb4] ---
  Timestamp: 2021-04-15T13:18:04.753Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:04.750Z
    2021-04-15T13:18:04.753Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [0168805f-4799-4734-9be0-42579082bbb4] ---
  Timestamp: 2021-04-15T13:18:04.763Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3311962895803091771))]), maySkipCheckpoint=false, fiber=BF9003219914B4F6C22B659A643468F95252350C02778E8AE3894943F9C01731, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[0168805f-4799-4734-9be0-42579082bbb4], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=a65e34f4-155e-43fa-bd4a-397474feec6a, timestamp: 2021-04-15T13:18:04.736Z, entityType: Invocation, sessionId=a65e34f4-155e-43fa-bd4a-397474feec6a, timestamp: 2021-04-15T13:18:04.736Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={SessionId(toLong=3311962895803091771)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7417116133110659815), deduplicationSeed=D-7417116133110659815--4721346096929140260)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3311962895803091771))]), frozenFiber=BF9003219914B4F6C22B659A643468F95252350C02778E8AE3894943F9C01731), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=B16669485912DF406CD612548BBD71F30327E957ABB37746A9D5106182318521)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3311962895803091771))]), frozenFiber=BF9003219914B4F6C22B659A643468F95252350C02778E8AE3894943F9C01731)
checkpoint.timestamp: 
    2021-04-15T13:18:04.753Z
    2021-04-15T13:18:04.760Z
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.progressStep: 
    null
    Starting
numberOfCommits: 
    0
    2


 --- Transition of flow [0168805f-4799-4734-9be0-42579082bbb4] ---
  Timestamp: 2021-04-15T13:18:04.763Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:18:04.760Z
    2021-04-15T13:18:04.763Z
checkpoint.checkpointState.sessions.SessionId(toLong=3311962895803091771).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [0168805f-4799-4734-9be0-42579082bbb4] ---
  Timestamp: 2021-04-15T13:18:04.767Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:04.763Z
    2021-04-15T13:18:04.767Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [0168805f-4799-4734-9be0-42579082bbb4] ---
  Timestamp: 2021-04-15T13:18:04.767Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false)]


 --- Transition of flow [0168805f-4799-4734-9be0-42579082bbb4] ---
  Timestamp: 2021-04-15T13:18:04.778Z
  Event: Error(exception=java.lang.IllegalArgumentException: Payload invalid, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2021-04-15T13:18:04.767Z
    2021-04-15T13:18:04.769Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=3246541615951131585, exception=java.lang.IllegalArgumentException: Payload invalid)], propagatedIndex=0, propagating=false)


 --- Transition of flow [0168805f-4799-4734-9be0-42579082bbb4] ---
  Timestamp: 2021-04-15T13:18:04.781Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [0168805f-4799-4734-9be0-42579082bbb4] ---
  Timestamp: 2021-04-15T13:18:04.783Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:04.769Z
    2021-04-15T13:18:04.782Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [0168805f-4799-4734-9be0-42579082bbb4] ---
  Timestamp: 2021-04-15T13:18:04.859Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=3246541615951131585)], sessions=[Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7417116133110659815), deduplicationSeed=D-7417116133110659815--4721346096929140260)], senderUUID=8a8161b1-85b5-4d59-ba54-c33844924dd6)
    CreateTransaction
    RemoveCheckpoint(id=[0168805f-4799-4734-9be0-42579082bbb4], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=0168805f-4799-4734-9be0-42579082bbb4)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=3311962895803091771)])
    RemoveFlow(flowId=[0168805f-4799-4734-9be0-42579082bbb4], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=3246541615951131585, exception=java.lang.IllegalArgumentException: Payload invalid)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=a65e34f4-155e-43fa-bd4a-397474feec6a, timestamp: 2021-04-15T13:18:04.736Z, entityType: Invocation, sessionId=a65e34f4-155e-43fa-bd4a-397474feec6a, timestamp: 2021-04-15T13:18:04.736Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={SessionId(toLong=3311962895803091771)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7417116133110659815), deduplicationSeed=D-7417116133110659815--4721346096929140260)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=3), flowState=net.corda.node.services.statemachine.FlowState$Finished@21655ff5, errorState=Errored(errors=[FlowError(errorId=3246541615951131585, exception=java.lang.IllegalArgumentException: Payload invalid)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@43baa7fe, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, senderUUID=8a8161b1-85b5-4d59-ba54-c33844924dd6, reloadCheckpointAfterSuspendCount=null, numberOfCommits=3, lock=java.util.concurrent.Semaphore@2efbdbc1[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3311962895803091771))]), frozenFiber=BF9003219914B4F6C22B659A643468F95252350C02778E8AE3894943F9C01731)
    net.corda.node.services.statemachine.FlowState$Finished@21655ff5
checkpoint.timestamp: 
    2021-04-15T13:18:04.782Z
    2021-04-15T13:18:04.802Z
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.checkpointState.numberOfCommits: 
    2
    3
isRemoved: 
    false
    true
numberOfCommits: 
    2
    3
 {fiber-id=10000006, flow-id=0168805f-4799-4734-9be0-42579082bbb4, invocation_id=a65e34f4-155e-43fa-bd4a-397474feec6a, invocation_timestamp=2021-04-15T13:18:04.736Z, origin=O=InvestorA, L=TestLand, C=US, session_id=a65e34f4-155e-43fa-bd4a-397474feec6a, session_timestamp=2021-04-15T13:18:04.736Z, thread-id=649}
[WARN ] 2021-04-15T13:18:04,864Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [0168805f-4799-4734-9be0-42579082bbb4] error {fiber-id=10000006, flow-id=0168805f-4799-4734-9be0-42579082bbb4, invocation_id=a65e34f4-155e-43fa-bd4a-397474feec6a, invocation_timestamp=2021-04-15T13:18:04.736Z, origin=O=InvestorA, L=TestLand, C=US, session_id=a65e34f4-155e-43fa-bd4a-397474feec6a, session_timestamp=2021-04-15T13:18:04.736Z, thread-id=649}
java.lang.IllegalArgumentException: Payload invalid
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:568) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:277) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:85) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:72) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
Caused by: java.io.NotSerializableException: Described type with descriptor net.corda:vlc3i8lJnO7K1i2g0g0+aA== was expected to be of type class net.corda.core.transactions.SignedTransaction but was class com.r3.corda.lib.tokens.workflows.internal.flows.finality.TransactionRole
	at net.corda.serialization.internal.amqp.DeserializationInput.des(DeserializationInput.kt:103) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.DeserializationInput.deserialize(DeserializationInput.kt:120) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.AbstractAMQPSerializationScheme.deserialize(AMQPSerializationScheme.kt:151) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.withCurrentContext(SerializationAPI.kt:71) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:80) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.asCurrent(SerializationAPI.kt:85) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl.deserialize(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:566) ~[corda-core-4.7.jar:?]
	... 25 more
[ERROR] 2021-04-15T13:18:04,904Z [Mock network] amqp.DeserializationInput. - Serialization failed direction="Deserialize", type="net.corda.core.transactions.SignedTransaction", msg="Described type with descriptor net.corda:vlc3i8lJnO7K1i2g0g0+aA== was expected to be of type class net.corda.core.transactions.SignedTransaction but was class com.r3.corda.lib.tokens.workflows.internal.flows.finality.TransactionRole", ClassChain="net.corda.core.transactions.SignedTransaction" {fiber-id=10000007, flow-id=57596be4-4dab-4293-9f9e-48dc08a40b5d, invocation_id=68a7fdd8-f051-4230-96b7-06148fa59d88, invocation_timestamp=2021-04-15T13:18:04.871Z, origin=O=InvestorA, L=TestLand, C=US, session_id=68a7fdd8-f051-4230-96b7-06148fa59d88, session_timestamp=2021-04-15T13:18:04.871Z, thread-id=649}
[INFO ] 2021-04-15T13:18:04,904Z [Mock network] corda.flow. - Flow raised an error: Payload invalid. Sending it to flow hospital to be triaged. {fiber-id=10000007, flow-id=57596be4-4dab-4293-9f9e-48dc08a40b5d, invocation_id=68a7fdd8-f051-4230-96b7-06148fa59d88, invocation_timestamp=2021-04-15T13:18:04.871Z, origin=O=InvestorA, L=TestLand, C=US, session_id=68a7fdd8-f051-4230-96b7-06148fa59d88, session_timestamp=2021-04-15T13:18:04.871Z, thread-id=649}
[INFO ] 2021-04-15T13:18:04,905Z [Mock network] statemachine.StaffedFlowHospital. - Flow [57596be4-4dab-4293-9f9e-48dc08a40b5d] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=68a7fdd8-f051-4230-96b7-06148fa59d88, timestamp: 2021-04-15T13:18:04.871Z, entityType: Invocation, sessionId=68a7fdd8-f051-4230-96b7-06148fa59d88, timestamp: 2021-04-15T13:18:04.871Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=-2441820189578619986)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-4275695503330198516), deduplicationSeed=D--4275695503330198516-3157768765078917735)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-2441820189578619986))]), frozenFiber=04D9E62AEBB488E754BBE0249925F4DAFCB48AE2EBDC9ACEF12952179ED57F96), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@12122552, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=8c5d6d82-4501-49c9-84bc-02940e1a2b16, reloadCheckpointAfterSuspendCount=null, numberOfCommits=2, lock=java.util.concurrent.Semaphore@cd89502[Permits = 0]) {fiber-id=10000007, flow-id=57596be4-4dab-4293-9f9e-48dc08a40b5d, invocation_id=68a7fdd8-f051-4230-96b7-06148fa59d88, invocation_timestamp=2021-04-15T13:18:04.871Z, origin=O=InvestorA, L=TestLand, C=US, session_id=68a7fdd8-f051-4230-96b7-06148fa59d88, session_timestamp=2021-04-15T13:18:04.871Z, thread-id=649}
[INFO ] 2021-04-15T13:18:04,905Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {fiber-id=10000007, flow-id=57596be4-4dab-4293-9f9e-48dc08a40b5d, invocation_id=68a7fdd8-f051-4230-96b7-06148fa59d88, invocation_timestamp=2021-04-15T13:18:04.871Z, origin=O=InvestorA, L=TestLand, C=US, session_id=68a7fdd8-f051-4230-96b7-06148fa59d88, session_timestamp=2021-04-15T13:18:04.871Z, thread-id=649}
java.lang.IllegalArgumentException: Payload invalid
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:568) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:277) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:85) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:72) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
Caused by: java.io.NotSerializableException: Described type with descriptor net.corda:vlc3i8lJnO7K1i2g0g0+aA== was expected to be of type class net.corda.core.transactions.SignedTransaction but was class com.r3.corda.lib.tokens.workflows.internal.flows.finality.TransactionRole
	at net.corda.serialization.internal.amqp.DeserializationInput.des(DeserializationInput.kt:103) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.DeserializationInput.deserialize(DeserializationInput.kt:120) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.AbstractAMQPSerializationScheme.deserialize(AMQPSerializationScheme.kt:151) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.withCurrentContext(SerializationAPI.kt:71) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:80) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.asCurrent(SerializationAPI.kt:85) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl.deserialize(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:566) ~[corda-core-4.7.jar:?]
	... 25 more
[INFO ] 2021-04-15T13:18:04,905Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {fiber-id=10000007, flow-id=57596be4-4dab-4293-9f9e-48dc08a40b5d, invocation_id=68a7fdd8-f051-4230-96b7-06148fa59d88, invocation_timestamp=2021-04-15T13:18:04.871Z, origin=O=InvestorA, L=TestLand, C=US, session_id=68a7fdd8-f051-4230-96b7-06148fa59d88, session_timestamp=2021-04-15T13:18:04.871Z, thread-id=649}
java.lang.IllegalArgumentException: Payload invalid
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:568) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:277) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:85) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:72) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
Caused by: java.io.NotSerializableException: Described type with descriptor net.corda:vlc3i8lJnO7K1i2g0g0+aA== was expected to be of type class net.corda.core.transactions.SignedTransaction but was class com.r3.corda.lib.tokens.workflows.internal.flows.finality.TransactionRole
	at net.corda.serialization.internal.amqp.DeserializationInput.des(DeserializationInput.kt:103) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.DeserializationInput.deserialize(DeserializationInput.kt:120) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.AbstractAMQPSerializationScheme.deserialize(AMQPSerializationScheme.kt:151) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.withCurrentContext(SerializationAPI.kt:71) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:80) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.asCurrent(SerializationAPI.kt:85) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl.deserialize(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:566) ~[corda-core-4.7.jar:?]
	... 25 more
[WARN ] 2021-04-15T13:18:04,909Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [57596be4-4dab-4293-9f9e-48dc08a40b5d] errored, dumping all transitions:

 --- Transition of flow [57596be4-4dab-4293-9f9e-48dc08a40b5d] ---
  Timestamp: 2021-04-15T13:18:04.892Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[57596be4-4dab-4293-9f9e-48dc08a40b5d], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=68a7fdd8-f051-4230-96b7-06148fa59d88, timestamp: 2021-04-15T13:18:04.871Z, entityType: Invocation, sessionId=68a7fdd8-f051-4230-96b7-06148fa59d88, timestamp: 2021-04-15T13:18:04.871Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=441BA556F3CD3B3E44B5B2A854EF09FE1980E71564B9293455457974A708C61F), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@78cfcfe6])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@78cfcfe6])
    SignalFlowHasStarted(flowId=[57596be4-4dab-4293-9f9e-48dc08a40b5d])
    SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4275695503330198516), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-2441820189578619986), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--4275695503330198516-3157768765078917735-0-0), senderUUID=8c5d6d82-4501-49c9-84bc-02940e1a2b16))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-2441820189578619986): 
    null
    Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-4275695503330198516), deduplicationSeed=D--4275695503330198516-3157768765078917735)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@78cfcfe6]
    []


 --- Transition of flow [57596be4-4dab-4293-9f9e-48dc08a40b5d] ---
  Timestamp: 2021-04-15T13:18:04.892Z
  Event: EnterSubFlow(subFlowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:04.872Z
    2021-04-15T13:18:04.892Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [57596be4-4dab-4293-9f9e-48dc08a40b5d] ---
  Timestamp: 2021-04-15T13:18:04.892Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [57596be4-4dab-4293-9f9e-48dc08a40b5d] ---
  Timestamp: 2021-04-15T13:18:04.903Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-2441820189578619986))]), maySkipCheckpoint=false, fiber=04D9E62AEBB488E754BBE0249925F4DAFCB48AE2EBDC9ACEF12952179ED57F96, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[57596be4-4dab-4293-9f9e-48dc08a40b5d], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=68a7fdd8-f051-4230-96b7-06148fa59d88, timestamp: 2021-04-15T13:18:04.871Z, entityType: Invocation, sessionId=68a7fdd8-f051-4230-96b7-06148fa59d88, timestamp: 2021-04-15T13:18:04.871Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=-2441820189578619986)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-4275695503330198516), deduplicationSeed=D--4275695503330198516-3157768765078917735)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-2441820189578619986))]), frozenFiber=04D9E62AEBB488E754BBE0249925F4DAFCB48AE2EBDC9ACEF12952179ED57F96), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=441BA556F3CD3B3E44B5B2A854EF09FE1980E71564B9293455457974A708C61F)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-2441820189578619986))]), frozenFiber=04D9E62AEBB488E754BBE0249925F4DAFCB48AE2EBDC9ACEF12952179ED57F96)
checkpoint.timestamp: 
    2021-04-15T13:18:04.892Z
    2021-04-15T13:18:04.900Z
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.progressStep: 
    null
    Starting
numberOfCommits: 
    0
    2


 --- Transition of flow [57596be4-4dab-4293-9f9e-48dc08a40b5d] ---
  Timestamp: 2021-04-15T13:18:04.903Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:18:04.900Z
    2021-04-15T13:18:04.903Z
checkpoint.checkpointState.sessions.SessionId(toLong=-2441820189578619986).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [57596be4-4dab-4293-9f9e-48dc08a40b5d] ---
  Timestamp: 2021-04-15T13:18:04.904Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:04.903Z
    2021-04-15T13:18:04.904Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [57596be4-4dab-4293-9f9e-48dc08a40b5d] ---
  Timestamp: 2021-04-15T13:18:04.904Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false)]


 --- Transition of flow [57596be4-4dab-4293-9f9e-48dc08a40b5d] ---
  Timestamp: 2021-04-15T13:18:04.905Z
  Event: Error(exception=java.lang.IllegalArgumentException: Payload invalid, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-5313535288431265607, exception=java.lang.IllegalArgumentException: Payload invalid)], propagatedIndex=0, propagating=false)


 --- Transition of flow [57596be4-4dab-4293-9f9e-48dc08a40b5d] ---
  Timestamp: 2021-04-15T13:18:04.905Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [57596be4-4dab-4293-9f9e-48dc08a40b5d] ---
  Timestamp: 2021-04-15T13:18:04.905Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:04.904Z
    2021-04-15T13:18:04.905Z
checkpoint.errorState.propagating: 
    false
    true
 {fiber-id=10000007, flow-id=57596be4-4dab-4293-9f9e-48dc08a40b5d, invocation_id=68a7fdd8-f051-4230-96b7-06148fa59d88, invocation_timestamp=2021-04-15T13:18:04.871Z, origin=O=InvestorA, L=TestLand, C=US, session_id=68a7fdd8-f051-4230-96b7-06148fa59d88, session_timestamp=2021-04-15T13:18:04.871Z, thread-id=649}
[WARN ] 2021-04-15T13:18:04,909Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [57596be4-4dab-4293-9f9e-48dc08a40b5d] error {fiber-id=10000007, flow-id=57596be4-4dab-4293-9f9e-48dc08a40b5d, invocation_id=68a7fdd8-f051-4230-96b7-06148fa59d88, invocation_timestamp=2021-04-15T13:18:04.871Z, origin=O=InvestorA, L=TestLand, C=US, session_id=68a7fdd8-f051-4230-96b7-06148fa59d88, session_timestamp=2021-04-15T13:18:04.871Z, thread-id=649}
java.lang.IllegalArgumentException: Payload invalid
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:568) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:277) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:85) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:72) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
Caused by: java.io.NotSerializableException: Described type with descriptor net.corda:vlc3i8lJnO7K1i2g0g0+aA== was expected to be of type class net.corda.core.transactions.SignedTransaction but was class com.r3.corda.lib.tokens.workflows.internal.flows.finality.TransactionRole
	at net.corda.serialization.internal.amqp.DeserializationInput.des(DeserializationInput.kt:103) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.DeserializationInput.deserialize(DeserializationInput.kt:120) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.AbstractAMQPSerializationScheme.deserialize(AMQPSerializationScheme.kt:151) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.withCurrentContext(SerializationAPI.kt:71) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:80) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.asCurrent(SerializationAPI.kt:85) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl.deserialize(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:566) ~[corda-core-4.7.jar:?]
	... 25 more
[WARN ] 2021-04-15T13:18:04,909Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {fiber-id=10000007, flow-id=57596be4-4dab-4293-9f9e-48dc08a40b5d, invocation_id=68a7fdd8-f051-4230-96b7-06148fa59d88, invocation_timestamp=2021-04-15T13:18:04.871Z, origin=O=InvestorA, L=TestLand, C=US, session_id=68a7fdd8-f051-4230-96b7-06148fa59d88, session_timestamp=2021-04-15T13:18:04.871Z, thread-id=649}
[WARN ] 2021-04-15T13:18:04,927Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [57596be4-4dab-4293-9f9e-48dc08a40b5d] errored, dumping all transitions:

 --- Transition of flow [57596be4-4dab-4293-9f9e-48dc08a40b5d] ---
  Timestamp: 2021-04-15T13:18:04.892Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[57596be4-4dab-4293-9f9e-48dc08a40b5d], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=68a7fdd8-f051-4230-96b7-06148fa59d88, timestamp: 2021-04-15T13:18:04.871Z, entityType: Invocation, sessionId=68a7fdd8-f051-4230-96b7-06148fa59d88, timestamp: 2021-04-15T13:18:04.871Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=441BA556F3CD3B3E44B5B2A854EF09FE1980E71564B9293455457974A708C61F), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@78cfcfe6])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@78cfcfe6])
    SignalFlowHasStarted(flowId=[57596be4-4dab-4293-9f9e-48dc08a40b5d])
    SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4275695503330198516), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-2441820189578619986), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--4275695503330198516-3157768765078917735-0-0), senderUUID=8c5d6d82-4501-49c9-84bc-02940e1a2b16))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-2441820189578619986): 
    null
    Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-4275695503330198516), deduplicationSeed=D--4275695503330198516-3157768765078917735)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@78cfcfe6]
    []


 --- Transition of flow [57596be4-4dab-4293-9f9e-48dc08a40b5d] ---
  Timestamp: 2021-04-15T13:18:04.892Z
  Event: EnterSubFlow(subFlowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:04.872Z
    2021-04-15T13:18:04.892Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [57596be4-4dab-4293-9f9e-48dc08a40b5d] ---
  Timestamp: 2021-04-15T13:18:04.892Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [57596be4-4dab-4293-9f9e-48dc08a40b5d] ---
  Timestamp: 2021-04-15T13:18:04.903Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-2441820189578619986))]), maySkipCheckpoint=false, fiber=04D9E62AEBB488E754BBE0249925F4DAFCB48AE2EBDC9ACEF12952179ED57F96, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[57596be4-4dab-4293-9f9e-48dc08a40b5d], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=68a7fdd8-f051-4230-96b7-06148fa59d88, timestamp: 2021-04-15T13:18:04.871Z, entityType: Invocation, sessionId=68a7fdd8-f051-4230-96b7-06148fa59d88, timestamp: 2021-04-15T13:18:04.871Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=-2441820189578619986)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-4275695503330198516), deduplicationSeed=D--4275695503330198516-3157768765078917735)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-2441820189578619986))]), frozenFiber=04D9E62AEBB488E754BBE0249925F4DAFCB48AE2EBDC9ACEF12952179ED57F96), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=441BA556F3CD3B3E44B5B2A854EF09FE1980E71564B9293455457974A708C61F)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-2441820189578619986))]), frozenFiber=04D9E62AEBB488E754BBE0249925F4DAFCB48AE2EBDC9ACEF12952179ED57F96)
checkpoint.timestamp: 
    2021-04-15T13:18:04.892Z
    2021-04-15T13:18:04.900Z
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.progressStep: 
    null
    Starting
numberOfCommits: 
    0
    2


 --- Transition of flow [57596be4-4dab-4293-9f9e-48dc08a40b5d] ---
  Timestamp: 2021-04-15T13:18:04.903Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:18:04.900Z
    2021-04-15T13:18:04.903Z
checkpoint.checkpointState.sessions.SessionId(toLong=-2441820189578619986).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [57596be4-4dab-4293-9f9e-48dc08a40b5d] ---
  Timestamp: 2021-04-15T13:18:04.904Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:04.903Z
    2021-04-15T13:18:04.904Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [57596be4-4dab-4293-9f9e-48dc08a40b5d] ---
  Timestamp: 2021-04-15T13:18:04.904Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false)]


 --- Transition of flow [57596be4-4dab-4293-9f9e-48dc08a40b5d] ---
  Timestamp: 2021-04-15T13:18:04.905Z
  Event: Error(exception=java.lang.IllegalArgumentException: Payload invalid, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-5313535288431265607, exception=java.lang.IllegalArgumentException: Payload invalid)], propagatedIndex=0, propagating=false)


 --- Transition of flow [57596be4-4dab-4293-9f9e-48dc08a40b5d] ---
  Timestamp: 2021-04-15T13:18:04.905Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [57596be4-4dab-4293-9f9e-48dc08a40b5d] ---
  Timestamp: 2021-04-15T13:18:04.905Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:04.904Z
    2021-04-15T13:18:04.905Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [57596be4-4dab-4293-9f9e-48dc08a40b5d] ---
  Timestamp: 2021-04-15T13:18:04.920Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=-5313535288431265607)], sessions=[Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-4275695503330198516), deduplicationSeed=D--4275695503330198516-3157768765078917735)], senderUUID=8c5d6d82-4501-49c9-84bc-02940e1a2b16)
    CreateTransaction
    RemoveCheckpoint(id=[57596be4-4dab-4293-9f9e-48dc08a40b5d], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=57596be4-4dab-4293-9f9e-48dc08a40b5d)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-2441820189578619986)])
    RemoveFlow(flowId=[57596be4-4dab-4293-9f9e-48dc08a40b5d], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-5313535288431265607, exception=java.lang.IllegalArgumentException: Payload invalid)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=68a7fdd8-f051-4230-96b7-06148fa59d88, timestamp: 2021-04-15T13:18:04.871Z, entityType: Invocation, sessionId=68a7fdd8-f051-4230-96b7-06148fa59d88, timestamp: 2021-04-15T13:18:04.871Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=-2441820189578619986)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-4275695503330198516), deduplicationSeed=D--4275695503330198516-3157768765078917735)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=3), flowState=net.corda.node.services.statemachine.FlowState$Finished@21655ff5, errorState=Errored(errors=[FlowError(errorId=-5313535288431265607, exception=java.lang.IllegalArgumentException: Payload invalid)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@12122552, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, senderUUID=8c5d6d82-4501-49c9-84bc-02940e1a2b16, reloadCheckpointAfterSuspendCount=null, numberOfCommits=3, lock=java.util.concurrent.Semaphore@cd89502[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-2441820189578619986))]), frozenFiber=04D9E62AEBB488E754BBE0249925F4DAFCB48AE2EBDC9ACEF12952179ED57F96)
    net.corda.node.services.statemachine.FlowState$Finished@21655ff5
checkpoint.timestamp: 
    2021-04-15T13:18:04.905Z
    2021-04-15T13:18:04.909Z
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.checkpointState.numberOfCommits: 
    2
    3
isRemoved: 
    false
    true
numberOfCommits: 
    2
    3
 {fiber-id=10000007, flow-id=57596be4-4dab-4293-9f9e-48dc08a40b5d, invocation_id=68a7fdd8-f051-4230-96b7-06148fa59d88, invocation_timestamp=2021-04-15T13:18:04.871Z, origin=O=InvestorA, L=TestLand, C=US, session_id=68a7fdd8-f051-4230-96b7-06148fa59d88, session_timestamp=2021-04-15T13:18:04.871Z, thread-id=649}
[WARN ] 2021-04-15T13:18:04,927Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [57596be4-4dab-4293-9f9e-48dc08a40b5d] error {fiber-id=10000007, flow-id=57596be4-4dab-4293-9f9e-48dc08a40b5d, invocation_id=68a7fdd8-f051-4230-96b7-06148fa59d88, invocation_timestamp=2021-04-15T13:18:04.871Z, origin=O=InvestorA, L=TestLand, C=US, session_id=68a7fdd8-f051-4230-96b7-06148fa59d88, session_timestamp=2021-04-15T13:18:04.871Z, thread-id=649}
java.lang.IllegalArgumentException: Payload invalid
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:568) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:277) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:85) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:72) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
Caused by: java.io.NotSerializableException: Described type with descriptor net.corda:vlc3i8lJnO7K1i2g0g0+aA== was expected to be of type class net.corda.core.transactions.SignedTransaction but was class com.r3.corda.lib.tokens.workflows.internal.flows.finality.TransactionRole
	at net.corda.serialization.internal.amqp.DeserializationInput.des(DeserializationInput.kt:103) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.DeserializationInput.deserialize(DeserializationInput.kt:120) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.AbstractAMQPSerializationScheme.deserialize(AMQPSerializationScheme.kt:151) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.withCurrentContext(SerializationAPI.kt:71) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:80) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.asCurrent(SerializationAPI.kt:85) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl.deserialize(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:566) ~[corda-core-4.7.jar:?]
	... 25 more
[INFO ] 2021-04-15T13:18:05,102Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 1 references {}
[INFO ] 2021-04-15T13:18:05,110Z [Mock network] corda.flow. - Transaction [93E0BA91322446DA706A3418BDE43641509A4C9C451E6DD59319F57ED4011EAD] successfully notarised, sending signature back to [O=InvestorA, L=TestLand, C=US] {fiber-id=10000005, flow-id=5a022f34-40ee-4a5e-8b68-d089a8835a14, invocation_id=0a94b749-8df4-4122-9d63-261dc761a447, invocation_timestamp=2021-04-15T13:18:04.695Z, origin=O=InvestorA, L=TestLand, C=US, session_id=0a94b749-8df4-4122-9d63-261dc761a447, session_timestamp=2021-04-15T13:18:04.695Z, thread-id=649}
[INFO ] 2021-04-15T13:18:05,206Z [Mock network] corda.flow. - Notary responded (O=Notary, L=London, C=GB). {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=7acfc17e-9d9c-4a65-b5c4-f73f5680c184, invocation_id=82081eb1-516a-4fbd-a311-54f3f9946b64, invocation_timestamp=2021-04-15T13:18:04.485Z, origin=Only For Testing, session_id=82081eb1-516a-4fbd-a311-54f3f9946b64, session_timestamp=2021-04-15T13:18:04.485Z, thread-id=649, tx_id=93E0BA91322446DA706A3418BDE43641509A4C9C451E6DD59319F57ED4011EAD}
[INFO ] 2021-04-15T13:18:05,207Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=7acfc17e-9d9c-4a65-b5c4-f73f5680c184, invocation_id=82081eb1-516a-4fbd-a311-54f3f9946b64, invocation_timestamp=2021-04-15T13:18:04.485Z, origin=Only For Testing, session_id=82081eb1-516a-4fbd-a311-54f3f9946b64, session_timestamp=2021-04-15T13:18:04.485Z, thread-id=649, tx_id=93E0BA91322446DA706A3418BDE43641509A4C9C451E6DD59319F57ED4011EAD}
[INFO ] 2021-04-15T13:18:05,232Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=7acfc17e-9d9c-4a65-b5c4-f73f5680c184, invocation_id=82081eb1-516a-4fbd-a311-54f3f9946b64, invocation_timestamp=2021-04-15T13:18:04.485Z, origin=Only For Testing, session_id=82081eb1-516a-4fbd-a311-54f3f9946b64, session_timestamp=2021-04-15T13:18:04.485Z, thread-id=649, tx_id=93E0BA91322446DA706A3418BDE43641509A4C9C451E6DD59319F57ED4011EAD}
[INFO ] 2021-04-15T13:18:05,269Z [Mock network] corda.flow. - Flow raised an error: O=InvestorB, L=TestCity, C=US has finished prematurely and we're trying to send them the finalised transaction. Did they forget to call ReceiveFinalityFlow? (Counter-flow errored). Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=7acfc17e-9d9c-4a65-b5c4-f73f5680c184, invocation_id=82081eb1-516a-4fbd-a311-54f3f9946b64, invocation_timestamp=2021-04-15T13:18:04.485Z, origin=Only For Testing, session_id=82081eb1-516a-4fbd-a311-54f3f9946b64, session_timestamp=2021-04-15T13:18:04.485Z, thread-id=649, tx_id=93E0BA91322446DA706A3418BDE43641509A4C9C451E6DD59319F57ED4011EAD}
[INFO ] 2021-04-15T13:18:05,271Z [Mock network] statemachine.StaffedFlowHospital. - Flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=82081eb1-516a-4fbd-a311-54f3f9946b64, timestamp: 2021-04-15T13:18:04.485Z, entityType: Invocation, sessionId=82081eb1-516a-4fbd-a311-54f3f9946b64, timestamp: 2021-04-15T13:18:04.485Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=7417116133110659815)=Initiated(peerParty=O=InvestorB, L=TestCity, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=3311962895803091771), deduplicationSeed=R-7417116133110659815--4721346096929140260), SessionId(toLong=-4275695503330198516)=Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[ErrorSessionMessage(flowException=null, errorId=-5313535288431265607)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-2441820189578619986), deduplicationSeed=R--4275695503330198516-3157768765078917735), SessionId(toLong=-4374906441151572075)=Initiated(peerParty=O=Notary, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=9, appName=corda), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=2263329290996832436), deduplicationSeed=R--4374906441151572075--434580345365962525)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=7417116133110659815))=FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=7417116133110659815))=AEB36EE90F99A88EC9FB4C02CBE0A1EA7EA0A5435553CA7CBC7960A247F619D8}, shouldRetrySend=false), frozenFiber=66402A3C84B0D0A15BDB66B3B50E20BD8FAB2617DB895FDD69EF15F0A6C89246), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator@20652e94, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=dea89cac-3c1c-4621-abcd-05dd4efe4834, reloadCheckpointAfterSuspendCount=null, numberOfCommits=8, lock=java.util.concurrent.Semaphore@5eff08fc[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=7acfc17e-9d9c-4a65-b5c4-f73f5680c184, invocation_id=82081eb1-516a-4fbd-a311-54f3f9946b64, invocation_timestamp=2021-04-15T13:18:04.485Z, origin=Only For Testing, session_id=82081eb1-516a-4fbd-a311-54f3f9946b64, session_timestamp=2021-04-15T13:18:04.485Z, thread-id=649, tx_id=93E0BA91322446DA706A3418BDE43641509A4C9C451E6DD59319F57ED4011EAD}
[INFO ] 2021-04-15T13:18:05,271Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=7acfc17e-9d9c-4a65-b5c4-f73f5680c184, invocation_id=82081eb1-516a-4fbd-a311-54f3f9946b64, invocation_timestamp=2021-04-15T13:18:04.485Z, origin=Only For Testing, session_id=82081eb1-516a-4fbd-a311-54f3f9946b64, session_timestamp=2021-04-15T13:18:04.485Z, thread-id=649, tx_id=93E0BA91322446DA706A3418BDE43641509A4C9C451E6DD59319F57ED4011EAD}
net.corda.core.flows.UnexpectedFlowEndException: O=InvestorB, L=TestCity, C=US has finished prematurely and we're trying to send them the finalised transaction. Did they forget to call ReceiveFinalityFlow? (Counter-flow errored)
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:186) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:43) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow.call(ObserverAwareFinalityFlow.kt:75) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow.call(ObserverAwareFinalityFlow.kt:35) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:63) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:26) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[INFO ] 2021-04-15T13:18:05,271Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=7acfc17e-9d9c-4a65-b5c4-f73f5680c184, invocation_id=82081eb1-516a-4fbd-a311-54f3f9946b64, invocation_timestamp=2021-04-15T13:18:04.485Z, origin=Only For Testing, session_id=82081eb1-516a-4fbd-a311-54f3f9946b64, session_timestamp=2021-04-15T13:18:04.485Z, thread-id=649, tx_id=93E0BA91322446DA706A3418BDE43641509A4C9C451E6DD59319F57ED4011EAD}
net.corda.core.flows.UnexpectedFlowEndException: O=InvestorB, L=TestCity, C=US has finished prematurely and we're trying to send them the finalised transaction. Did they forget to call ReceiveFinalityFlow? (Counter-flow errored)
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:186) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:43) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow.call(ObserverAwareFinalityFlow.kt:75) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow.call(ObserverAwareFinalityFlow.kt:35) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:63) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:26) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[WARN ] 2021-04-15T13:18:05,300Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] errored, dumping all transitions:

 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.489Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[7acfc17e-9d9c-4a65-b5c4-f73f5680c184], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=82081eb1-516a-4fbd-a311-54f3f9946b64, timestamp: 2021-04-15T13:18:04.485Z, entityType: Invocation, sessionId=82081eb1-516a-4fbd-a311-54f3f9946b64, timestamp: 2021-04-15T13:18:04.485Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=CE8EE259533B5E61CBEA51F5E648A78EB060878AE6788C74ECEBCB78AEC91B71), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@60020fd9])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@60020fd9])
    SignalFlowHasStarted(flowId=[7acfc17e-9d9c-4a65-b5c4-f73f5680c184])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@60020fd9]
    []


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.597Z
  Event: InitiateFlow(destination=O=InvestorB, L=TestCity, C=US, wellKnownParty=O=InvestorB, L=TestCity, C=US)
  Actions: 
    AddSessionBinding(flowId=[7acfc17e-9d9c-4a65-b5c4-f73f5680c184], sessionId=SessionId(toLong=7417116133110659815))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:04.486Z
    2021-04-15T13:18:04.597Z
checkpoint.checkpointState.sessions.SessionId(toLong=7417116133110659815): 
    null
    Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=7417116133110659815), additionalEntropy=-4721346096929140260)


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.597Z
  Event: InitiateFlow(destination=O=TIE, L=TestVillage, C=US, wellKnownParty=O=TIE, L=TestVillage, C=US)
  Actions: 
    AddSessionBinding(flowId=[7acfc17e-9d9c-4a65-b5c4-f73f5680c184], sessionId=SessionId(toLong=-4275695503330198516))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-4275695503330198516): 
    null
    Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-4275695503330198516), additionalEntropy=3157768765078917735)


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.597Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.607Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:04.597Z
    2021-04-15T13:18:04.607Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false)]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.607Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.627Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=7417116133110659815))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), maySkipCheckpoint=false, fiber=0D6B6B46AFFB2D57A6E643A1611253F46B8B9F77AC3610305A37ECE4CF7FD335, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[7acfc17e-9d9c-4a65-b5c4-f73f5680c184], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=82081eb1-516a-4fbd-a311-54f3f9946b64, timestamp: 2021-04-15T13:18:04.485Z, entityType: Invocation, sessionId=82081eb1-516a-4fbd-a311-54f3f9946b64, timestamp: 2021-04-15T13:18:04.485Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=7417116133110659815)=Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=7417116133110659815), additionalEntropy=-4721346096929140260), SessionId(toLong=-4275695503330198516)=Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-4275695503330198516), additionalEntropy=3157768765078917735)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=7417116133110659815))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), frozenFiber=0D6B6B46AFFB2D57A6E643A1611253F46B8B9F77AC3610305A37ECE4CF7FD335), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=CE8EE259533B5E61CBEA51F5E648A78EB060878AE6788C74ECEBCB78AEC91B71)
    Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=7417116133110659815))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), frozenFiber=0D6B6B46AFFB2D57A6E643A1611253F46B8B9F77AC3610305A37ECE4CF7FD335)
checkpoint.timestamp: 
    2021-04-15T13:18:04.607Z
    2021-04-15T13:18:04.625Z
checkpoint.flowIoRequest: 
    null
    Send
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.progressStep: 
    null
    Starting
numberOfCommits: 
    0
    2


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.634Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=InvestorB, L=TestCity, C=US, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=7417116133110659815), initiationEntropy=-4721346096929140260, initiatorFlowClassName=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-7417116133110659815--4721346096929140260-1-0), senderUUID=dea89cac-3c1c-4621-abcd-05dd4efe4834))], sendExisting=[])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:18:04.625Z
    2021-04-15T13:18:04.628Z
checkpoint.checkpointState.sessions.SessionId(toLong=7417116133110659815): 
    Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=7417116133110659815), additionalEntropy=-4721346096929140260)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-7417116133110659815--4721346096929140260)


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.645Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-4275695503330198516))=0B9A9651C5E9F17665E1C7470E70C465EF497D6E0B91CA6ECCA58BDFE3E53298}), maySkipCheckpoint=false, fiber=1E26ABF573A0F6E7CF8C278B07839CBE29DE14ADF31188AE2603CAB0E03FD134, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[7acfc17e-9d9c-4a65-b5c4-f73f5680c184], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=82081eb1-516a-4fbd-a311-54f3f9946b64, timestamp: 2021-04-15T13:18:04.485Z, entityType: Invocation, sessionId=82081eb1-516a-4fbd-a311-54f3f9946b64, timestamp: 2021-04-15T13:18:04.485Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=7417116133110659815)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-7417116133110659815--4721346096929140260), SessionId(toLong=-4275695503330198516)=Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-4275695503330198516), additionalEntropy=3157768765078917735)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-4275695503330198516))=0B9A9651C5E9F17665E1C7470E70C465EF497D6E0B91CA6ECCA58BDFE3E53298}), frozenFiber=1E26ABF573A0F6E7CF8C278B07839CBE29DE14ADF31188AE2603CAB0E03FD134), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState.frozenFiber.hash: 
    0D6B6B46AFFB2D57A6E643A1611253F46B8B9F77AC3610305A37ECE4CF7FD335
    1E26ABF573A0F6E7CF8C278B07839CBE29DE14ADF31188AE2603CAB0E03FD134
checkpoint.flowState.flowIORequest.sessionToMessage.FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=7417116133110659815)): 

    null
checkpoint.flowState.flowIORequest.sessionToMessage.FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-4275695503330198516)): 
    null

checkpoint.timestamp: 
    2021-04-15T13:18:04.628Z
    2021-04-15T13:18:04.640Z
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.651Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=TIE, L=TestVillage, C=US, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-4275695503330198516), initiationEntropy=3157768765078917735, initiatorFlowClassName=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--4275695503330198516-3157768765078917735-2-0), senderUUID=dea89cac-3c1c-4621-abcd-05dd4efe4834))], sendExisting=[])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:18:04.640Z
    2021-04-15T13:18:04.646Z
checkpoint.checkpointState.sessions.SessionId(toLong=-4275695503330198516): 
    Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-4275695503330198516), additionalEntropy=3157768765078917735)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--4275695503330198516-3157768765078917735)


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.652Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.FinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:04.646Z
    2021-04-15T13:18:04.652Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.671Z
  Event: Suspend(ioRequest=net.corda.core.internal.FlowIORequest$ForceCheckpoint@63077712, maySkipCheckpoint=false, fiber=E6562548AA67A54D9CB822E8750E5C739467EA163DBA43FE37D801400A990ED0, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[7acfc17e-9d9c-4a65-b5c4-f73f5680c184], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=82081eb1-516a-4fbd-a311-54f3f9946b64, timestamp: 2021-04-15T13:18:04.485Z, entityType: Invocation, sessionId=82081eb1-516a-4fbd-a311-54f3f9946b64, timestamp: 2021-04-15T13:18:04.485Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=7417116133110659815)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-7417116133110659815--4721346096929140260), SessionId(toLong=-4275695503330198516)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--4275695503330198516-3157768765078917735)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=net.corda.core.internal.FlowIORequest$ForceCheckpoint@63077712, frozenFiber=E6562548AA67A54D9CB822E8750E5C739467EA163DBA43FE37D801400A990ED0), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=ForceCheckpoint, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState.frozenFiber.hash: 
    1E26ABF573A0F6E7CF8C278B07839CBE29DE14ADF31188AE2603CAB0E03FD134
    E6562548AA67A54D9CB822E8750E5C739467EA163DBA43FE37D801400A990ED0
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-4275695503330198516))=0B9A9651C5E9F17665E1C7470E70C465EF497D6E0B91CA6ECCA58BDFE3E53298})
    net.corda.core.internal.FlowIORequest$ForceCheckpoint@63077712
checkpoint.timestamp: 
    2021-04-15T13:18:04.652Z
    2021-04-15T13:18:04.668Z
checkpoint.flowIoRequest: 
    Send
    ForceCheckpoint
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
numberOfCommits: 
    3
    4


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.671Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.671Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.NotaryFlow$Client, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:04.668Z
    2021-04-15T13:18:04.671Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.NotaryFlow$Client, classToInitiateWith=class net.corda.core.flows.NotaryFlow$Client, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.674Z
  Event: InitiateFlow(destination=O=Notary, L=London, C=GB, wellKnownParty=O=Notary, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[7acfc17e-9d9c-4a65-b5c4-f73f5680c184], sessionId=SessionId(toLong=-4374906441151572075))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:04.671Z
    2021-04-15T13:18:04.674Z
checkpoint.checkpointState.sessions.SessionId(toLong=-4374906441151572075): 
    null
    Uninitiated(destination=O=Notary, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.core.flows.NotaryFlow$Client, classToInitiateWith=class net.corda.core.flows.NotaryFlow$Client, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-4374906441151572075), additionalEntropy=-434580345365962525)


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.676Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.NotaryFlow$Client$NotarySendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:04.674Z
    2021-04-15T13:18:04.676Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.NotaryFlow$Client, classToInitiateWith=class net.corda.core.flows.NotaryFlow$Client, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.NotaryFlow$Client, classToInitiateWith=class net.corda.core.flows.NotaryFlow$Client, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.NotaryFlow$Client$NotarySendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.687Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-4374906441151572075))=FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-4374906441151572075))=C329E8CF2D73A86DA40079A70D2BAF547B985902F50C8EEE7350622729386D49}, shouldRetrySend=true), maySkipCheckpoint=true, fiber=A51B5B2C15BCEC9B6347882035DFF347769B7FD37E8DFF6FB3A0E80EE1C429D4, currentStep=Starting)
  Actions: 
    CommitTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState.frozenFiber.hash: 
    E6562548AA67A54D9CB822E8750E5C739467EA163DBA43FE37D801400A990ED0
    A51B5B2C15BCEC9B6347882035DFF347769B7FD37E8DFF6FB3A0E80EE1C429D4
checkpoint.flowState.flowIORequest: 
    net.corda.core.internal.FlowIORequest$ForceCheckpoint@63077712
    SendAndReceive({FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-4374906441151572075))=FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-4374906441151572075))=C329E8CF2D73A86DA40079A70D2BAF547B985902F50C8EEE7350622729386D49}, shouldRetrySend=true)
checkpoint.timestamp: 
    2021-04-15T13:18:04.676Z
    2021-04-15T13:18:04.686Z
checkpoint.flowIoRequest: 
    ForceCheckpoint
    SendAndReceive
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.checkpointState.numberOfCommits: 
    4
    5
numberOfCommits: 
    4
    5


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.688Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Notary, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-4374906441151572075), initiationEntropy=-434580345365962525, initiatorFlowClassName=net.corda.core.flows.NotaryFlow$Client, appName=corda-core-4.7, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--4374906441151572075--434580345365962525-4-0), senderUUID=dea89cac-3c1c-4621-abcd-05dd4efe4834))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-4374906441151572075))=FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-4374906441151572075))=C329E8CF2D73A86DA40079A70D2BAF547B985902F50C8EEE7350622729386D49}, shouldRetrySend=true)
    Receive(sessions=[FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-4374906441151572075))])
checkpoint.timestamp: 
    2021-04-15T13:18:04.686Z
    2021-04-15T13:18:04.687Z
checkpoint.checkpointState.sessions.SessionId(toLong=-4374906441151572075): 
    Uninitiated(destination=O=Notary, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.core.flows.NotaryFlow$Client, classToInitiateWith=class net.corda.core.flows.NotaryFlow$Client, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-4374906441151572075), additionalEntropy=-434580345365962525)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--4374906441151572075--434580345365962525)


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.726Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4374906441151572075), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=2263329290996832436), initiatedFlowInfo=FlowInfo(flowVersion=9, appName=corda))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239, sender=O=Notary, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:04.687Z
    2021-04-15T13:18:04.726Z
checkpoint.checkpointState.sessions.SessionId(toLong=-4374906441151572075): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--4374906441151572075--434580345365962525)
    Initiated(peerParty=O=Notary, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=9, appName=corda), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=2263329290996832436), deduplicationSeed=R--4374906441151572075--434580345365962525)
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.727Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.931Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4374906441151572075), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62fbdb69, sender=O=Notary, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:04.727Z
    2021-04-15T13:18:04.931Z
checkpoint.checkpointState.sessions.SessionId(toLong=-4374906441151572075).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62fbdb69]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.931Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-4374906441151572075).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.945Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-4374906441151572075))=FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-4374906441151572075))=DD6D2F0399FB37A5B77FD940F3AD5B506E03D114B48BA39A12DFC76881ED5EAD}, shouldRetrySend=true), maySkipCheckpoint=true, fiber=0EBD69D3A1FA8EEE6A38F161ED621610206366C4AA5F84E4D97C1EC191BEFC6E, currentStep=Starting)
  Actions: 
    CommitTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState.frozenFiber.hash: 
    A51B5B2C15BCEC9B6347882035DFF347769B7FD37E8DFF6FB3A0E80EE1C429D4
    0EBD69D3A1FA8EEE6A38F161ED621610206366C4AA5F84E4D97C1EC191BEFC6E
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-4374906441151572075))])
    SendAndReceive({FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-4374906441151572075))=FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-4374906441151572075))=DD6D2F0399FB37A5B77FD940F3AD5B506E03D114B48BA39A12DFC76881ED5EAD}, shouldRetrySend=true)
checkpoint.timestamp: 
    2021-04-15T13:18:04.931Z
    2021-04-15T13:18:04.944Z
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.checkpointState.numberOfCommits: 
    5
    6
numberOfCommits: 
    5
    6


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.945Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Notary, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=2263329290996832436), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--4374906441151572075--434580345365962525-5-0), senderUUID=dea89cac-3c1c-4621-abcd-05dd4efe4834))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-4374906441151572075))=FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-4374906441151572075))=DD6D2F0399FB37A5B77FD940F3AD5B506E03D114B48BA39A12DFC76881ED5EAD}, shouldRetrySend=true)
    Receive(sessions=[FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-4374906441151572075))])
checkpoint.timestamp: 
    2021-04-15T13:18:04.944Z
    2021-04-15T13:18:04.945Z


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.050Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7417116133110659815), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=3311962895803091771), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7eb45531, sender=O=InvestorB, L=TestCity, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:04.945Z
    2021-04-15T13:18:05.050Z
checkpoint.checkpointState.sessions.SessionId(toLong=7417116133110659815): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-7417116133110659815--4721346096929140260)
    Initiated(peerParty=O=InvestorB, L=TestCity, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3311962895803091771), deduplicationSeed=R-7417116133110659815--4721346096929140260)
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62fbdb69]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62fbdb69, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7eb45531]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.050Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.164Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7417116133110659815), payload=ErrorSessionMessage(flowException=null, errorId=3246541615951131585)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@577b0664, sender=O=InvestorB, L=TestCity, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:05.050Z
    2021-04-15T13:18:05.164Z
checkpoint.checkpointState.sessions.SessionId(toLong=7417116133110659815).receivedMessages: 
    []
    [ErrorSessionMessage(flowException=null, errorId=3246541615951131585)]
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62fbdb69, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7eb45531]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62fbdb69, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7eb45531, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@577b0664]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.165Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.174Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4275695503330198516), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-2441820189578619986), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6be7bf71, sender=O=TIE, L=TestVillage, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:05.165Z
    2021-04-15T13:18:05.174Z
checkpoint.checkpointState.sessions.SessionId(toLong=-4275695503330198516): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--4275695503330198516-3157768765078917735)
    Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-2441820189578619986), deduplicationSeed=R--4275695503330198516-3157768765078917735)
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62fbdb69, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7eb45531, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@577b0664]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62fbdb69, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7eb45531, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@577b0664, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6be7bf71]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.175Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.182Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4275695503330198516), payload=ErrorSessionMessage(flowException=null, errorId=-5313535288431265607)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41a6dcdd, sender=O=TIE, L=TestVillage, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:05.174Z
    2021-04-15T13:18:05.182Z
checkpoint.checkpointState.sessions.SessionId(toLong=-4275695503330198516).receivedMessages: 
    []
    [ErrorSessionMessage(flowException=null, errorId=-5313535288431265607)]
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62fbdb69, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7eb45531, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@577b0664, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6be7bf71]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62fbdb69, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7eb45531, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@577b0664, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6be7bf71, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41a6dcdd]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.182Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.189Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4374906441151572075), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1d670405, sender=O=Notary, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:05.182Z
    2021-04-15T13:18:05.189Z
checkpoint.checkpointState.sessions.SessionId(toLong=-4374906441151572075).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62fbdb69, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7eb45531, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@577b0664, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6be7bf71, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41a6dcdd]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62fbdb69, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7eb45531, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@577b0664, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6be7bf71, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41a6dcdd, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1d670405]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.189Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-4374906441151572075).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.189Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.NotaryFlow$Client, classToInitiateWith=class net.corda.core.flows.NotaryFlow$Client, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.NotaryFlow$Client$NotarySendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.NotaryFlow$Client, classToInitiateWith=class net.corda.core.flows.NotaryFlow$Client, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.196Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-4374906441151572075))]), maySkipCheckpoint=true, fiber=6434D71BF581CAACD06A10E06FA2B3FFCB460DF5A8553A9B286125717C3B8AC9, currentStep=Starting)
  Actions: 
    CommitTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState.frozenFiber.hash: 
    0EBD69D3A1FA8EEE6A38F161ED621610206366C4AA5F84E4D97C1EC191BEFC6E
    6434D71BF581CAACD06A10E06FA2B3FFCB460DF5A8553A9B286125717C3B8AC9
checkpoint.timestamp: 
    2021-04-15T13:18:05.189Z
    2021-04-15T13:18:05.196Z
checkpoint.flowIoRequest: 
    SendAndReceive
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
checkpoint.checkpointState.numberOfCommits: 
    6
    7
numberOfCommits: 
    6
    7


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.197Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.205Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4374906441151572075), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12a069eb, sender=O=Notary, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:05.197Z
    2021-04-15T13:18:05.205Z
checkpoint.checkpointState.sessions.SessionId(toLong=-4374906441151572075).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62fbdb69, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7eb45531, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@577b0664, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6be7bf71, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41a6dcdd, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1d670405]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62fbdb69, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7eb45531, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@577b0664, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6be7bf71, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41a6dcdd, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1d670405, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12a069eb]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.205Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-4374906441151572075).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.207Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:05.205Z
    2021-04-15T13:18:05.207Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.NotaryFlow$Client, classToInitiateWith=class net.corda.core.flows.NotaryFlow$Client, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.233Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:05.207Z
    2021-04-15T13:18:05.233Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.267Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=7417116133110659815))=FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=7417116133110659815))=AEB36EE90F99A88EC9FB4C02CBE0A1EA7EA0A5435553CA7CBC7960A247F619D8}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=66402A3C84B0D0A15BDB66B3B50E20BD8FAB2617DB895FDD69EF15F0A6C89246, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[7acfc17e-9d9c-4a65-b5c4-f73f5680c184], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=82081eb1-516a-4fbd-a311-54f3f9946b64, timestamp: 2021-04-15T13:18:04.485Z, entityType: Invocation, sessionId=82081eb1-516a-4fbd-a311-54f3f9946b64, timestamp: 2021-04-15T13:18:04.485Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=7417116133110659815)=Initiated(peerParty=O=InvestorB, L=TestCity, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[ErrorSessionMessage(flowException=null, errorId=3246541615951131585)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3311962895803091771), deduplicationSeed=R-7417116133110659815--4721346096929140260), SessionId(toLong=-4275695503330198516)=Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[ErrorSessionMessage(flowException=null, errorId=-5313535288431265607)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-2441820189578619986), deduplicationSeed=R--4275695503330198516-3157768765078917735), SessionId(toLong=-4374906441151572075)=Initiated(peerParty=O=Notary, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=9, appName=corda), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=2263329290996832436), deduplicationSeed=R--4374906441151572075--434580345365962525)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=7417116133110659815))=FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=7417116133110659815))=AEB36EE90F99A88EC9FB4C02CBE0A1EA7EA0A5435553CA7CBC7960A247F619D8}, shouldRetrySend=false), frozenFiber=66402A3C84B0D0A15BDB66B3B50E20BD8FAB2617DB895FDD69EF15F0A6C89246), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62fbdb69, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7eb45531, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@577b0664, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6be7bf71, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41a6dcdd, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1d670405, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12a069eb])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62fbdb69, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7eb45531, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@577b0664, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6be7bf71, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41a6dcdd, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1d670405, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12a069eb])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState.frozenFiber.hash: 
    6434D71BF581CAACD06A10E06FA2B3FFCB460DF5A8553A9B286125717C3B8AC9
    66402A3C84B0D0A15BDB66B3B50E20BD8FAB2617DB895FDD69EF15F0A6C89246
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-4374906441151572075))])
    SendAndReceive({FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=7417116133110659815))=FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=7417116133110659815))=AEB36EE90F99A88EC9FB4C02CBE0A1EA7EA0A5435553CA7CBC7960A247F619D8}, shouldRetrySend=false)
checkpoint.timestamp: 
    2021-04-15T13:18:05.233Z
    2021-04-15T13:18:05.244Z
checkpoint.flowIoRequest: 
    Receive
    SendAndReceive
checkpoint.checkpointState.numberOfSuspends: 
    6
    7
checkpoint.checkpointState.numberOfCommits: 
    7
    8
numberOfCommits: 
    7
    8
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62fbdb69, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7eb45531, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@577b0664, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6be7bf71, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41a6dcdd, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1d670405, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12a069eb]
    []


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.268Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:18:05.244Z
    2021-04-15T13:18:05.267Z
checkpoint.checkpointState.sessions.SessionId(toLong=7417116133110659815).otherSideErrored: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=7417116133110659815).receivedMessages: 
    [ErrorSessionMessage(flowException=null, errorId=3246541615951131585)]
    []


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.268Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:05.267Z
    2021-04-15T13:18:05.268Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.269Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:05.268Z
    2021-04-15T13:18:05.269Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.269Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false)]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.272Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: O=InvestorB, L=TestCity, C=US has finished prematurely and we're trying to send them the finalised transaction. Did they forget to call ReceiveFinalityFlow? (Counter-flow errored), rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=3246541615951131585, exception=net.corda.core.flows.UnexpectedFlowEndException: O=InvestorB, L=TestCity, C=US has finished prematurely and we're trying to send them the finalised transaction. Did they forget to call ReceiveFinalityFlow? (Counter-flow errored))], propagatedIndex=0, propagating=false)


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.272Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.272Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:05.269Z
    2021-04-15T13:18:05.272Z
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=7acfc17e-9d9c-4a65-b5c4-f73f5680c184, invocation_id=82081eb1-516a-4fbd-a311-54f3f9946b64, invocation_timestamp=2021-04-15T13:18:04.485Z, origin=Only For Testing, session_id=82081eb1-516a-4fbd-a311-54f3f9946b64, session_timestamp=2021-04-15T13:18:04.485Z, thread-id=649, tx_id=93E0BA91322446DA706A3418BDE43641509A4C9C451E6DD59319F57ED4011EAD}
[WARN ] 2021-04-15T13:18:05,300Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] error {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=7acfc17e-9d9c-4a65-b5c4-f73f5680c184, invocation_id=82081eb1-516a-4fbd-a311-54f3f9946b64, invocation_timestamp=2021-04-15T13:18:04.485Z, origin=Only For Testing, session_id=82081eb1-516a-4fbd-a311-54f3f9946b64, session_timestamp=2021-04-15T13:18:04.485Z, thread-id=649, tx_id=93E0BA91322446DA706A3418BDE43641509A4C9C451E6DD59319F57ED4011EAD}
net.corda.core.flows.UnexpectedFlowEndException: O=InvestorB, L=TestCity, C=US has finished prematurely and we're trying to send them the finalised transaction. Did they forget to call ReceiveFinalityFlow? (Counter-flow errored)
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:186) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:43) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow.call(ObserverAwareFinalityFlow.kt:75) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow.call(ObserverAwareFinalityFlow.kt:35) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:63) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:26) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[WARN ] 2021-04-15T13:18:05,300Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=7acfc17e-9d9c-4a65-b5c4-f73f5680c184, invocation_id=82081eb1-516a-4fbd-a311-54f3f9946b64, invocation_timestamp=2021-04-15T13:18:04.485Z, origin=Only For Testing, session_id=82081eb1-516a-4fbd-a311-54f3f9946b64, session_timestamp=2021-04-15T13:18:04.485Z, thread-id=649, tx_id=93E0BA91322446DA706A3418BDE43641509A4C9C451E6DD59319F57ED4011EAD}
[WARN ] 2021-04-15T13:18:05,322Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] errored, dumping all transitions:

 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.489Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[7acfc17e-9d9c-4a65-b5c4-f73f5680c184], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=82081eb1-516a-4fbd-a311-54f3f9946b64, timestamp: 2021-04-15T13:18:04.485Z, entityType: Invocation, sessionId=82081eb1-516a-4fbd-a311-54f3f9946b64, timestamp: 2021-04-15T13:18:04.485Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=CE8EE259533B5E61CBEA51F5E648A78EB060878AE6788C74ECEBCB78AEC91B71), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@60020fd9])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@60020fd9])
    SignalFlowHasStarted(flowId=[7acfc17e-9d9c-4a65-b5c4-f73f5680c184])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@60020fd9]
    []


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.597Z
  Event: InitiateFlow(destination=O=InvestorB, L=TestCity, C=US, wellKnownParty=O=InvestorB, L=TestCity, C=US)
  Actions: 
    AddSessionBinding(flowId=[7acfc17e-9d9c-4a65-b5c4-f73f5680c184], sessionId=SessionId(toLong=7417116133110659815))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:04.486Z
    2021-04-15T13:18:04.597Z
checkpoint.checkpointState.sessions.SessionId(toLong=7417116133110659815): 
    null
    Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=7417116133110659815), additionalEntropy=-4721346096929140260)


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.597Z
  Event: InitiateFlow(destination=O=TIE, L=TestVillage, C=US, wellKnownParty=O=TIE, L=TestVillage, C=US)
  Actions: 
    AddSessionBinding(flowId=[7acfc17e-9d9c-4a65-b5c4-f73f5680c184], sessionId=SessionId(toLong=-4275695503330198516))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-4275695503330198516): 
    null
    Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-4275695503330198516), additionalEntropy=3157768765078917735)


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.597Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.607Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:04.597Z
    2021-04-15T13:18:04.607Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false)]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.607Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.627Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=7417116133110659815))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), maySkipCheckpoint=false, fiber=0D6B6B46AFFB2D57A6E643A1611253F46B8B9F77AC3610305A37ECE4CF7FD335, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[7acfc17e-9d9c-4a65-b5c4-f73f5680c184], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=82081eb1-516a-4fbd-a311-54f3f9946b64, timestamp: 2021-04-15T13:18:04.485Z, entityType: Invocation, sessionId=82081eb1-516a-4fbd-a311-54f3f9946b64, timestamp: 2021-04-15T13:18:04.485Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=7417116133110659815)=Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=7417116133110659815), additionalEntropy=-4721346096929140260), SessionId(toLong=-4275695503330198516)=Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-4275695503330198516), additionalEntropy=3157768765078917735)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=7417116133110659815))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), frozenFiber=0D6B6B46AFFB2D57A6E643A1611253F46B8B9F77AC3610305A37ECE4CF7FD335), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=CE8EE259533B5E61CBEA51F5E648A78EB060878AE6788C74ECEBCB78AEC91B71)
    Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=7417116133110659815))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), frozenFiber=0D6B6B46AFFB2D57A6E643A1611253F46B8B9F77AC3610305A37ECE4CF7FD335)
checkpoint.timestamp: 
    2021-04-15T13:18:04.607Z
    2021-04-15T13:18:04.625Z
checkpoint.flowIoRequest: 
    null
    Send
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.progressStep: 
    null
    Starting
numberOfCommits: 
    0
    2


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.634Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=InvestorB, L=TestCity, C=US, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=7417116133110659815), initiationEntropy=-4721346096929140260, initiatorFlowClassName=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-7417116133110659815--4721346096929140260-1-0), senderUUID=dea89cac-3c1c-4621-abcd-05dd4efe4834))], sendExisting=[])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:18:04.625Z
    2021-04-15T13:18:04.628Z
checkpoint.checkpointState.sessions.SessionId(toLong=7417116133110659815): 
    Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=7417116133110659815), additionalEntropy=-4721346096929140260)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-7417116133110659815--4721346096929140260)


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.645Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-4275695503330198516))=0B9A9651C5E9F17665E1C7470E70C465EF497D6E0B91CA6ECCA58BDFE3E53298}), maySkipCheckpoint=false, fiber=1E26ABF573A0F6E7CF8C278B07839CBE29DE14ADF31188AE2603CAB0E03FD134, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[7acfc17e-9d9c-4a65-b5c4-f73f5680c184], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=82081eb1-516a-4fbd-a311-54f3f9946b64, timestamp: 2021-04-15T13:18:04.485Z, entityType: Invocation, sessionId=82081eb1-516a-4fbd-a311-54f3f9946b64, timestamp: 2021-04-15T13:18:04.485Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=7417116133110659815)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-7417116133110659815--4721346096929140260), SessionId(toLong=-4275695503330198516)=Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-4275695503330198516), additionalEntropy=3157768765078917735)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-4275695503330198516))=0B9A9651C5E9F17665E1C7470E70C465EF497D6E0B91CA6ECCA58BDFE3E53298}), frozenFiber=1E26ABF573A0F6E7CF8C278B07839CBE29DE14ADF31188AE2603CAB0E03FD134), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState.frozenFiber.hash: 
    0D6B6B46AFFB2D57A6E643A1611253F46B8B9F77AC3610305A37ECE4CF7FD335
    1E26ABF573A0F6E7CF8C278B07839CBE29DE14ADF31188AE2603CAB0E03FD134
checkpoint.flowState.flowIORequest.sessionToMessage.FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=7417116133110659815)): 

    null
checkpoint.flowState.flowIORequest.sessionToMessage.FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-4275695503330198516)): 
    null

checkpoint.timestamp: 
    2021-04-15T13:18:04.628Z
    2021-04-15T13:18:04.640Z
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.651Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=TIE, L=TestVillage, C=US, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-4275695503330198516), initiationEntropy=3157768765078917735, initiatorFlowClassName=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--4275695503330198516-3157768765078917735-2-0), senderUUID=dea89cac-3c1c-4621-abcd-05dd4efe4834))], sendExisting=[])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:18:04.640Z
    2021-04-15T13:18:04.646Z
checkpoint.checkpointState.sessions.SessionId(toLong=-4275695503330198516): 
    Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-4275695503330198516), additionalEntropy=3157768765078917735)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--4275695503330198516-3157768765078917735)


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.652Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.FinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:04.646Z
    2021-04-15T13:18:04.652Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.671Z
  Event: Suspend(ioRequest=net.corda.core.internal.FlowIORequest$ForceCheckpoint@63077712, maySkipCheckpoint=false, fiber=E6562548AA67A54D9CB822E8750E5C739467EA163DBA43FE37D801400A990ED0, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[7acfc17e-9d9c-4a65-b5c4-f73f5680c184], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=82081eb1-516a-4fbd-a311-54f3f9946b64, timestamp: 2021-04-15T13:18:04.485Z, entityType: Invocation, sessionId=82081eb1-516a-4fbd-a311-54f3f9946b64, timestamp: 2021-04-15T13:18:04.485Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=7417116133110659815)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-7417116133110659815--4721346096929140260), SessionId(toLong=-4275695503330198516)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--4275695503330198516-3157768765078917735)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=net.corda.core.internal.FlowIORequest$ForceCheckpoint@63077712, frozenFiber=E6562548AA67A54D9CB822E8750E5C739467EA163DBA43FE37D801400A990ED0), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=ForceCheckpoint, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState.frozenFiber.hash: 
    1E26ABF573A0F6E7CF8C278B07839CBE29DE14ADF31188AE2603CAB0E03FD134
    E6562548AA67A54D9CB822E8750E5C739467EA163DBA43FE37D801400A990ED0
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-4275695503330198516))=0B9A9651C5E9F17665E1C7470E70C465EF497D6E0B91CA6ECCA58BDFE3E53298})
    net.corda.core.internal.FlowIORequest$ForceCheckpoint@63077712
checkpoint.timestamp: 
    2021-04-15T13:18:04.652Z
    2021-04-15T13:18:04.668Z
checkpoint.flowIoRequest: 
    Send
    ForceCheckpoint
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
numberOfCommits: 
    3
    4


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.671Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.671Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.NotaryFlow$Client, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:04.668Z
    2021-04-15T13:18:04.671Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.NotaryFlow$Client, classToInitiateWith=class net.corda.core.flows.NotaryFlow$Client, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.674Z
  Event: InitiateFlow(destination=O=Notary, L=London, C=GB, wellKnownParty=O=Notary, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[7acfc17e-9d9c-4a65-b5c4-f73f5680c184], sessionId=SessionId(toLong=-4374906441151572075))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:04.671Z
    2021-04-15T13:18:04.674Z
checkpoint.checkpointState.sessions.SessionId(toLong=-4374906441151572075): 
    null
    Uninitiated(destination=O=Notary, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.core.flows.NotaryFlow$Client, classToInitiateWith=class net.corda.core.flows.NotaryFlow$Client, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-4374906441151572075), additionalEntropy=-434580345365962525)


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.676Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.NotaryFlow$Client$NotarySendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:04.674Z
    2021-04-15T13:18:04.676Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.NotaryFlow$Client, classToInitiateWith=class net.corda.core.flows.NotaryFlow$Client, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.NotaryFlow$Client, classToInitiateWith=class net.corda.core.flows.NotaryFlow$Client, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.NotaryFlow$Client$NotarySendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.687Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-4374906441151572075))=FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-4374906441151572075))=C329E8CF2D73A86DA40079A70D2BAF547B985902F50C8EEE7350622729386D49}, shouldRetrySend=true), maySkipCheckpoint=true, fiber=A51B5B2C15BCEC9B6347882035DFF347769B7FD37E8DFF6FB3A0E80EE1C429D4, currentStep=Starting)
  Actions: 
    CommitTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState.frozenFiber.hash: 
    E6562548AA67A54D9CB822E8750E5C739467EA163DBA43FE37D801400A990ED0
    A51B5B2C15BCEC9B6347882035DFF347769B7FD37E8DFF6FB3A0E80EE1C429D4
checkpoint.flowState.flowIORequest: 
    net.corda.core.internal.FlowIORequest$ForceCheckpoint@63077712
    SendAndReceive({FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-4374906441151572075))=FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-4374906441151572075))=C329E8CF2D73A86DA40079A70D2BAF547B985902F50C8EEE7350622729386D49}, shouldRetrySend=true)
checkpoint.timestamp: 
    2021-04-15T13:18:04.676Z
    2021-04-15T13:18:04.686Z
checkpoint.flowIoRequest: 
    ForceCheckpoint
    SendAndReceive
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.checkpointState.numberOfCommits: 
    4
    5
numberOfCommits: 
    4
    5


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.688Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Notary, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-4374906441151572075), initiationEntropy=-434580345365962525, initiatorFlowClassName=net.corda.core.flows.NotaryFlow$Client, appName=corda-core-4.7, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--4374906441151572075--434580345365962525-4-0), senderUUID=dea89cac-3c1c-4621-abcd-05dd4efe4834))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-4374906441151572075))=FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-4374906441151572075))=C329E8CF2D73A86DA40079A70D2BAF547B985902F50C8EEE7350622729386D49}, shouldRetrySend=true)
    Receive(sessions=[FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-4374906441151572075))])
checkpoint.timestamp: 
    2021-04-15T13:18:04.686Z
    2021-04-15T13:18:04.687Z
checkpoint.checkpointState.sessions.SessionId(toLong=-4374906441151572075): 
    Uninitiated(destination=O=Notary, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.core.flows.NotaryFlow$Client, classToInitiateWith=class net.corda.core.flows.NotaryFlow$Client, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-4374906441151572075), additionalEntropy=-434580345365962525)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--4374906441151572075--434580345365962525)


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.726Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4374906441151572075), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=2263329290996832436), initiatedFlowInfo=FlowInfo(flowVersion=9, appName=corda))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239, sender=O=Notary, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:04.687Z
    2021-04-15T13:18:04.726Z
checkpoint.checkpointState.sessions.SessionId(toLong=-4374906441151572075): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--4374906441151572075--434580345365962525)
    Initiated(peerParty=O=Notary, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=9, appName=corda), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=2263329290996832436), deduplicationSeed=R--4374906441151572075--434580345365962525)
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.727Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.931Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4374906441151572075), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62fbdb69, sender=O=Notary, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:04.727Z
    2021-04-15T13:18:04.931Z
checkpoint.checkpointState.sessions.SessionId(toLong=-4374906441151572075).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62fbdb69]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.931Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-4374906441151572075).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.945Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-4374906441151572075))=FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-4374906441151572075))=DD6D2F0399FB37A5B77FD940F3AD5B506E03D114B48BA39A12DFC76881ED5EAD}, shouldRetrySend=true), maySkipCheckpoint=true, fiber=0EBD69D3A1FA8EEE6A38F161ED621610206366C4AA5F84E4D97C1EC191BEFC6E, currentStep=Starting)
  Actions: 
    CommitTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState.frozenFiber.hash: 
    A51B5B2C15BCEC9B6347882035DFF347769B7FD37E8DFF6FB3A0E80EE1C429D4
    0EBD69D3A1FA8EEE6A38F161ED621610206366C4AA5F84E4D97C1EC191BEFC6E
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-4374906441151572075))])
    SendAndReceive({FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-4374906441151572075))=FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-4374906441151572075))=DD6D2F0399FB37A5B77FD940F3AD5B506E03D114B48BA39A12DFC76881ED5EAD}, shouldRetrySend=true)
checkpoint.timestamp: 
    2021-04-15T13:18:04.931Z
    2021-04-15T13:18:04.944Z
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.checkpointState.numberOfCommits: 
    5
    6
numberOfCommits: 
    5
    6


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:04.945Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Notary, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=2263329290996832436), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--4374906441151572075--434580345365962525-5-0), senderUUID=dea89cac-3c1c-4621-abcd-05dd4efe4834))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-4374906441151572075))=FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-4374906441151572075))=DD6D2F0399FB37A5B77FD940F3AD5B506E03D114B48BA39A12DFC76881ED5EAD}, shouldRetrySend=true)
    Receive(sessions=[FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-4374906441151572075))])
checkpoint.timestamp: 
    2021-04-15T13:18:04.944Z
    2021-04-15T13:18:04.945Z


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.050Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7417116133110659815), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=3311962895803091771), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7eb45531, sender=O=InvestorB, L=TestCity, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:04.945Z
    2021-04-15T13:18:05.050Z
checkpoint.checkpointState.sessions.SessionId(toLong=7417116133110659815): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-7417116133110659815--4721346096929140260)
    Initiated(peerParty=O=InvestorB, L=TestCity, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3311962895803091771), deduplicationSeed=R-7417116133110659815--4721346096929140260)
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62fbdb69]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62fbdb69, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7eb45531]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.050Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.164Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7417116133110659815), payload=ErrorSessionMessage(flowException=null, errorId=3246541615951131585)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@577b0664, sender=O=InvestorB, L=TestCity, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:05.050Z
    2021-04-15T13:18:05.164Z
checkpoint.checkpointState.sessions.SessionId(toLong=7417116133110659815).receivedMessages: 
    []
    [ErrorSessionMessage(flowException=null, errorId=3246541615951131585)]
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62fbdb69, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7eb45531]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62fbdb69, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7eb45531, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@577b0664]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.165Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.174Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4275695503330198516), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-2441820189578619986), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6be7bf71, sender=O=TIE, L=TestVillage, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:05.165Z
    2021-04-15T13:18:05.174Z
checkpoint.checkpointState.sessions.SessionId(toLong=-4275695503330198516): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--4275695503330198516-3157768765078917735)
    Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-2441820189578619986), deduplicationSeed=R--4275695503330198516-3157768765078917735)
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62fbdb69, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7eb45531, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@577b0664]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62fbdb69, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7eb45531, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@577b0664, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6be7bf71]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.175Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.182Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4275695503330198516), payload=ErrorSessionMessage(flowException=null, errorId=-5313535288431265607)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41a6dcdd, sender=O=TIE, L=TestVillage, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:05.174Z
    2021-04-15T13:18:05.182Z
checkpoint.checkpointState.sessions.SessionId(toLong=-4275695503330198516).receivedMessages: 
    []
    [ErrorSessionMessage(flowException=null, errorId=-5313535288431265607)]
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62fbdb69, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7eb45531, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@577b0664, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6be7bf71]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62fbdb69, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7eb45531, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@577b0664, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6be7bf71, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41a6dcdd]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.182Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.189Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4374906441151572075), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1d670405, sender=O=Notary, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:05.182Z
    2021-04-15T13:18:05.189Z
checkpoint.checkpointState.sessions.SessionId(toLong=-4374906441151572075).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62fbdb69, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7eb45531, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@577b0664, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6be7bf71, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41a6dcdd]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62fbdb69, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7eb45531, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@577b0664, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6be7bf71, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41a6dcdd, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1d670405]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.189Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-4374906441151572075).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.189Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.NotaryFlow$Client, classToInitiateWith=class net.corda.core.flows.NotaryFlow$Client, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.NotaryFlow$Client$NotarySendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.NotaryFlow$Client, classToInitiateWith=class net.corda.core.flows.NotaryFlow$Client, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.196Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-4374906441151572075))]), maySkipCheckpoint=true, fiber=6434D71BF581CAACD06A10E06FA2B3FFCB460DF5A8553A9B286125717C3B8AC9, currentStep=Starting)
  Actions: 
    CommitTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState.frozenFiber.hash: 
    0EBD69D3A1FA8EEE6A38F161ED621610206366C4AA5F84E4D97C1EC191BEFC6E
    6434D71BF581CAACD06A10E06FA2B3FFCB460DF5A8553A9B286125717C3B8AC9
checkpoint.timestamp: 
    2021-04-15T13:18:05.189Z
    2021-04-15T13:18:05.196Z
checkpoint.flowIoRequest: 
    SendAndReceive
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
checkpoint.checkpointState.numberOfCommits: 
    6
    7
numberOfCommits: 
    6
    7


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.197Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.205Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4374906441151572075), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12a069eb, sender=O=Notary, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:05.197Z
    2021-04-15T13:18:05.205Z
checkpoint.checkpointState.sessions.SessionId(toLong=-4374906441151572075).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62fbdb69, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7eb45531, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@577b0664, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6be7bf71, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41a6dcdd, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1d670405]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62fbdb69, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7eb45531, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@577b0664, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6be7bf71, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41a6dcdd, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1d670405, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12a069eb]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.205Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-4374906441151572075).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.207Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:05.205Z
    2021-04-15T13:18:05.207Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.NotaryFlow$Client, classToInitiateWith=class net.corda.core.flows.NotaryFlow$Client, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.233Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:05.207Z
    2021-04-15T13:18:05.233Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.267Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=7417116133110659815))=FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=7417116133110659815))=AEB36EE90F99A88EC9FB4C02CBE0A1EA7EA0A5435553CA7CBC7960A247F619D8}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=66402A3C84B0D0A15BDB66B3B50E20BD8FAB2617DB895FDD69EF15F0A6C89246, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[7acfc17e-9d9c-4a65-b5c4-f73f5680c184], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=82081eb1-516a-4fbd-a311-54f3f9946b64, timestamp: 2021-04-15T13:18:04.485Z, entityType: Invocation, sessionId=82081eb1-516a-4fbd-a311-54f3f9946b64, timestamp: 2021-04-15T13:18:04.485Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=7417116133110659815)=Initiated(peerParty=O=InvestorB, L=TestCity, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[ErrorSessionMessage(flowException=null, errorId=3246541615951131585)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3311962895803091771), deduplicationSeed=R-7417116133110659815--4721346096929140260), SessionId(toLong=-4275695503330198516)=Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[ErrorSessionMessage(flowException=null, errorId=-5313535288431265607)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-2441820189578619986), deduplicationSeed=R--4275695503330198516-3157768765078917735), SessionId(toLong=-4374906441151572075)=Initiated(peerParty=O=Notary, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=9, appName=corda), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=2263329290996832436), deduplicationSeed=R--4374906441151572075--434580345365962525)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=7417116133110659815))=FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=7417116133110659815))=AEB36EE90F99A88EC9FB4C02CBE0A1EA7EA0A5435553CA7CBC7960A247F619D8}, shouldRetrySend=false), frozenFiber=66402A3C84B0D0A15BDB66B3B50E20BD8FAB2617DB895FDD69EF15F0A6C89246), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62fbdb69, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7eb45531, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@577b0664, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6be7bf71, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41a6dcdd, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1d670405, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12a069eb])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62fbdb69, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7eb45531, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@577b0664, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6be7bf71, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41a6dcdd, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1d670405, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12a069eb])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState.frozenFiber.hash: 
    6434D71BF581CAACD06A10E06FA2B3FFCB460DF5A8553A9B286125717C3B8AC9
    66402A3C84B0D0A15BDB66B3B50E20BD8FAB2617DB895FDD69EF15F0A6C89246
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-4374906441151572075))])
    SendAndReceive({FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=7417116133110659815))=FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=7417116133110659815))=AEB36EE90F99A88EC9FB4C02CBE0A1EA7EA0A5435553CA7CBC7960A247F619D8}, shouldRetrySend=false)
checkpoint.timestamp: 
    2021-04-15T13:18:05.233Z
    2021-04-15T13:18:05.244Z
checkpoint.flowIoRequest: 
    Receive
    SendAndReceive
checkpoint.checkpointState.numberOfSuspends: 
    6
    7
checkpoint.checkpointState.numberOfCommits: 
    7
    8
numberOfCommits: 
    7
    8
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12777239, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62fbdb69, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7eb45531, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@577b0664, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6be7bf71, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41a6dcdd, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1d670405, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@12a069eb]
    []


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.268Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:18:05.244Z
    2021-04-15T13:18:05.267Z
checkpoint.checkpointState.sessions.SessionId(toLong=7417116133110659815).otherSideErrored: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=7417116133110659815).receivedMessages: 
    [ErrorSessionMessage(flowException=null, errorId=3246541615951131585)]
    []


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.268Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:05.267Z
    2021-04-15T13:18:05.268Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.269Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:05.268Z
    2021-04-15T13:18:05.269Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.269Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false)]


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.272Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: O=InvestorB, L=TestCity, C=US has finished prematurely and we're trying to send them the finalised transaction. Did they forget to call ReceiveFinalityFlow? (Counter-flow errored), rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=3246541615951131585, exception=net.corda.core.flows.UnexpectedFlowEndException: O=InvestorB, L=TestCity, C=US has finished prematurely and we're trying to send them the finalised transaction. Did they forget to call ReceiveFinalityFlow? (Counter-flow errored))], propagatedIndex=0, propagating=false)


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.272Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.272Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:18:05.269Z
    2021-04-15T13:18:05.272Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] ---
  Timestamp: 2021-04-15T13:18:05.307Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=3246541615951131585)], sessions=[Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[ErrorSessionMessage(flowException=null, errorId=-5313535288431265607)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-2441820189578619986), deduplicationSeed=R--4275695503330198516-3157768765078917735), Initiated(peerParty=O=Notary, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=9, appName=corda), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=2263329290996832436), deduplicationSeed=R--4374906441151572075--434580345365962525)], senderUUID=dea89cac-3c1c-4621-abcd-05dd4efe4834)
    CreateTransaction
    RemoveCheckpoint(id=[7acfc17e-9d9c-4a65-b5c4-f73f5680c184], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=7acfc17e-9d9c-4a65-b5c4-f73f5680c184)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=7417116133110659815), SessionId(toLong=-4275695503330198516), SessionId(toLong=-4374906441151572075)])
    RemoveFlow(flowId=[7acfc17e-9d9c-4a65-b5c4-f73f5680c184], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=3246541615951131585, exception=net.corda.core.flows.UnexpectedFlowEndException: O=InvestorB, L=TestCity, C=US has finished prematurely and we're trying to send them the finalised transaction. Did they forget to call ReceiveFinalityFlow? (Counter-flow errored))]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=82081eb1-516a-4fbd-a311-54f3f9946b64, timestamp: 2021-04-15T13:18:04.485Z, entityType: Invocation, sessionId=82081eb1-516a-4fbd-a311-54f3f9946b64, timestamp: 2021-04-15T13:18:04.485Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=7417116133110659815)=Initiated(peerParty=O=InvestorB, L=TestCity, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=3311962895803091771), deduplicationSeed=R-7417116133110659815--4721346096929140260), SessionId(toLong=-4275695503330198516)=Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[ErrorSessionMessage(flowException=null, errorId=-5313535288431265607)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-2441820189578619986), deduplicationSeed=R--4275695503330198516-3157768765078917735), SessionId(toLong=-4374906441151572075)=Initiated(peerParty=O=Notary, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=9, appName=corda), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=2263329290996832436), deduplicationSeed=R--4374906441151572075--434580345365962525)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=5746B295F24C7C958C3AFEB3725330013132D40CC9B6068506CBB1E8B95F4846), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=9), flowState=net.corda.node.services.statemachine.FlowState$Finished@21655ff5, errorState=Errored(errors=[FlowError(errorId=3246541615951131585, exception=net.corda.core.flows.UnexpectedFlowEndException: O=InvestorB, L=TestCity, C=US has finished prematurely and we're trying to send them the finalised transaction. Did they forget to call ReceiveFinalityFlow? (Counter-flow errored))], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator@20652e94, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, senderUUID=dea89cac-3c1c-4621-abcd-05dd4efe4834, reloadCheckpointAfterSuspendCount=null, numberOfCommits=9, lock=java.util.concurrent.Semaphore@5eff08fc[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.flowState: 
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=7417116133110659815))=FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=7417116133110659815))=AEB36EE90F99A88EC9FB4C02CBE0A1EA7EA0A5435553CA7CBC7960A247F619D8}, shouldRetrySend=false), frozenFiber=66402A3C84B0D0A15BDB66B3B50E20BD8FAB2617DB895FDD69EF15F0A6C89246)
    net.corda.node.services.statemachine.FlowState$Finished@21655ff5
checkpoint.timestamp: 
    2021-04-15T13:18:05.272Z
    2021-04-15T13:18:05.300Z
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.checkpointState.numberOfCommits: 
    8
    9
isRemoved: 
    false
    true
numberOfCommits: 
    8
    9
 {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=7acfc17e-9d9c-4a65-b5c4-f73f5680c184, invocation_id=82081eb1-516a-4fbd-a311-54f3f9946b64, invocation_timestamp=2021-04-15T13:18:04.485Z, origin=Only For Testing, session_id=82081eb1-516a-4fbd-a311-54f3f9946b64, session_timestamp=2021-04-15T13:18:04.485Z, thread-id=649, tx_id=93E0BA91322446DA706A3418BDE43641509A4C9C451E6DD59319F57ED4011EAD}
[WARN ] 2021-04-15T13:18:05,322Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [7acfc17e-9d9c-4a65-b5c4-f73f5680c184] error {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=7acfc17e-9d9c-4a65-b5c4-f73f5680c184, invocation_id=82081eb1-516a-4fbd-a311-54f3f9946b64, invocation_timestamp=2021-04-15T13:18:04.485Z, origin=Only For Testing, session_id=82081eb1-516a-4fbd-a311-54f3f9946b64, session_timestamp=2021-04-15T13:18:04.485Z, thread-id=649, tx_id=93E0BA91322446DA706A3418BDE43641509A4C9C451E6DD59319F57ED4011EAD}
net.corda.core.flows.UnexpectedFlowEndException: O=InvestorB, L=TestCity, C=US has finished prematurely and we're trying to send them the finalised transaction. Did they forget to call ReceiveFinalityFlow? (Counter-flow errored)
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:186) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:43) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow.call(ObserverAwareFinalityFlow.kt:75) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow.call(ObserverAwareFinalityFlow.kt:35) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:63) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:26) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[INFO ] 2021-04-15T13:18:05,328Z [Mock network] statemachine.SingleThreadedStateMachineManager. - Cannot find flow corresponding to session ID - SessionId(toLong=-2441820189578619986). {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=7acfc17e-9d9c-4a65-b5c4-f73f5680c184, invocation_id=82081eb1-516a-4fbd-a311-54f3f9946b64, invocation_timestamp=2021-04-15T13:18:04.485Z, origin=Only For Testing, session_id=82081eb1-516a-4fbd-a311-54f3f9946b64, session_timestamp=2021-04-15T13:18:04.485Z, thread-id=649}
[INFO ] 2021-04-15T13:18:05,330Z [Mock network] statemachine.SingleThreadedStateMachineManager. - Cannot find flow corresponding to session ID - SessionId(toLong=2263329290996832436). {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=7acfc17e-9d9c-4a65-b5c4-f73f5680c184, invocation_id=82081eb1-516a-4fbd-a311-54f3f9946b64, invocation_timestamp=2021-04-15T13:18:04.485Z, origin=Only For Testing, session_id=82081eb1-516a-4fbd-a311-54f3f9946b64, session_timestamp=2021-04-15T13:18:04.485Z, thread-id=649}
[INFO ] 2021-04-15T13:18:05,345Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2021-04-15T13:18:05,379Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:18:05,379Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:18:05,384Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2021-04-15T13:18:05,404Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:18:05,404Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:18:05,405Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2021-04-15T13:18:05,418Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:18:05,418Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:18:05,419Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2021-04-15T13:18:05,429Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:18:05,429Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:34:48,065Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/peterli/Desktop/tokenTest/workflows ... {}
[INFO ] 2021-04-15T13:34:48,273Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:34:49,611Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2021-04-15T13:34:50,548Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2021-04-15T13:34:50,560Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2021-04-15T13:34:50,561Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:34:51,178Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:34:51,208Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2021-04-15T13:34:51,736Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:34:51,746Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:34:51,746Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2021-04-15T13:34:51,946Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:34:51,956Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:34:52,555Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2021-04-15T13:34:53,429Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:34:53,440Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2021-04-15T13:34:53,464Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:34:53,464Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2021-04-15T13:34:53,465Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:34:54,330Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:34:54,330Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2021-04-15T13:34:54,463Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:34:54,464Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2021-04-15T13:34:54,497Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:34:54,497Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2021-04-15T13:34:54,603Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:34:54,615Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:34:54,744Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:34:54,778Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:34:54,832Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2021-04-15T13:34:55,103Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:34:55,114Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2021-04-15T13:34:55,114Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:34:55,135Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2021-04-15T13:34:55,135Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:34:55,168Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:34:55,168Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2021-04-15T13:34:55,178Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:34:55,178Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2021-04-15T13:34:55,178Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:34:55,178Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:34:55,190Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2021-04-15T13:34:55,289Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:34:55,289Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:34:55,300Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:34:55,301Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:34:55,301Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:34:55,301Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:34:55,301Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:34:55,301Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:34:55,301Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:34:55,313Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:34:55,313Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2021-04-15T13:34:55,333Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:34:55,333Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:34:55,357Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2021-04-15T13:34:55,394Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:34:55,405Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2021-04-15T13:34:55,405Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:34:55,417Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2021-04-15T13:34:55,417Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:34:55,427Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:34:55,428Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2021-04-15T13:34:55,440Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:34:55,440Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2021-04-15T13:34:55,440Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:34:55,440Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:34:55,440Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2021-04-15T13:34:55,486Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:34:55,486Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:34:55,486Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:34:55,486Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:34:55,497Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:34:55,497Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:34:55,498Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:34:55,498Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:34:55,498Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:34:55,498Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:34:55,498Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:34:55,498Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:34:55,498Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2021-04-15T13:34:57,197Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:34:57,208Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:34:57,208Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2021-04-15T13:34:57,208Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:34:57,211Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:34:57,231Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/peterli/Desktop/tokenTest/.gradle {}
[INFO ] 2021-04-15T13:34:57,231Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:34:57,244Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2021-04-15T13:35:02,128Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/0/cordapps] {}
[INFO ] 2021-04-15T13:35:02,135Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:35:02,148Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:35:02,259Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:35:02,281Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:35:02,333Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:35:03,900Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:35:04,146Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:35:04,210Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:35:04,228Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:35:04,233Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL7tE3FmJSYiEvY2mhW9S7fVh2CB1dfe6aMtrhfHcucSht, alias: identity-private-key {}
[INFO ] 2021-04-15T13:35:04,384Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:35:04,385Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:35:04,389Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:04,390Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:04,390Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:04,390Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:04,391Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:04,391Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:04,392Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:04,392Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:04,392Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:04,393Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:04,394Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:35:04,395Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:35:04,396Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:35:04,431Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:35:04,520Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:34:44.146Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:35:10,111Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:35:10,216Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-04-15T13:35:10,222Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-04-15T13:35:13,032Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-04-15T13:35:13,384Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:35:13,394Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618493713384), owningKey=DL7tE3FmJSYiEvY2mhW9S7fVh2CB1dfe6aMtrhfHcucSht {}
[INFO ] 2021-04-15T13:35:13,394Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:35:13,579Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618493713384) {}
[INFO ] 2021-04-15T13:35:13,647Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:35:13,679Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:35:13,681Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:35:13,723Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618493713384), owningKey=DL7tE3FmJSYiEvY2mhW9S7fVh2CB1dfe6aMtrhfHcucSht {}
[INFO ] 2021-04-15T13:35:13,723Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:35:13,845Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:35:13,878Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:35:13,894Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:35:13,907Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:35:13,997Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:35:14,102Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:35:14,102Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-04-15T13:35:14,886Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618493713384) {}
[INFO ] 2021-04-15T13:35:14,894Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618493713384), owningKey=DL7tE3FmJSYiEvY2mhW9S7fVh2CB1dfe6aMtrhfHcucSht {}
[INFO ] 2021-04-15T13:35:14,894Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:35:14,895Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618493713384), owningKey=DL7tE3FmJSYiEvY2mhW9S7fVh2CB1dfe6aMtrhfHcucSht {}
[INFO ] 2021-04-15T13:35:14,895Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:35:14,908Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/1/cordapps] {}
[INFO ] 2021-04-15T13:35:14,909Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:35:14,909Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:35:14,920Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:35:14,927Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:35:14,942Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:35:15,015Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:35:15,017Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:35:15,018Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:35:15,067Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:35:15,067Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLP2urUX6WgQ9iAGrXti837QELvBBcS4pxfwMsL1GFoPt, alias: identity-private-key {}
[INFO ] 2021-04-15T13:35:15,075Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:35:15,075Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:35:15,075Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:15,076Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:15,076Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:15,076Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:15,076Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:15,076Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:15,076Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:15,076Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:15,076Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:15,076Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:15,076Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:35:15,077Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:35:15,077Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:35:15,077Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:35:15,084Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:34:44.146Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:35:15,874Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:35:15,876Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:35:15,876Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:35:16,088Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:35:16,095Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:35:16,100Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618493716095), owningKey=DLP2urUX6WgQ9iAGrXti837QELvBBcS4pxfwMsL1GFoPt {}
[INFO ] 2021-04-15T13:35:16,100Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:35:16,111Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618493716095) {}
[INFO ] 2021-04-15T13:35:16,120Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:35:16,121Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:35:16,121Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:35:16,131Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618493716095), owningKey=DLP2urUX6WgQ9iAGrXti837QELvBBcS4pxfwMsL1GFoPt {}
[INFO ] 2021-04-15T13:35:16,131Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:35:16,176Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:35:16,206Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:35:16,210Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:35:16,210Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:35:16,211Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:35:16,219Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:35:16,256Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618493716095) {}
[INFO ] 2021-04-15T13:35:16,258Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618493713384), owningKey=DL7tE3FmJSYiEvY2mhW9S7fVh2CB1dfe6aMtrhfHcucSht {}
[INFO ] 2021-04-15T13:35:16,258Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:35:16,275Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618493716095), owningKey=DLP2urUX6WgQ9iAGrXti837QELvBBcS4pxfwMsL1GFoPt {}
[INFO ] 2021-04-15T13:35:16,276Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:35:16,294Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618493716095), owningKey=DLP2urUX6WgQ9iAGrXti837QELvBBcS4pxfwMsL1GFoPt {}
[INFO ] 2021-04-15T13:35:16,294Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:35:16,294Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618493716095), owningKey=DLP2urUX6WgQ9iAGrXti837QELvBBcS4pxfwMsL1GFoPt {}
[INFO ] 2021-04-15T13:35:16,295Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:35:16,308Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/2/cordapps] {}
[INFO ] 2021-04-15T13:35:16,308Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:35:16,308Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:35:16,315Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:35:16,322Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:35:16,331Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:35:16,381Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:35:16,383Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:35:16,384Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:35:16,428Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:35:16,429Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLBKbTzUVvaPJFDYKGUs9hvnPYpT2w5FjRieMzWDR6TSb2, alias: identity-private-key {}
[INFO ] 2021-04-15T13:35:16,437Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:35:16,437Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:35:16,437Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:16,437Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:16,437Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:16,437Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:16,437Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:16,438Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:16,438Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:16,438Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:16,438Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:16,438Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:16,438Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:35:16,438Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:35:16,438Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:35:16,438Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:35:16,443Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:34:44.146Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:35:17,110Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:35:17,111Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:35:17,111Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:35:17,290Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:35:17,297Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:35:17,300Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618493717297), owningKey=DLBKbTzUVvaPJFDYKGUs9hvnPYpT2w5FjRieMzWDR6TSb2 {}
[INFO ] 2021-04-15T13:35:17,300Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:35:17,309Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618493717297) {}
[INFO ] 2021-04-15T13:35:17,318Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:35:17,319Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:35:17,319Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:35:17,327Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618493717297), owningKey=DLBKbTzUVvaPJFDYKGUs9hvnPYpT2w5FjRieMzWDR6TSb2 {}
[INFO ] 2021-04-15T13:35:17,327Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:35:17,359Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:35:17,391Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:35:17,394Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:35:17,394Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:35:17,394Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:35:17,401Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:35:17,429Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618493717297) {}
[INFO ] 2021-04-15T13:35:17,431Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618493713384), owningKey=DL7tE3FmJSYiEvY2mhW9S7fVh2CB1dfe6aMtrhfHcucSht {}
[INFO ] 2021-04-15T13:35:17,431Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:35:17,447Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618493717297), owningKey=DLBKbTzUVvaPJFDYKGUs9hvnPYpT2w5FjRieMzWDR6TSb2 {}
[INFO ] 2021-04-15T13:35:17,447Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:35:17,464Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618493716095), owningKey=DLP2urUX6WgQ9iAGrXti837QELvBBcS4pxfwMsL1GFoPt {}
[INFO ] 2021-04-15T13:35:17,464Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:35:17,478Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618493717297), owningKey=DLBKbTzUVvaPJFDYKGUs9hvnPYpT2w5FjRieMzWDR6TSb2 {}
[INFO ] 2021-04-15T13:35:17,478Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:35:17,491Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618493717297), owningKey=DLBKbTzUVvaPJFDYKGUs9hvnPYpT2w5FjRieMzWDR6TSb2 {}
[INFO ] 2021-04-15T13:35:17,491Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:35:17,491Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618493717297), owningKey=DLBKbTzUVvaPJFDYKGUs9hvnPYpT2w5FjRieMzWDR6TSb2 {}
[INFO ] 2021-04-15T13:35:17,491Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:35:17,502Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/3/cordapps] {}
[INFO ] 2021-04-15T13:35:17,502Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/3/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/3/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/3/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/3/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:35:17,503Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/3/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:35:17,510Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/3/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:35:17,516Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/3/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:35:17,525Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/3/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:35:17,571Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:35:17,572Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:35:17,573Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:35:17,615Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:35:17,616Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLHcxJqHHAWb7zcr5smCqAKSHztAdsCvKWrjjknE2xj81k, alias: identity-private-key {}
[INFO ] 2021-04-15T13:35:17,624Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:35:17,624Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:35:17,624Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:17,624Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:17,624Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:17,624Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:17,624Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:17,624Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:17,624Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:17,624Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:17,624Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:17,624Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:35:17,624Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:35:17,624Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:35:17,624Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:35:17,624Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:35:17,629Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:34:44.146Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:35:18,230Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:35:18,232Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:35:18,232Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:35:18,422Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:35:18,427Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:35:18,432Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618493718427), owningKey=DLHcxJqHHAWb7zcr5smCqAKSHztAdsCvKWrjjknE2xj81k {}
[INFO ] 2021-04-15T13:35:18,432Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:35:18,442Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618493718427) {}
[INFO ] 2021-04-15T13:35:18,449Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:35:18,450Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:35:18,450Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:35:18,459Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618493718427), owningKey=DLHcxJqHHAWb7zcr5smCqAKSHztAdsCvKWrjjknE2xj81k {}
[INFO ] 2021-04-15T13:35:18,459Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:35:18,491Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:35:18,513Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:35:18,516Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:35:18,516Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-133446.878-F315AA9B5C8D7425/nodes/3/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:35:18,517Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:35:18,523Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:35:18,548Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618493718427) {}
[INFO ] 2021-04-15T13:35:18,551Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618493713384), owningKey=DL7tE3FmJSYiEvY2mhW9S7fVh2CB1dfe6aMtrhfHcucSht {}
[INFO ] 2021-04-15T13:35:18,551Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:35:18,567Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618493718427), owningKey=DLHcxJqHHAWb7zcr5smCqAKSHztAdsCvKWrjjknE2xj81k {}
[INFO ] 2021-04-15T13:35:18,567Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:35:18,587Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618493716095), owningKey=DLP2urUX6WgQ9iAGrXti837QELvBBcS4pxfwMsL1GFoPt {}
[INFO ] 2021-04-15T13:35:18,587Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:35:18,601Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618493718427), owningKey=DLHcxJqHHAWb7zcr5smCqAKSHztAdsCvKWrjjknE2xj81k {}
[INFO ] 2021-04-15T13:35:18,601Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:35:18,615Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618493717297), owningKey=DLBKbTzUVvaPJFDYKGUs9hvnPYpT2w5FjRieMzWDR6TSb2 {}
[INFO ] 2021-04-15T13:35:18,615Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:35:18,629Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618493718427), owningKey=DLHcxJqHHAWb7zcr5smCqAKSHztAdsCvKWrjjknE2xj81k {}
[INFO ] 2021-04-15T13:35:18,629Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:35:18,640Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618493718427), owningKey=DLHcxJqHHAWb7zcr5smCqAKSHztAdsCvKWrjjknE2xj81k {}
[INFO ] 2021-04-15T13:35:18,640Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:35:18,641Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618493718427), owningKey=DLHcxJqHHAWb7zcr5smCqAKSHztAdsCvKWrjjknE2xj81k {}
[INFO ] 2021-04-15T13:35:18,641Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:35:19,413Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=d4c65825-8fed-48d6-aab2-6eac85d20f42, invocation_id=13479753-1877-4345-8d02-8ff86dfd95e0, invocation_timestamp=2021-04-15T13:35:18.684Z, origin=Only For Testing, session_id=13479753-1877-4345-8d02-8ff86dfd95e0, session_timestamp=2021-04-15T13:35:18.684Z, thread-id=645, tx_id=D7C2C216D4CB86F4FF787478E7DF71463053759931242C5794AC46013C9568D1}
[INFO ] 2021-04-15T13:35:19,413Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=d4c65825-8fed-48d6-aab2-6eac85d20f42, invocation_id=13479753-1877-4345-8d02-8ff86dfd95e0, invocation_timestamp=2021-04-15T13:35:18.684Z, origin=Only For Testing, session_id=13479753-1877-4345-8d02-8ff86dfd95e0, session_timestamp=2021-04-15T13:35:18.684Z, thread-id=645, tx_id=D7C2C216D4CB86F4FF787478E7DF71463053759931242C5794AC46013C9568D1}
[INFO ] 2021-04-15T13:35:19,540Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=d4c65825-8fed-48d6-aab2-6eac85d20f42, invocation_id=13479753-1877-4345-8d02-8ff86dfd95e0, invocation_timestamp=2021-04-15T13:35:18.684Z, origin=Only For Testing, session_id=13479753-1877-4345-8d02-8ff86dfd95e0, session_timestamp=2021-04-15T13:35:18.684Z, thread-id=645, tx_id=D7C2C216D4CB86F4FF787478E7DF71463053759931242C5794AC46013C9568D1}
[INFO ] 2021-04-15T13:35:19,540Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=d4c65825-8fed-48d6-aab2-6eac85d20f42, invocation_id=13479753-1877-4345-8d02-8ff86dfd95e0, invocation_timestamp=2021-04-15T13:35:18.684Z, origin=Only For Testing, session_id=13479753-1877-4345-8d02-8ff86dfd95e0, session_timestamp=2021-04-15T13:35:18.684Z, thread-id=645, tx_id=D7C2C216D4CB86F4FF787478E7DF71463053759931242C5794AC46013C9568D1}
[INFO ] 2021-04-15T13:35:20,038Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary, L=London, C=GB. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=3923116f-3c42-4e9c-b5bc-5036139d30d0, invocation_id=915c4d09-6d66-496f-91aa-867e4f8b9e6b, invocation_timestamp=2021-04-15T13:35:19.630Z, origin=Only For Testing, session_id=915c4d09-6d66-496f-91aa-867e4f8b9e6b, session_timestamp=2021-04-15T13:35:19.630Z, thread-id=645, tx_id=23D189F9C7EA263F7DCA8F0C6CC51EA296F11BDB14DC1B88EF94187B1C31F9F2}
[INFO ] 2021-04-15T13:35:20,167Z [Mock network] corda.flow. - Received a notarisation request for Tx [23D189F9C7EA263F7DCA8F0C6CC51EA296F11BDB14DC1B88EF94187B1C31F9F2] from [O=InvestorA, L=TestLand, C=US] {fiber-id=10000003, flow-id=107e4c02-e2aa-448a-aa7d-c4ff4f9868ae, invocation_id=1bf8fd7f-28f7-4dd6-b2cb-7c3c0816fc31, invocation_timestamp=2021-04-15T13:35:20.129Z, origin=O=InvestorA, L=TestLand, C=US, session_id=1bf8fd7f-28f7-4dd6-b2cb-7c3c0816fc31, session_timestamp=2021-04-15T13:35:20.129Z, thread-id=645}
[INFO ] 2021-04-15T13:35:20,886Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 0 input states and 1 references {}
[INFO ] 2021-04-15T13:35:20,927Z [Mock network] corda.flow. - Transaction [23D189F9C7EA263F7DCA8F0C6CC51EA296F11BDB14DC1B88EF94187B1C31F9F2] successfully notarised, sending signature back to [O=InvestorA, L=TestLand, C=US] {fiber-id=10000003, flow-id=107e4c02-e2aa-448a-aa7d-c4ff4f9868ae, invocation_id=1bf8fd7f-28f7-4dd6-b2cb-7c3c0816fc31, invocation_timestamp=2021-04-15T13:35:20.129Z, origin=O=InvestorA, L=TestLand, C=US, session_id=1bf8fd7f-28f7-4dd6-b2cb-7c3c0816fc31, session_timestamp=2021-04-15T13:35:20.129Z, thread-id=645}
[INFO ] 2021-04-15T13:35:20,987Z [Mock network] corda.flow. - Notary responded (O=Notary, L=London, C=GB). {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=3923116f-3c42-4e9c-b5bc-5036139d30d0, invocation_id=915c4d09-6d66-496f-91aa-867e4f8b9e6b, invocation_timestamp=2021-04-15T13:35:19.630Z, origin=Only For Testing, session_id=915c4d09-6d66-496f-91aa-867e4f8b9e6b, session_timestamp=2021-04-15T13:35:19.630Z, thread-id=645, tx_id=23D189F9C7EA263F7DCA8F0C6CC51EA296F11BDB14DC1B88EF94187B1C31F9F2}
[INFO ] 2021-04-15T13:35:20,988Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=3923116f-3c42-4e9c-b5bc-5036139d30d0, invocation_id=915c4d09-6d66-496f-91aa-867e4f8b9e6b, invocation_timestamp=2021-04-15T13:35:19.630Z, origin=Only For Testing, session_id=915c4d09-6d66-496f-91aa-867e4f8b9e6b, session_timestamp=2021-04-15T13:35:19.630Z, thread-id=645, tx_id=23D189F9C7EA263F7DCA8F0C6CC51EA296F11BDB14DC1B88EF94187B1C31F9F2}
[INFO ] 2021-04-15T13:35:21,021Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=3923116f-3c42-4e9c-b5bc-5036139d30d0, invocation_id=915c4d09-6d66-496f-91aa-867e4f8b9e6b, invocation_timestamp=2021-04-15T13:35:19.630Z, origin=Only For Testing, session_id=915c4d09-6d66-496f-91aa-867e4f8b9e6b, session_timestamp=2021-04-15T13:35:19.630Z, thread-id=645, tx_id=23D189F9C7EA263F7DCA8F0C6CC51EA296F11BDB14DC1B88EF94187B1C31F9F2}
[INFO ] 2021-04-15T13:35:21,021Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=3923116f-3c42-4e9c-b5bc-5036139d30d0, invocation_id=915c4d09-6d66-496f-91aa-867e4f8b9e6b, invocation_timestamp=2021-04-15T13:35:19.630Z, origin=Only For Testing, session_id=915c4d09-6d66-496f-91aa-867e4f8b9e6b, session_timestamp=2021-04-15T13:35:19.630Z, thread-id=645, tx_id=23D189F9C7EA263F7DCA8F0C6CC51EA296F11BDB14DC1B88EF94187B1C31F9F2}
[ERROR] 2021-04-15T13:35:21,271Z [Mock network] amqp.DeserializationInput. - Serialization failed direction="Deserialize", type="com.r3.corda.lib.tokens.workflows.internal.flows.finality.TransactionRole", msg="Described type with descriptor net.corda:7mttgXO2HdBLwATyV7pCpg== was expected to be of type class com.r3.corda.lib.tokens.workflows.internal.flows.finality.TransactionRole but was class net.corda.core.transactions.SignedTransaction", ClassChain="com.r3.corda.lib.tokens.workflows.internal.flows.finality.TransactionRole" {fiber-id=10000005, flow-id=33f00a1e-9ba6-421e-9839-3f441fd977a5, invocation_id=96d6c5a9-b28a-4180-a69c-a478a2530ae2, invocation_timestamp=2021-04-15T13:35:21.248Z, origin=O=InvestorA, L=TestLand, C=US, session_id=96d6c5a9-b28a-4180-a69c-a478a2530ae2, session_timestamp=2021-04-15T13:35:21.248Z, thread-id=645}
[INFO ] 2021-04-15T13:35:21,271Z [Mock network] corda.flow. - Flow raised an error: Payload invalid. Sending it to flow hospital to be triaged. {fiber-id=10000005, flow-id=33f00a1e-9ba6-421e-9839-3f441fd977a5, invocation_id=96d6c5a9-b28a-4180-a69c-a478a2530ae2, invocation_timestamp=2021-04-15T13:35:21.248Z, origin=O=InvestorA, L=TestLand, C=US, session_id=96d6c5a9-b28a-4180-a69c-a478a2530ae2, session_timestamp=2021-04-15T13:35:21.248Z, thread-id=645}
[INFO ] 2021-04-15T13:35:21,275Z [Mock network] statemachine.StaffedFlowHospital. - Flow [33f00a1e-9ba6-421e-9839-3f441fd977a5] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=96d6c5a9-b28a-4180-a69c-a478a2530ae2, timestamp: 2021-04-15T13:35:21.248Z, entityType: Invocation, sessionId=96d6c5a9-b28a-4180-a69c-a478a2530ae2, timestamp: 2021-04-15T13:35:21.248Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=2527888450990229109)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7059421194103571310), deduplicationSeed=D-7059421194103571310-7438304304491951581)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=2527888450990229109))]), frozenFiber=537DD237036FDE938BCF44C2F63EB239C91063B8D3F59023B72906F7F4A6E639), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@29087235, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=49696a5a-f743-471d-8dce-307466e3529f, reloadCheckpointAfterSuspendCount=null, numberOfCommits=2, lock=java.util.concurrent.Semaphore@38a0c1d9[Permits = 0]) {fiber-id=10000005, flow-id=33f00a1e-9ba6-421e-9839-3f441fd977a5, invocation_id=96d6c5a9-b28a-4180-a69c-a478a2530ae2, invocation_timestamp=2021-04-15T13:35:21.248Z, origin=O=InvestorA, L=TestLand, C=US, session_id=96d6c5a9-b28a-4180-a69c-a478a2530ae2, session_timestamp=2021-04-15T13:35:21.248Z, thread-id=645}
[INFO ] 2021-04-15T13:35:21,278Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {fiber-id=10000005, flow-id=33f00a1e-9ba6-421e-9839-3f441fd977a5, invocation_id=96d6c5a9-b28a-4180-a69c-a478a2530ae2, invocation_timestamp=2021-04-15T13:35:21.248Z, origin=O=InvestorA, L=TestLand, C=US, session_id=96d6c5a9-b28a-4180-a69c-a478a2530ae2, session_timestamp=2021-04-15T13:35:21.248Z, thread-id=645}
java.lang.IllegalArgumentException: Payload invalid
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:568) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler.call(ObserverAwareFinalityFlowHandler.kt:27) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler.call(ObserverAwareFinalityFlowHandler.kt:11) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:111) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:79) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
Caused by: java.io.NotSerializableException: Described type with descriptor net.corda:7mttgXO2HdBLwATyV7pCpg== was expected to be of type class com.r3.corda.lib.tokens.workflows.internal.flows.finality.TransactionRole but was class net.corda.core.transactions.SignedTransaction
	at net.corda.serialization.internal.amqp.DeserializationInput.des(DeserializationInput.kt:103) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.DeserializationInput.deserialize(DeserializationInput.kt:120) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.AbstractAMQPSerializationScheme.deserialize(AMQPSerializationScheme.kt:151) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.withCurrentContext(SerializationAPI.kt:71) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:80) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.asCurrent(SerializationAPI.kt:85) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl.deserialize(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:566) ~[corda-core-4.7.jar:?]
	... 21 more
[INFO ] 2021-04-15T13:35:21,281Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {fiber-id=10000005, flow-id=33f00a1e-9ba6-421e-9839-3f441fd977a5, invocation_id=96d6c5a9-b28a-4180-a69c-a478a2530ae2, invocation_timestamp=2021-04-15T13:35:21.248Z, origin=O=InvestorA, L=TestLand, C=US, session_id=96d6c5a9-b28a-4180-a69c-a478a2530ae2, session_timestamp=2021-04-15T13:35:21.248Z, thread-id=645}
java.lang.IllegalArgumentException: Payload invalid
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:568) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler.call(ObserverAwareFinalityFlowHandler.kt:27) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler.call(ObserverAwareFinalityFlowHandler.kt:11) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:111) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:79) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
Caused by: java.io.NotSerializableException: Described type with descriptor net.corda:7mttgXO2HdBLwATyV7pCpg== was expected to be of type class com.r3.corda.lib.tokens.workflows.internal.flows.finality.TransactionRole but was class net.corda.core.transactions.SignedTransaction
	at net.corda.serialization.internal.amqp.DeserializationInput.des(DeserializationInput.kt:103) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.DeserializationInput.deserialize(DeserializationInput.kt:120) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.AbstractAMQPSerializationScheme.deserialize(AMQPSerializationScheme.kt:151) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.withCurrentContext(SerializationAPI.kt:71) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:80) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.asCurrent(SerializationAPI.kt:85) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl.deserialize(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:566) ~[corda-core-4.7.jar:?]
	... 21 more
[WARN ] 2021-04-15T13:35:21,306Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [33f00a1e-9ba6-421e-9839-3f441fd977a5] errored, dumping all transitions:

 --- Transition of flow [33f00a1e-9ba6-421e-9839-3f441fd977a5] ---
  Timestamp: 2021-04-15T13:35:21.257Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[33f00a1e-9ba6-421e-9839-3f441fd977a5], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=96d6c5a9-b28a-4180-a69c-a478a2530ae2, timestamp: 2021-04-15T13:35:21.248Z, entityType: Invocation, sessionId=96d6c5a9-b28a-4180-a69c-a478a2530ae2, timestamp: 2021-04-15T13:35:21.248Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=73726A05DADEA432B6F5F4EE2FEA3F70393CE868FFB0D00D3415DAD00B37511C), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6fc32431])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6fc32431])
    SignalFlowHasStarted(flowId=[33f00a1e-9ba6-421e-9839-3f441fd977a5])
    SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7059421194103571310), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=2527888450990229109), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-7059421194103571310-7438304304491951581-0-0), senderUUID=49696a5a-f743-471d-8dce-307466e3529f))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6fc32431]
    []
checkpoint.checkpointState.sessions.SessionId(toLong=2527888450990229109): 
    null
    Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7059421194103571310), deduplicationSeed=D-7059421194103571310-7438304304491951581)


 --- Transition of flow [33f00a1e-9ba6-421e-9839-3f441fd977a5] ---
  Timestamp: 2021-04-15T13:35:21.258Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:35:21.249Z
    2021-04-15T13:35:21.258Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [33f00a1e-9ba6-421e-9839-3f441fd977a5] ---
  Timestamp: 2021-04-15T13:35:21.267Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=2527888450990229109))]), maySkipCheckpoint=false, fiber=537DD237036FDE938BCF44C2F63EB239C91063B8D3F59023B72906F7F4A6E639, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[33f00a1e-9ba6-421e-9839-3f441fd977a5], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=96d6c5a9-b28a-4180-a69c-a478a2530ae2, timestamp: 2021-04-15T13:35:21.248Z, entityType: Invocation, sessionId=96d6c5a9-b28a-4180-a69c-a478a2530ae2, timestamp: 2021-04-15T13:35:21.248Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=2527888450990229109)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7059421194103571310), deduplicationSeed=D-7059421194103571310-7438304304491951581)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=2527888450990229109))]), frozenFiber=537DD237036FDE938BCF44C2F63EB239C91063B8D3F59023B72906F7F4A6E639), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    0
    2
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=73726A05DADEA432B6F5F4EE2FEA3F70393CE868FFB0D00D3415DAD00B37511C)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=2527888450990229109))]), frozenFiber=537DD237036FDE938BCF44C2F63EB239C91063B8D3F59023B72906F7F4A6E639)
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.timestamp: 
    2021-04-15T13:35:21.258Z
    2021-04-15T13:35:21.264Z
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.progressStep: 
    null
    Starting


 --- Transition of flow [33f00a1e-9ba6-421e-9839-3f441fd977a5] ---
  Timestamp: 2021-04-15T13:35:21.268Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:35:21.264Z
    2021-04-15T13:35:21.267Z
checkpoint.checkpointState.sessions.SessionId(toLong=2527888450990229109).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [33f00a1e-9ba6-421e-9839-3f441fd977a5] ---
  Timestamp: 2021-04-15T13:35:21.271Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:35:21.267Z
    2021-04-15T13:35:21.271Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false)]


 --- Transition of flow [33f00a1e-9ba6-421e-9839-3f441fd977a5] ---
  Timestamp: 2021-04-15T13:35:21.283Z
  Event: Error(exception=java.lang.IllegalArgumentException: Payload invalid, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=3820137525094041124, exception=java.lang.IllegalArgumentException: Payload invalid)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2021-04-15T13:35:21.271Z
    2021-04-15T13:35:21.274Z


 --- Transition of flow [33f00a1e-9ba6-421e-9839-3f441fd977a5] ---
  Timestamp: 2021-04-15T13:35:21.286Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [33f00a1e-9ba6-421e-9839-3f441fd977a5] ---
  Timestamp: 2021-04-15T13:35:21.288Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:35:21.274Z
    2021-04-15T13:35:21.288Z
 {fiber-id=10000005, flow-id=33f00a1e-9ba6-421e-9839-3f441fd977a5, invocation_id=96d6c5a9-b28a-4180-a69c-a478a2530ae2, invocation_timestamp=2021-04-15T13:35:21.248Z, origin=O=InvestorA, L=TestLand, C=US, session_id=96d6c5a9-b28a-4180-a69c-a478a2530ae2, session_timestamp=2021-04-15T13:35:21.248Z, thread-id=645}
[WARN ] 2021-04-15T13:35:21,306Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [33f00a1e-9ba6-421e-9839-3f441fd977a5] error {fiber-id=10000005, flow-id=33f00a1e-9ba6-421e-9839-3f441fd977a5, invocation_id=96d6c5a9-b28a-4180-a69c-a478a2530ae2, invocation_timestamp=2021-04-15T13:35:21.248Z, origin=O=InvestorA, L=TestLand, C=US, session_id=96d6c5a9-b28a-4180-a69c-a478a2530ae2, session_timestamp=2021-04-15T13:35:21.248Z, thread-id=645}
java.lang.IllegalArgumentException: Payload invalid
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:568) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler.call(ObserverAwareFinalityFlowHandler.kt:27) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler.call(ObserverAwareFinalityFlowHandler.kt:11) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:111) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:79) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
Caused by: java.io.NotSerializableException: Described type with descriptor net.corda:7mttgXO2HdBLwATyV7pCpg== was expected to be of type class com.r3.corda.lib.tokens.workflows.internal.flows.finality.TransactionRole but was class net.corda.core.transactions.SignedTransaction
	at net.corda.serialization.internal.amqp.DeserializationInput.des(DeserializationInput.kt:103) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.DeserializationInput.deserialize(DeserializationInput.kt:120) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.AbstractAMQPSerializationScheme.deserialize(AMQPSerializationScheme.kt:151) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.withCurrentContext(SerializationAPI.kt:71) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:80) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.asCurrent(SerializationAPI.kt:85) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl.deserialize(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:566) ~[corda-core-4.7.jar:?]
	... 21 more
[WARN ] 2021-04-15T13:35:21,308Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {fiber-id=10000005, flow-id=33f00a1e-9ba6-421e-9839-3f441fd977a5, invocation_id=96d6c5a9-b28a-4180-a69c-a478a2530ae2, invocation_timestamp=2021-04-15T13:35:21.248Z, origin=O=InvestorA, L=TestLand, C=US, session_id=96d6c5a9-b28a-4180-a69c-a478a2530ae2, session_timestamp=2021-04-15T13:35:21.248Z, thread-id=645}
[WARN ] 2021-04-15T13:35:21,372Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [33f00a1e-9ba6-421e-9839-3f441fd977a5] errored, dumping all transitions:

 --- Transition of flow [33f00a1e-9ba6-421e-9839-3f441fd977a5] ---
  Timestamp: 2021-04-15T13:35:21.257Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[33f00a1e-9ba6-421e-9839-3f441fd977a5], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=96d6c5a9-b28a-4180-a69c-a478a2530ae2, timestamp: 2021-04-15T13:35:21.248Z, entityType: Invocation, sessionId=96d6c5a9-b28a-4180-a69c-a478a2530ae2, timestamp: 2021-04-15T13:35:21.248Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=73726A05DADEA432B6F5F4EE2FEA3F70393CE868FFB0D00D3415DAD00B37511C), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6fc32431])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6fc32431])
    SignalFlowHasStarted(flowId=[33f00a1e-9ba6-421e-9839-3f441fd977a5])
    SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7059421194103571310), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=2527888450990229109), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-7059421194103571310-7438304304491951581-0-0), senderUUID=49696a5a-f743-471d-8dce-307466e3529f))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6fc32431]
    []
checkpoint.checkpointState.sessions.SessionId(toLong=2527888450990229109): 
    null
    Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7059421194103571310), deduplicationSeed=D-7059421194103571310-7438304304491951581)


 --- Transition of flow [33f00a1e-9ba6-421e-9839-3f441fd977a5] ---
  Timestamp: 2021-04-15T13:35:21.258Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:35:21.249Z
    2021-04-15T13:35:21.258Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [33f00a1e-9ba6-421e-9839-3f441fd977a5] ---
  Timestamp: 2021-04-15T13:35:21.267Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=2527888450990229109))]), maySkipCheckpoint=false, fiber=537DD237036FDE938BCF44C2F63EB239C91063B8D3F59023B72906F7F4A6E639, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[33f00a1e-9ba6-421e-9839-3f441fd977a5], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=96d6c5a9-b28a-4180-a69c-a478a2530ae2, timestamp: 2021-04-15T13:35:21.248Z, entityType: Invocation, sessionId=96d6c5a9-b28a-4180-a69c-a478a2530ae2, timestamp: 2021-04-15T13:35:21.248Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=2527888450990229109)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7059421194103571310), deduplicationSeed=D-7059421194103571310-7438304304491951581)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=2527888450990229109))]), frozenFiber=537DD237036FDE938BCF44C2F63EB239C91063B8D3F59023B72906F7F4A6E639), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    0
    2
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=73726A05DADEA432B6F5F4EE2FEA3F70393CE868FFB0D00D3415DAD00B37511C)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=2527888450990229109))]), frozenFiber=537DD237036FDE938BCF44C2F63EB239C91063B8D3F59023B72906F7F4A6E639)
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.timestamp: 
    2021-04-15T13:35:21.258Z
    2021-04-15T13:35:21.264Z
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.progressStep: 
    null
    Starting


 --- Transition of flow [33f00a1e-9ba6-421e-9839-3f441fd977a5] ---
  Timestamp: 2021-04-15T13:35:21.268Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:35:21.264Z
    2021-04-15T13:35:21.267Z
checkpoint.checkpointState.sessions.SessionId(toLong=2527888450990229109).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [33f00a1e-9ba6-421e-9839-3f441fd977a5] ---
  Timestamp: 2021-04-15T13:35:21.271Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:35:21.267Z
    2021-04-15T13:35:21.271Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false)]


 --- Transition of flow [33f00a1e-9ba6-421e-9839-3f441fd977a5] ---
  Timestamp: 2021-04-15T13:35:21.283Z
  Event: Error(exception=java.lang.IllegalArgumentException: Payload invalid, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=3820137525094041124, exception=java.lang.IllegalArgumentException: Payload invalid)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2021-04-15T13:35:21.271Z
    2021-04-15T13:35:21.274Z


 --- Transition of flow [33f00a1e-9ba6-421e-9839-3f441fd977a5] ---
  Timestamp: 2021-04-15T13:35:21.286Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [33f00a1e-9ba6-421e-9839-3f441fd977a5] ---
  Timestamp: 2021-04-15T13:35:21.288Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:35:21.274Z
    2021-04-15T13:35:21.288Z


 --- Transition of flow [33f00a1e-9ba6-421e-9839-3f441fd977a5] ---
  Timestamp: 2021-04-15T13:35:21.368Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=3820137525094041124)], sessions=[Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7059421194103571310), deduplicationSeed=D-7059421194103571310-7438304304491951581)], senderUUID=49696a5a-f743-471d-8dce-307466e3529f)
    CreateTransaction
    RemoveCheckpoint(id=[33f00a1e-9ba6-421e-9839-3f441fd977a5], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=33f00a1e-9ba6-421e-9839-3f441fd977a5)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=2527888450990229109)])
    RemoveFlow(flowId=[33f00a1e-9ba6-421e-9839-3f441fd977a5], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=3820137525094041124, exception=java.lang.IllegalArgumentException: Payload invalid)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=96d6c5a9-b28a-4180-a69c-a478a2530ae2, timestamp: 2021-04-15T13:35:21.248Z, entityType: Invocation, sessionId=96d6c5a9-b28a-4180-a69c-a478a2530ae2, timestamp: 2021-04-15T13:35:21.248Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=2527888450990229109)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7059421194103571310), deduplicationSeed=D-7059421194103571310-7438304304491951581)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=3), flowState=net.corda.node.services.statemachine.FlowState$Finished@43471fea, errorState=Errored(errors=[FlowError(errorId=3820137525094041124, exception=java.lang.IllegalArgumentException: Payload invalid)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@29087235, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, senderUUID=49696a5a-f743-471d-8dce-307466e3529f, reloadCheckpointAfterSuspendCount=null, numberOfCommits=3, lock=java.util.concurrent.Semaphore@38a0c1d9[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
numberOfCommits: 
    2
    3
isRemoved: 
    false
    true
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=2527888450990229109))]), frozenFiber=537DD237036FDE938BCF44C2F63EB239C91063B8D3F59023B72906F7F4A6E639)
    net.corda.node.services.statemachine.FlowState$Finished@43471fea
checkpoint.timestamp: 
    2021-04-15T13:35:21.288Z
    2021-04-15T13:35:21.307Z
checkpoint.checkpointState.numberOfCommits: 
    2
    3
 {fiber-id=10000005, flow-id=33f00a1e-9ba6-421e-9839-3f441fd977a5, invocation_id=96d6c5a9-b28a-4180-a69c-a478a2530ae2, invocation_timestamp=2021-04-15T13:35:21.248Z, origin=O=InvestorA, L=TestLand, C=US, session_id=96d6c5a9-b28a-4180-a69c-a478a2530ae2, session_timestamp=2021-04-15T13:35:21.248Z, thread-id=645}
[WARN ] 2021-04-15T13:35:21,372Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [33f00a1e-9ba6-421e-9839-3f441fd977a5] error {fiber-id=10000005, flow-id=33f00a1e-9ba6-421e-9839-3f441fd977a5, invocation_id=96d6c5a9-b28a-4180-a69c-a478a2530ae2, invocation_timestamp=2021-04-15T13:35:21.248Z, origin=O=InvestorA, L=TestLand, C=US, session_id=96d6c5a9-b28a-4180-a69c-a478a2530ae2, session_timestamp=2021-04-15T13:35:21.248Z, thread-id=645}
java.lang.IllegalArgumentException: Payload invalid
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:568) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler.call(ObserverAwareFinalityFlowHandler.kt:27) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler.call(ObserverAwareFinalityFlowHandler.kt:11) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:111) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:79) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
Caused by: java.io.NotSerializableException: Described type with descriptor net.corda:7mttgXO2HdBLwATyV7pCpg== was expected to be of type class com.r3.corda.lib.tokens.workflows.internal.flows.finality.TransactionRole but was class net.corda.core.transactions.SignedTransaction
	at net.corda.serialization.internal.amqp.DeserializationInput.des(DeserializationInput.kt:103) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.DeserializationInput.deserialize(DeserializationInput.kt:120) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.AbstractAMQPSerializationScheme.deserialize(AMQPSerializationScheme.kt:151) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.withCurrentContext(SerializationAPI.kt:71) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:80) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.asCurrent(SerializationAPI.kt:85) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl.deserialize(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:566) ~[corda-core-4.7.jar:?]
	... 21 more
[INFO ] 2021-04-15T13:35:21,389Z [Mock network] corda.flow. - Flow raised an error: Counter-flow errored. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=3dfee652-18ae-45a2-a9de-22c7cd0731df, invocation_id=e873e027-cb74-423e-9f09-597fa1f1571d, invocation_timestamp=2021-04-15T13:35:21.110Z, origin=Only For Testing, session_id=e873e027-cb74-423e-9f09-597fa1f1571d, session_timestamp=2021-04-15T13:35:21.110Z, thread-id=645}
[INFO ] 2021-04-15T13:35:21,391Z [Mock network] statemachine.StaffedFlowHospital. - Flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=e873e027-cb74-423e-9f09-597fa1f1571d, timestamp: 2021-04-15T13:35:21.110Z, entityType: Invocation, sessionId=e873e027-cb74-423e-9f09-597fa1f1571d, timestamp: 2021-04-15T13:35:21.110Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=-5823119492512724245)=Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-5823119492512724245), additionalEntropy=-9081791469180985395), SessionId(toLong=7059421194103571310)=Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=2527888450990229109), deduplicationSeed=R-7059421194103571310-7438304304491951581)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=7059421194103571310))]), frozenFiber=BC3AAA0E58AD9EFA164B904973A53936BBBAF79B763EA42D4452B6D1D9217CCE), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator@70137b1b, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5a7c1e10, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41cde1c5], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=fe168247-4645-4860-8e41-76118099afc7, reloadCheckpointAfterSuspendCount=null, numberOfCommits=2, lock=java.util.concurrent.Semaphore@50d70e1[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=3dfee652-18ae-45a2-a9de-22c7cd0731df, invocation_id=e873e027-cb74-423e-9f09-597fa1f1571d, invocation_timestamp=2021-04-15T13:35:21.110Z, origin=Only For Testing, session_id=e873e027-cb74-423e-9f09-597fa1f1571d, session_timestamp=2021-04-15T13:35:21.110Z, thread-id=645}
[INFO ] 2021-04-15T13:35:21,391Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=3dfee652-18ae-45a2-a9de-22c7cd0731df, invocation_id=e873e027-cb74-423e-9f09-597fa1f1571d, invocation_timestamp=2021-04-15T13:35:21.110Z, origin=Only For Testing, session_id=e873e027-cb74-423e-9f09-597fa1f1571d, session_timestamp=2021-04-15T13:35:21.110Z, thread-id=645}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=TIE, L=TestVillage, C=US.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:574) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.sendAndReceive(FlowSessionImpl.kt:54) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.sendAndReceive(FlowSessionImpl.kt:61) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.DataVendingFlow.sendPayloadAndReceiveDataRequest(SendTransactionFlow.kt:244) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.DataVendingFlow.call(SendTransactionFlow.kt:127) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.DataVendingFlow.call(SendTransactionFlow.kt:83) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:206) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:67) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:29) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[INFO ] 2021-04-15T13:35:21,391Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=3dfee652-18ae-45a2-a9de-22c7cd0731df, invocation_id=e873e027-cb74-423e-9f09-597fa1f1571d, invocation_timestamp=2021-04-15T13:35:21.110Z, origin=Only For Testing, session_id=e873e027-cb74-423e-9f09-597fa1f1571d, session_timestamp=2021-04-15T13:35:21.110Z, thread-id=645}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=TIE, L=TestVillage, C=US.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:574) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.sendAndReceive(FlowSessionImpl.kt:54) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.sendAndReceive(FlowSessionImpl.kt:61) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.DataVendingFlow.sendPayloadAndReceiveDataRequest(SendTransactionFlow.kt:244) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.DataVendingFlow.call(SendTransactionFlow.kt:127) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.DataVendingFlow.call(SendTransactionFlow.kt:83) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:206) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:67) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:29) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[WARN ] 2021-04-15T13:35:21,407Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] errored, dumping all transitions:

 --- Transition of flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] ---
  Timestamp: 2021-04-15T13:35:21.115Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[3dfee652-18ae-45a2-a9de-22c7cd0731df], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=e873e027-cb74-423e-9f09-597fa1f1571d, timestamp: 2021-04-15T13:35:21.110Z, entityType: Invocation, sessionId=e873e027-cb74-423e-9f09-597fa1f1571d, timestamp: 2021-04-15T13:35:21.110Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=D37B7A91493D69BCB12EF417295622AC8EE772C41B32D940988EB3A9130AF22C), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@4fac1d60])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@4fac1d60])
    SignalFlowHasStarted(flowId=[3dfee652-18ae-45a2-a9de-22c7cd0731df])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@4fac1d60]
    []


 --- Transition of flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] ---
  Timestamp: 2021-04-15T13:35:21.214Z
  Event: InitiateFlow(destination=O=InvestorB, L=TestCity, C=US, wellKnownParty=O=InvestorB, L=TestCity, C=US)
  Actions: 
    AddSessionBinding(flowId=[3dfee652-18ae-45a2-a9de-22c7cd0731df], sessionId=SessionId(toLong=-5823119492512724245))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:35:21.111Z
    2021-04-15T13:35:21.214Z
checkpoint.checkpointState.sessions.SessionId(toLong=-5823119492512724245): 
    null
    Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-5823119492512724245), additionalEntropy=-9081791469180985395)


 --- Transition of flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] ---
  Timestamp: 2021-04-15T13:35:21.214Z
  Event: InitiateFlow(destination=O=TIE, L=TestVillage, C=US, wellKnownParty=O=TIE, L=TestVillage, C=US)
  Actions: 
    AddSessionBinding(flowId=[3dfee652-18ae-45a2-a9de-22c7cd0731df], sessionId=SessionId(toLong=7059421194103571310))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=7059421194103571310): 
    null
    Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=7059421194103571310), additionalEntropy=7438304304491951581)


 --- Transition of flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] ---
  Timestamp: 2021-04-15T13:35:21.216Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:35:21.214Z
    2021-04-15T13:35:21.216Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] ---
  Timestamp: 2021-04-15T13:35:21.217Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:35:21.216Z
    2021-04-15T13:35:21.217Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] ---
  Timestamp: 2021-04-15T13:35:21.232Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=7059421194103571310))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=7059421194103571310))=43A90EF3201033F9D492FA9AA1E637C258922FB5CB8B65DE70C6C42EFCBB04DC}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=BC3AAA0E58AD9EFA164B904973A53936BBBAF79B763EA42D4452B6D1D9217CCE, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[3dfee652-18ae-45a2-a9de-22c7cd0731df], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=e873e027-cb74-423e-9f09-597fa1f1571d, timestamp: 2021-04-15T13:35:21.110Z, entityType: Invocation, sessionId=e873e027-cb74-423e-9f09-597fa1f1571d, timestamp: 2021-04-15T13:35:21.110Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=-5823119492512724245)=Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-5823119492512724245), additionalEntropy=-9081791469180985395), SessionId(toLong=7059421194103571310)=Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=7059421194103571310), additionalEntropy=7438304304491951581)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=7059421194103571310))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=7059421194103571310))=43A90EF3201033F9D492FA9AA1E637C258922FB5CB8B65DE70C6C42EFCBB04DC}, shouldRetrySend=false), frozenFiber=BC3AAA0E58AD9EFA164B904973A53936BBBAF79B763EA42D4452B6D1D9217CCE), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    0
    2
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=D37B7A91493D69BCB12EF417295622AC8EE772C41B32D940988EB3A9130AF22C)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=7059421194103571310))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=7059421194103571310))=43A90EF3201033F9D492FA9AA1E637C258922FB5CB8B65DE70C6C42EFCBB04DC}, shouldRetrySend=false), frozenFiber=BC3AAA0E58AD9EFA164B904973A53936BBBAF79B763EA42D4452B6D1D9217CCE)
checkpoint.flowIoRequest: 
    null
    SendAndReceive
checkpoint.timestamp: 
    2021-04-15T13:35:21.217Z
    2021-04-15T13:35:21.229Z
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.progressStep: 
    null
    Starting


 --- Transition of flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] ---
  Timestamp: 2021-04-15T13:35:21.240Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=TIE, L=TestVillage, C=US, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=7059421194103571310), initiationEntropy=7438304304491951581, initiatorFlowClassName=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-7059421194103571310-7438304304491951581-1-0), senderUUID=fe168247-4645-4860-8e41-76118099afc7))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=7059421194103571310))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=7059421194103571310))=43A90EF3201033F9D492FA9AA1E637C258922FB5CB8B65DE70C6C42EFCBB04DC}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=7059421194103571310))])
checkpoint.timestamp: 
    2021-04-15T13:35:21.229Z
    2021-04-15T13:35:21.232Z
checkpoint.checkpointState.sessions.SessionId(toLong=7059421194103571310): 
    Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=7059421194103571310), additionalEntropy=7438304304491951581)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-7059421194103571310-7438304304491951581)


 --- Transition of flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] ---
  Timestamp: 2021-04-15T13:35:21.377Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7059421194103571310), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=2527888450990229109), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5a7c1e10, sender=O=TIE, L=TestVillage, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5a7c1e10]
checkpoint.timestamp: 
    2021-04-15T13:35:21.232Z
    2021-04-15T13:35:21.377Z
checkpoint.checkpointState.sessions.SessionId(toLong=7059421194103571310): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-7059421194103571310-7438304304491951581)
    Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=2527888450990229109), deduplicationSeed=R-7059421194103571310-7438304304491951581)


 --- Transition of flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] ---
  Timestamp: 2021-04-15T13:35:21.378Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] ---
  Timestamp: 2021-04-15T13:35:21.386Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7059421194103571310), payload=ErrorSessionMessage(flowException=null, errorId=3820137525094041124)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41cde1c5, sender=O=TIE, L=TestVillage, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5a7c1e10]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5a7c1e10, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41cde1c5]
checkpoint.timestamp: 
    2021-04-15T13:35:21.378Z
    2021-04-15T13:35:21.386Z
checkpoint.checkpointState.sessions.SessionId(toLong=7059421194103571310).receivedMessages: 
    []
    [ErrorSessionMessage(flowException=null, errorId=3820137525094041124)]


 --- Transition of flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] ---
  Timestamp: 2021-04-15T13:35:21.387Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:35:21.386Z
    2021-04-15T13:35:21.387Z
checkpoint.checkpointState.sessions.SessionId(toLong=7059421194103571310).otherSideErrored: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=7059421194103571310).receivedMessages: 
    [ErrorSessionMessage(flowException=null, errorId=3820137525094041124)]
    []


 --- Transition of flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] ---
  Timestamp: 2021-04-15T13:35:21.388Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:35:21.387Z
    2021-04-15T13:35:21.388Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] ---
  Timestamp: 2021-04-15T13:35:21.388Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false)]


 --- Transition of flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] ---
  Timestamp: 2021-04-15T13:35:21.391Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=3820137525094041124, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2021-04-15T13:35:21.388Z
    2021-04-15T13:35:21.389Z


 --- Transition of flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] ---
  Timestamp: 2021-04-15T13:35:21.391Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] ---
  Timestamp: 2021-04-15T13:35:21.391Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:35:21.389Z
    2021-04-15T13:35:21.391Z
 {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=3dfee652-18ae-45a2-a9de-22c7cd0731df, invocation_id=e873e027-cb74-423e-9f09-597fa1f1571d, invocation_timestamp=2021-04-15T13:35:21.110Z, origin=Only For Testing, session_id=e873e027-cb74-423e-9f09-597fa1f1571d, session_timestamp=2021-04-15T13:35:21.110Z, thread-id=645}
[WARN ] 2021-04-15T13:35:21,407Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] error {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=3dfee652-18ae-45a2-a9de-22c7cd0731df, invocation_id=e873e027-cb74-423e-9f09-597fa1f1571d, invocation_timestamp=2021-04-15T13:35:21.110Z, origin=Only For Testing, session_id=e873e027-cb74-423e-9f09-597fa1f1571d, session_timestamp=2021-04-15T13:35:21.110Z, thread-id=645}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=TIE, L=TestVillage, C=US.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:574) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.sendAndReceive(FlowSessionImpl.kt:54) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.sendAndReceive(FlowSessionImpl.kt:61) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.DataVendingFlow.sendPayloadAndReceiveDataRequest(SendTransactionFlow.kt:244) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.DataVendingFlow.call(SendTransactionFlow.kt:127) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.DataVendingFlow.call(SendTransactionFlow.kt:83) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:206) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:67) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:29) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[WARN ] 2021-04-15T13:35:21,408Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=3dfee652-18ae-45a2-a9de-22c7cd0731df, invocation_id=e873e027-cb74-423e-9f09-597fa1f1571d, invocation_timestamp=2021-04-15T13:35:21.110Z, origin=Only For Testing, session_id=e873e027-cb74-423e-9f09-597fa1f1571d, session_timestamp=2021-04-15T13:35:21.110Z, thread-id=645}
[WARN ] 2021-04-15T13:35:21,428Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] errored, dumping all transitions:

 --- Transition of flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] ---
  Timestamp: 2021-04-15T13:35:21.115Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[3dfee652-18ae-45a2-a9de-22c7cd0731df], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=e873e027-cb74-423e-9f09-597fa1f1571d, timestamp: 2021-04-15T13:35:21.110Z, entityType: Invocation, sessionId=e873e027-cb74-423e-9f09-597fa1f1571d, timestamp: 2021-04-15T13:35:21.110Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=D37B7A91493D69BCB12EF417295622AC8EE772C41B32D940988EB3A9130AF22C), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@4fac1d60])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@4fac1d60])
    SignalFlowHasStarted(flowId=[3dfee652-18ae-45a2-a9de-22c7cd0731df])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@4fac1d60]
    []


 --- Transition of flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] ---
  Timestamp: 2021-04-15T13:35:21.214Z
  Event: InitiateFlow(destination=O=InvestorB, L=TestCity, C=US, wellKnownParty=O=InvestorB, L=TestCity, C=US)
  Actions: 
    AddSessionBinding(flowId=[3dfee652-18ae-45a2-a9de-22c7cd0731df], sessionId=SessionId(toLong=-5823119492512724245))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:35:21.111Z
    2021-04-15T13:35:21.214Z
checkpoint.checkpointState.sessions.SessionId(toLong=-5823119492512724245): 
    null
    Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-5823119492512724245), additionalEntropy=-9081791469180985395)


 --- Transition of flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] ---
  Timestamp: 2021-04-15T13:35:21.214Z
  Event: InitiateFlow(destination=O=TIE, L=TestVillage, C=US, wellKnownParty=O=TIE, L=TestVillage, C=US)
  Actions: 
    AddSessionBinding(flowId=[3dfee652-18ae-45a2-a9de-22c7cd0731df], sessionId=SessionId(toLong=7059421194103571310))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=7059421194103571310): 
    null
    Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=7059421194103571310), additionalEntropy=7438304304491951581)


 --- Transition of flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] ---
  Timestamp: 2021-04-15T13:35:21.216Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:35:21.214Z
    2021-04-15T13:35:21.216Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] ---
  Timestamp: 2021-04-15T13:35:21.217Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:35:21.216Z
    2021-04-15T13:35:21.217Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] ---
  Timestamp: 2021-04-15T13:35:21.232Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=7059421194103571310))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=7059421194103571310))=43A90EF3201033F9D492FA9AA1E637C258922FB5CB8B65DE70C6C42EFCBB04DC}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=BC3AAA0E58AD9EFA164B904973A53936BBBAF79B763EA42D4452B6D1D9217CCE, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[3dfee652-18ae-45a2-a9de-22c7cd0731df], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=e873e027-cb74-423e-9f09-597fa1f1571d, timestamp: 2021-04-15T13:35:21.110Z, entityType: Invocation, sessionId=e873e027-cb74-423e-9f09-597fa1f1571d, timestamp: 2021-04-15T13:35:21.110Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=-5823119492512724245)=Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-5823119492512724245), additionalEntropy=-9081791469180985395), SessionId(toLong=7059421194103571310)=Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=7059421194103571310), additionalEntropy=7438304304491951581)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=7059421194103571310))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=7059421194103571310))=43A90EF3201033F9D492FA9AA1E637C258922FB5CB8B65DE70C6C42EFCBB04DC}, shouldRetrySend=false), frozenFiber=BC3AAA0E58AD9EFA164B904973A53936BBBAF79B763EA42D4452B6D1D9217CCE), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    0
    2
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=D37B7A91493D69BCB12EF417295622AC8EE772C41B32D940988EB3A9130AF22C)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=7059421194103571310))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=7059421194103571310))=43A90EF3201033F9D492FA9AA1E637C258922FB5CB8B65DE70C6C42EFCBB04DC}, shouldRetrySend=false), frozenFiber=BC3AAA0E58AD9EFA164B904973A53936BBBAF79B763EA42D4452B6D1D9217CCE)
checkpoint.flowIoRequest: 
    null
    SendAndReceive
checkpoint.timestamp: 
    2021-04-15T13:35:21.217Z
    2021-04-15T13:35:21.229Z
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.progressStep: 
    null
    Starting


 --- Transition of flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] ---
  Timestamp: 2021-04-15T13:35:21.240Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=TIE, L=TestVillage, C=US, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=7059421194103571310), initiationEntropy=7438304304491951581, initiatorFlowClassName=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-7059421194103571310-7438304304491951581-1-0), senderUUID=fe168247-4645-4860-8e41-76118099afc7))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=7059421194103571310))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=7059421194103571310))=43A90EF3201033F9D492FA9AA1E637C258922FB5CB8B65DE70C6C42EFCBB04DC}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=7059421194103571310))])
checkpoint.timestamp: 
    2021-04-15T13:35:21.229Z
    2021-04-15T13:35:21.232Z
checkpoint.checkpointState.sessions.SessionId(toLong=7059421194103571310): 
    Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=7059421194103571310), additionalEntropy=7438304304491951581)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-7059421194103571310-7438304304491951581)


 --- Transition of flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] ---
  Timestamp: 2021-04-15T13:35:21.377Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7059421194103571310), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=2527888450990229109), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5a7c1e10, sender=O=TIE, L=TestVillage, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5a7c1e10]
checkpoint.timestamp: 
    2021-04-15T13:35:21.232Z
    2021-04-15T13:35:21.377Z
checkpoint.checkpointState.sessions.SessionId(toLong=7059421194103571310): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-7059421194103571310-7438304304491951581)
    Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=2527888450990229109), deduplicationSeed=R-7059421194103571310-7438304304491951581)


 --- Transition of flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] ---
  Timestamp: 2021-04-15T13:35:21.378Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] ---
  Timestamp: 2021-04-15T13:35:21.386Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7059421194103571310), payload=ErrorSessionMessage(flowException=null, errorId=3820137525094041124)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41cde1c5, sender=O=TIE, L=TestVillage, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5a7c1e10]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5a7c1e10, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41cde1c5]
checkpoint.timestamp: 
    2021-04-15T13:35:21.378Z
    2021-04-15T13:35:21.386Z
checkpoint.checkpointState.sessions.SessionId(toLong=7059421194103571310).receivedMessages: 
    []
    [ErrorSessionMessage(flowException=null, errorId=3820137525094041124)]


 --- Transition of flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] ---
  Timestamp: 2021-04-15T13:35:21.387Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:35:21.386Z
    2021-04-15T13:35:21.387Z
checkpoint.checkpointState.sessions.SessionId(toLong=7059421194103571310).otherSideErrored: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=7059421194103571310).receivedMessages: 
    [ErrorSessionMessage(flowException=null, errorId=3820137525094041124)]
    []


 --- Transition of flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] ---
  Timestamp: 2021-04-15T13:35:21.388Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:35:21.387Z
    2021-04-15T13:35:21.388Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] ---
  Timestamp: 2021-04-15T13:35:21.388Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false)]


 --- Transition of flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] ---
  Timestamp: 2021-04-15T13:35:21.391Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=3820137525094041124, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2021-04-15T13:35:21.388Z
    2021-04-15T13:35:21.389Z


 --- Transition of flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] ---
  Timestamp: 2021-04-15T13:35:21.391Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] ---
  Timestamp: 2021-04-15T13:35:21.391Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:35:21.389Z
    2021-04-15T13:35:21.391Z


 --- Transition of flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] ---
  Timestamp: 2021-04-15T13:35:21.415Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=3820137525094041124)], sessions=[], senderUUID=fe168247-4645-4860-8e41-76118099afc7)
    CreateTransaction
    RemoveCheckpoint(id=[3dfee652-18ae-45a2-a9de-22c7cd0731df], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5a7c1e10, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41cde1c5])
    ReleaseSoftLocks(uuid=3dfee652-18ae-45a2-a9de-22c7cd0731df)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5a7c1e10, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41cde1c5])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-5823119492512724245), SessionId(toLong=7059421194103571310)])
    RemoveFlow(flowId=[3dfee652-18ae-45a2-a9de-22c7cd0731df], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=3820137525094041124, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=e873e027-cb74-423e-9f09-597fa1f1571d, timestamp: 2021-04-15T13:35:21.110Z, entityType: Invocation, sessionId=e873e027-cb74-423e-9f09-597fa1f1571d, timestamp: 2021-04-15T13:35:21.110Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=-5823119492512724245)=Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-5823119492512724245), additionalEntropy=-9081791469180985395), SessionId(toLong=7059421194103571310)=Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=2527888450990229109), deduplicationSeed=R-7059421194103571310-7438304304491951581)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=D67848B13FA7286A52C4B5F13625D566CD944DE83411ED9C87E7864E4D70E105), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=3), flowState=net.corda.node.services.statemachine.FlowState$Finished@43471fea, errorState=Errored(errors=[FlowError(errorId=3820137525094041124, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator@70137b1b, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, senderUUID=fe168247-4645-4860-8e41-76118099afc7, reloadCheckpointAfterSuspendCount=null, numberOfCommits=3, lock=java.util.concurrent.Semaphore@50d70e1[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
numberOfCommits: 
    2
    3
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5a7c1e10, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41cde1c5]
    []
isRemoved: 
    false
    true
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=7059421194103571310))]), frozenFiber=BC3AAA0E58AD9EFA164B904973A53936BBBAF79B763EA42D4452B6D1D9217CCE)
    net.corda.node.services.statemachine.FlowState$Finished@43471fea
checkpoint.timestamp: 
    2021-04-15T13:35:21.391Z
    2021-04-15T13:35:21.407Z
checkpoint.checkpointState.numberOfCommits: 
    2
    3
 {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=3dfee652-18ae-45a2-a9de-22c7cd0731df, invocation_id=e873e027-cb74-423e-9f09-597fa1f1571d, invocation_timestamp=2021-04-15T13:35:21.110Z, origin=Only For Testing, session_id=e873e027-cb74-423e-9f09-597fa1f1571d, session_timestamp=2021-04-15T13:35:21.110Z, thread-id=645}
[WARN ] 2021-04-15T13:35:21,428Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [3dfee652-18ae-45a2-a9de-22c7cd0731df] error {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=3dfee652-18ae-45a2-a9de-22c7cd0731df, invocation_id=e873e027-cb74-423e-9f09-597fa1f1571d, invocation_timestamp=2021-04-15T13:35:21.110Z, origin=Only For Testing, session_id=e873e027-cb74-423e-9f09-597fa1f1571d, session_timestamp=2021-04-15T13:35:21.110Z, thread-id=645}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=TIE, L=TestVillage, C=US.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:574) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.sendAndReceive(FlowSessionImpl.kt:54) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.sendAndReceive(FlowSessionImpl.kt:61) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.DataVendingFlow.sendPayloadAndReceiveDataRequest(SendTransactionFlow.kt:244) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.DataVendingFlow.call(SendTransactionFlow.kt:127) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.DataVendingFlow.call(SendTransactionFlow.kt:83) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:206) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:67) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:29) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[INFO ] 2021-04-15T13:35:21,450Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2021-04-15T13:35:21,485Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:35:21,485Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:35:21,490Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2021-04-15T13:35:21,506Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:35:21,506Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:35:21,510Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2021-04-15T13:35:21,526Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:35:21,526Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:35:21,528Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2021-04-15T13:35:21,547Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:35:21,547Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:36:08,744Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/peterli/Desktop/tokenTest/workflows ... {}
[INFO ] 2021-04-15T13:36:09,154Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:36:10,641Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2021-04-15T13:36:11,719Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2021-04-15T13:36:11,734Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2021-04-15T13:36:11,735Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:36:12,365Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:36:12,386Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2021-04-15T13:36:12,933Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:36:12,944Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:36:12,944Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2021-04-15T13:36:13,151Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:36:13,163Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:36:13,769Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2021-04-15T13:36:14,661Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:36:14,676Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2021-04-15T13:36:14,699Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:36:14,700Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2021-04-15T13:36:14,700Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:36:15,554Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:36:15,554Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2021-04-15T13:36:15,694Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:36:15,694Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2021-04-15T13:36:15,727Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:36:15,727Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2021-04-15T13:36:15,836Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:36:15,836Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:36:15,978Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:36:16,014Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:36:16,078Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2021-04-15T13:36:16,384Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:36:16,384Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2021-04-15T13:36:16,394Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:36:16,406Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2021-04-15T13:36:16,406Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:36:16,450Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:36:16,450Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2021-04-15T13:36:16,450Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:36:16,450Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2021-04-15T13:36:16,461Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:36:16,461Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:36:16,462Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2021-04-15T13:36:16,563Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:36:16,563Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:36:16,575Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:36:16,575Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:36:16,575Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:36:16,575Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:36:16,575Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:36:16,575Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:36:16,575Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:36:16,587Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:36:16,587Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2021-04-15T13:36:16,622Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:36:16,622Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:36:16,656Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2021-04-15T13:36:16,687Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:36:16,698Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2021-04-15T13:36:16,698Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:36:16,700Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2021-04-15T13:36:16,700Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:36:16,712Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:36:16,712Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2021-04-15T13:36:16,712Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:36:16,712Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2021-04-15T13:36:16,712Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:36:16,712Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:36:16,712Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2021-04-15T13:36:16,758Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:36:16,758Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:36:16,758Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:36:16,758Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:36:16,758Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:36:16,758Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:36:16,758Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:36:16,758Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:36:16,758Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:36:16,758Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:36:16,758Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:36:16,770Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:36:16,770Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2021-04-15T13:36:18,524Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:36:18,524Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:36:18,524Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2021-04-15T13:36:18,524Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:36:18,526Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:36:18,537Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/peterli/Desktop/tokenTest/.gradle {}
[INFO ] 2021-04-15T13:36:18,537Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:36:18,572Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2021-04-15T13:36:23,535Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/0/cordapps] {}
[INFO ] 2021-04-15T13:36:23,543Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:36:23,555Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:36:23,661Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:36:23,678Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:36:23,729Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:36:25,259Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:36:25,533Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:36:25,610Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:36:25,633Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:36:25,638Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL6fDSr7Aqjvk4ihrzFQa2nTGtkiR5FwwJZEwr3PDuKGY3, alias: identity-private-key {}
[INFO ] 2021-04-15T13:36:25,804Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:36:25,806Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:36:25,810Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:25,811Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:25,811Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:25,811Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:25,812Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:25,812Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:25,812Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:25,813Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:25,813Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:25,814Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:25,815Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:36:25,816Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:36:25,817Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:36:25,850Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:36:25,957Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:36:03.939Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:36:33,621Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:36:33,713Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-04-15T13:36:33,721Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-04-15T13:36:37,041Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-04-15T13:36:37,531Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:36:37,541Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618493797531), owningKey=DL6fDSr7Aqjvk4ihrzFQa2nTGtkiR5FwwJZEwr3PDuKGY3 {}
[INFO ] 2021-04-15T13:36:37,541Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:36:37,731Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618493797531) {}
[INFO ] 2021-04-15T13:36:37,798Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:36:37,829Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:36:37,831Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:36:37,870Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618493797531), owningKey=DL6fDSr7Aqjvk4ihrzFQa2nTGtkiR5FwwJZEwr3PDuKGY3 {}
[INFO ] 2021-04-15T13:36:37,870Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:36:37,989Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:36:38,024Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:36:38,040Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:36:38,053Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:36:38,146Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:36:38,254Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:36:38,254Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-04-15T13:36:39,102Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618493797531) {}
[INFO ] 2021-04-15T13:36:39,111Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618493797531), owningKey=DL6fDSr7Aqjvk4ihrzFQa2nTGtkiR5FwwJZEwr3PDuKGY3 {}
[INFO ] 2021-04-15T13:36:39,112Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:36:39,112Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618493797531), owningKey=DL6fDSr7Aqjvk4ihrzFQa2nTGtkiR5FwwJZEwr3PDuKGY3 {}
[INFO ] 2021-04-15T13:36:39,112Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:36:39,124Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/1/cordapps] {}
[INFO ] 2021-04-15T13:36:39,125Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:36:39,125Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:36:39,133Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:36:39,141Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:36:39,151Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:36:39,198Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:36:39,199Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:36:39,201Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:36:39,243Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:36:39,243Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL94CtQo6XXT3Cm5yNnY3dirBeZYMGzAUTmaYmSNpBWiJr, alias: identity-private-key {}
[INFO ] 2021-04-15T13:36:39,252Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:36:39,252Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:36:39,252Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:39,252Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:39,252Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:39,252Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:39,252Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:39,252Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:39,253Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:39,253Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:39,253Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:39,253Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:39,253Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:36:39,253Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:36:39,253Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:36:39,253Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:36:39,263Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:36:03.939Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:36:39,946Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:36:39,948Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:36:39,948Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:36:40,157Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:36:40,165Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:36:40,169Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618493800165), owningKey=DL94CtQo6XXT3Cm5yNnY3dirBeZYMGzAUTmaYmSNpBWiJr {}
[INFO ] 2021-04-15T13:36:40,169Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:36:40,179Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618493800165) {}
[INFO ] 2021-04-15T13:36:40,188Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:36:40,188Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:36:40,188Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:36:40,197Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618493800165), owningKey=DL94CtQo6XXT3Cm5yNnY3dirBeZYMGzAUTmaYmSNpBWiJr {}
[INFO ] 2021-04-15T13:36:40,197Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:36:40,238Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:36:40,268Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:36:40,271Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:36:40,272Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:36:40,272Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:36:40,279Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:36:40,311Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618493800165) {}
[INFO ] 2021-04-15T13:36:40,314Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618493797531), owningKey=DL6fDSr7Aqjvk4ihrzFQa2nTGtkiR5FwwJZEwr3PDuKGY3 {}
[INFO ] 2021-04-15T13:36:40,314Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:36:40,333Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618493800165), owningKey=DL94CtQo6XXT3Cm5yNnY3dirBeZYMGzAUTmaYmSNpBWiJr {}
[INFO ] 2021-04-15T13:36:40,333Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:36:40,350Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618493800165), owningKey=DL94CtQo6XXT3Cm5yNnY3dirBeZYMGzAUTmaYmSNpBWiJr {}
[INFO ] 2021-04-15T13:36:40,350Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:36:40,350Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618493800165), owningKey=DL94CtQo6XXT3Cm5yNnY3dirBeZYMGzAUTmaYmSNpBWiJr {}
[INFO ] 2021-04-15T13:36:40,350Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:36:40,364Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/2/cordapps] {}
[INFO ] 2021-04-15T13:36:40,364Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:36:40,364Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:36:40,372Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:36:40,378Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:36:40,389Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:36:40,445Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:36:40,446Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:36:40,448Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:36:40,496Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:36:40,496Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL69vnqEFeKNUeLCpzuD75ziFhopMvFg2uhHGFTpjQQxs5, alias: identity-private-key {}
[INFO ] 2021-04-15T13:36:40,507Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:36:40,507Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:36:40,508Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:40,508Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:40,508Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:40,508Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:40,508Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:40,508Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:40,508Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:40,508Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:40,508Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:40,508Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:40,508Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:36:40,508Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:36:40,509Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:36:40,509Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:36:40,515Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:36:03.939Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:36:41,156Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:36:41,158Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:36:41,158Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:36:41,342Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:36:41,350Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:36:41,354Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618493801350), owningKey=DL69vnqEFeKNUeLCpzuD75ziFhopMvFg2uhHGFTpjQQxs5 {}
[INFO ] 2021-04-15T13:36:41,354Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:36:41,367Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618493801350) {}
[INFO ] 2021-04-15T13:36:41,377Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:36:41,378Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:36:41,378Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:36:41,388Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618493801350), owningKey=DL69vnqEFeKNUeLCpzuD75ziFhopMvFg2uhHGFTpjQQxs5 {}
[INFO ] 2021-04-15T13:36:41,388Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:36:41,421Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:36:41,451Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:36:41,454Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:36:41,454Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:36:41,455Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:36:41,460Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:36:41,488Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618493801350) {}
[INFO ] 2021-04-15T13:36:41,491Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618493797531), owningKey=DL6fDSr7Aqjvk4ihrzFQa2nTGtkiR5FwwJZEwr3PDuKGY3 {}
[INFO ] 2021-04-15T13:36:41,491Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:36:41,509Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618493801350), owningKey=DL69vnqEFeKNUeLCpzuD75ziFhopMvFg2uhHGFTpjQQxs5 {}
[INFO ] 2021-04-15T13:36:41,509Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:36:41,524Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618493800165), owningKey=DL94CtQo6XXT3Cm5yNnY3dirBeZYMGzAUTmaYmSNpBWiJr {}
[INFO ] 2021-04-15T13:36:41,524Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:36:41,538Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618493801350), owningKey=DL69vnqEFeKNUeLCpzuD75ziFhopMvFg2uhHGFTpjQQxs5 {}
[INFO ] 2021-04-15T13:36:41,538Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:36:41,550Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618493801350), owningKey=DL69vnqEFeKNUeLCpzuD75ziFhopMvFg2uhHGFTpjQQxs5 {}
[INFO ] 2021-04-15T13:36:41,550Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:36:41,551Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618493801350), owningKey=DL69vnqEFeKNUeLCpzuD75ziFhopMvFg2uhHGFTpjQQxs5 {}
[INFO ] 2021-04-15T13:36:41,551Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:36:41,563Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/3/cordapps] {}
[INFO ] 2021-04-15T13:36:41,563Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/3/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/3/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/3/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/3/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:36:41,563Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/3/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:36:41,572Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/3/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:36:41,578Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/3/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:36:41,588Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/3/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:36:41,645Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:36:41,646Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:36:41,648Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:36:41,692Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:36:41,692Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL2jFWHrWVuqNhzs3jrcTKg11y7ofi3cADTxeEpamBz1ir, alias: identity-private-key {}
[INFO ] 2021-04-15T13:36:41,701Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:36:41,701Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:36:41,701Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:41,701Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:41,701Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:41,702Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:41,702Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:41,702Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:41,702Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:41,702Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:41,702Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:41,702Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:36:41,702Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:36:41,702Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:36:41,702Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:36:41,702Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:36:41,708Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:36:03.939Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:36:42,347Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:36:42,350Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:36:42,350Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:36:42,560Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:36:42,568Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:36:42,573Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618493802568), owningKey=DL2jFWHrWVuqNhzs3jrcTKg11y7ofi3cADTxeEpamBz1ir {}
[INFO ] 2021-04-15T13:36:42,573Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:36:42,583Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618493802568) {}
[INFO ] 2021-04-15T13:36:42,591Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:36:42,592Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:36:42,592Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:36:42,612Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618493802568), owningKey=DL2jFWHrWVuqNhzs3jrcTKg11y7ofi3cADTxeEpamBz1ir {}
[INFO ] 2021-04-15T13:36:42,612Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:36:42,641Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:36:42,669Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:36:42,672Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:36:42,673Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-133607.183-5631E36E2B526735/nodes/3/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:36:42,674Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:36:42,681Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:36:42,707Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618493802568) {}
[INFO ] 2021-04-15T13:36:42,710Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618493797531), owningKey=DL6fDSr7Aqjvk4ihrzFQa2nTGtkiR5FwwJZEwr3PDuKGY3 {}
[INFO ] 2021-04-15T13:36:42,710Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:36:42,725Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618493802568), owningKey=DL2jFWHrWVuqNhzs3jrcTKg11y7ofi3cADTxeEpamBz1ir {}
[INFO ] 2021-04-15T13:36:42,725Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:36:42,743Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618493800165), owningKey=DL94CtQo6XXT3Cm5yNnY3dirBeZYMGzAUTmaYmSNpBWiJr {}
[INFO ] 2021-04-15T13:36:42,743Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:36:42,756Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618493802568), owningKey=DL2jFWHrWVuqNhzs3jrcTKg11y7ofi3cADTxeEpamBz1ir {}
[INFO ] 2021-04-15T13:36:42,756Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:36:42,768Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618493801350), owningKey=DL69vnqEFeKNUeLCpzuD75ziFhopMvFg2uhHGFTpjQQxs5 {}
[INFO ] 2021-04-15T13:36:42,768Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:36:42,782Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618493802568), owningKey=DL2jFWHrWVuqNhzs3jrcTKg11y7ofi3cADTxeEpamBz1ir {}
[INFO ] 2021-04-15T13:36:42,782Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:36:42,793Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618493802568), owningKey=DL2jFWHrWVuqNhzs3jrcTKg11y7ofi3cADTxeEpamBz1ir {}
[INFO ] 2021-04-15T13:36:42,793Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:36:42,793Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618493802568), owningKey=DL2jFWHrWVuqNhzs3jrcTKg11y7ofi3cADTxeEpamBz1ir {}
[INFO ] 2021-04-15T13:36:42,793Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:36:43,593Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=09ba6464-89fc-4c94-885c-70f2777e9f63, invocation_id=25758931-bc19-4f1e-8617-ec8087f3fcbd, invocation_timestamp=2021-04-15T13:36:42.832Z, origin=Only For Testing, session_id=25758931-bc19-4f1e-8617-ec8087f3fcbd, session_timestamp=2021-04-15T13:36:42.832Z, thread-id=649, tx_id=D82F59579363E0A337DC5DCAA96C2A907405B8D5C90C5F4AFE36A0E49BCD0B05}
[INFO ] 2021-04-15T13:36:43,593Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=09ba6464-89fc-4c94-885c-70f2777e9f63, invocation_id=25758931-bc19-4f1e-8617-ec8087f3fcbd, invocation_timestamp=2021-04-15T13:36:42.832Z, origin=Only For Testing, session_id=25758931-bc19-4f1e-8617-ec8087f3fcbd, session_timestamp=2021-04-15T13:36:42.832Z, thread-id=649, tx_id=D82F59579363E0A337DC5DCAA96C2A907405B8D5C90C5F4AFE36A0E49BCD0B05}
[INFO ] 2021-04-15T13:36:43,726Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=09ba6464-89fc-4c94-885c-70f2777e9f63, invocation_id=25758931-bc19-4f1e-8617-ec8087f3fcbd, invocation_timestamp=2021-04-15T13:36:42.832Z, origin=Only For Testing, session_id=25758931-bc19-4f1e-8617-ec8087f3fcbd, session_timestamp=2021-04-15T13:36:42.832Z, thread-id=649, tx_id=D82F59579363E0A337DC5DCAA96C2A907405B8D5C90C5F4AFE36A0E49BCD0B05}
[INFO ] 2021-04-15T13:36:43,726Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=09ba6464-89fc-4c94-885c-70f2777e9f63, invocation_id=25758931-bc19-4f1e-8617-ec8087f3fcbd, invocation_timestamp=2021-04-15T13:36:42.832Z, origin=Only For Testing, session_id=25758931-bc19-4f1e-8617-ec8087f3fcbd, session_timestamp=2021-04-15T13:36:42.832Z, thread-id=649, tx_id=D82F59579363E0A337DC5DCAA96C2A907405B8D5C90C5F4AFE36A0E49BCD0B05}
[INFO ] 2021-04-15T13:36:44,172Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary, L=London, C=GB. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=502e7a4b-a8d4-4374-a17f-cf48bc50cbc1, invocation_id=51a71fdb-b5f9-4d34-a774-23adfaa1774a, invocation_timestamp=2021-04-15T13:36:43.818Z, origin=Only For Testing, session_id=51a71fdb-b5f9-4d34-a774-23adfaa1774a, session_timestamp=2021-04-15T13:36:43.818Z, thread-id=649, tx_id=9DD9A0D88D3EC713CF455A94F36FFDD11F59BF96126099EB16CE0DD901FDFB8F}
[INFO ] 2021-04-15T13:36:44,300Z [Mock network] corda.flow. - Received a notarisation request for Tx [9DD9A0D88D3EC713CF455A94F36FFDD11F59BF96126099EB16CE0DD901FDFB8F] from [O=InvestorA, L=TestLand, C=US] {fiber-id=10000003, flow-id=28f50661-17a5-4ecc-a33d-c0a53d236b94, invocation_id=e7920472-666f-4c03-b604-224f309cb22a, invocation_timestamp=2021-04-15T13:36:44.264Z, origin=O=InvestorA, L=TestLand, C=US, session_id=e7920472-666f-4c03-b604-224f309cb22a, session_timestamp=2021-04-15T13:36:44.264Z, thread-id=649}
[INFO ] 2021-04-15T13:36:45,065Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 0 input states and 1 references {}
[INFO ] 2021-04-15T13:36:45,105Z [Mock network] corda.flow. - Transaction [9DD9A0D88D3EC713CF455A94F36FFDD11F59BF96126099EB16CE0DD901FDFB8F] successfully notarised, sending signature back to [O=InvestorA, L=TestLand, C=US] {fiber-id=10000003, flow-id=28f50661-17a5-4ecc-a33d-c0a53d236b94, invocation_id=e7920472-666f-4c03-b604-224f309cb22a, invocation_timestamp=2021-04-15T13:36:44.264Z, origin=O=InvestorA, L=TestLand, C=US, session_id=e7920472-666f-4c03-b604-224f309cb22a, session_timestamp=2021-04-15T13:36:44.264Z, thread-id=649}
[INFO ] 2021-04-15T13:36:45,163Z [Mock network] corda.flow. - Notary responded (O=Notary, L=London, C=GB). {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=502e7a4b-a8d4-4374-a17f-cf48bc50cbc1, invocation_id=51a71fdb-b5f9-4d34-a774-23adfaa1774a, invocation_timestamp=2021-04-15T13:36:43.818Z, origin=Only For Testing, session_id=51a71fdb-b5f9-4d34-a774-23adfaa1774a, session_timestamp=2021-04-15T13:36:43.818Z, thread-id=649, tx_id=9DD9A0D88D3EC713CF455A94F36FFDD11F59BF96126099EB16CE0DD901FDFB8F}
[INFO ] 2021-04-15T13:36:45,165Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=502e7a4b-a8d4-4374-a17f-cf48bc50cbc1, invocation_id=51a71fdb-b5f9-4d34-a774-23adfaa1774a, invocation_timestamp=2021-04-15T13:36:43.818Z, origin=Only For Testing, session_id=51a71fdb-b5f9-4d34-a774-23adfaa1774a, session_timestamp=2021-04-15T13:36:43.818Z, thread-id=649, tx_id=9DD9A0D88D3EC713CF455A94F36FFDD11F59BF96126099EB16CE0DD901FDFB8F}
[INFO ] 2021-04-15T13:36:45,199Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=502e7a4b-a8d4-4374-a17f-cf48bc50cbc1, invocation_id=51a71fdb-b5f9-4d34-a774-23adfaa1774a, invocation_timestamp=2021-04-15T13:36:43.818Z, origin=Only For Testing, session_id=51a71fdb-b5f9-4d34-a774-23adfaa1774a, session_timestamp=2021-04-15T13:36:43.818Z, thread-id=649, tx_id=9DD9A0D88D3EC713CF455A94F36FFDD11F59BF96126099EB16CE0DD901FDFB8F}
[INFO ] 2021-04-15T13:36:45,200Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=502e7a4b-a8d4-4374-a17f-cf48bc50cbc1, invocation_id=51a71fdb-b5f9-4d34-a774-23adfaa1774a, invocation_timestamp=2021-04-15T13:36:43.818Z, origin=Only For Testing, session_id=51a71fdb-b5f9-4d34-a774-23adfaa1774a, session_timestamp=2021-04-15T13:36:43.818Z, thread-id=649, tx_id=9DD9A0D88D3EC713CF455A94F36FFDD11F59BF96126099EB16CE0DD901FDFB8F}
[INFO ] 2021-04-15T13:36:45,458Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=InvestorA, L=TestLand, C=US. {fiber-id=10000005, flow-id=139b4a00-e10e-47f5-b235-cf81bf9bb9f1, invocation_id=f0ea21bb-0a54-447d-bd07-87b929b94b09, invocation_timestamp=2021-04-15T13:36:45.425Z, origin=O=InvestorA, L=TestLand, C=US, session_id=f0ea21bb-0a54-447d-bd07-87b929b94b09, session_timestamp=2021-04-15T13:36:45.425Z, thread-id=649, tx_id=30D1436F3B6BACDC831257B49CDE3E68568B06DDBDB654B5BCB741CF58D4B2C1}
[INFO ] 2021-04-15T13:36:45,709Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=139b4a00-e10e-47f5-b235-cf81bf9bb9f1, invocation_id=f0ea21bb-0a54-447d-bd07-87b929b94b09, invocation_timestamp=2021-04-15T13:36:45.425Z, origin=O=InvestorA, L=TestLand, C=US, session_id=f0ea21bb-0a54-447d-bd07-87b929b94b09, session_timestamp=2021-04-15T13:36:45.425Z, thread-id=649, tx_id=30D1436F3B6BACDC831257B49CDE3E68568B06DDBDB654B5BCB741CF58D4B2C1}
[INFO ] 2021-04-15T13:36:45,758Z [Mock network] corda.flow. - Flow raised an error: A signature was requested for a key that isn't part of the required signing keys for transaction 30D1436F3B6BACDC831257B49CDE3E68568B06DDBDB654B5BCB741CF58D4B2C1. Sending it to flow hospital to be triaged. {fiber-id=10000005, flow-id=139b4a00-e10e-47f5-b235-cf81bf9bb9f1, invocation_id=f0ea21bb-0a54-447d-bd07-87b929b94b09, invocation_timestamp=2021-04-15T13:36:45.425Z, origin=O=InvestorA, L=TestLand, C=US, session_id=f0ea21bb-0a54-447d-bd07-87b929b94b09, session_timestamp=2021-04-15T13:36:45.425Z, thread-id=649, tx_id=30D1436F3B6BACDC831257B49CDE3E68568B06DDBDB654B5BCB741CF58D4B2C1}
[INFO ] 2021-04-15T13:36:45,763Z [Mock network] statemachine.StaffedFlowHospital. - Flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Invocation, sessionId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3432537001696079104)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6344776333199307461), deduplicationSeed=D--6344776333199307461--7407588496997707006)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))]), frozenFiber=3B73886522C247B80800439C18D434F236EF733E1E41718BCCA8F1D154674AD9), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@12007c71, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1a069a16], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=fabef124-e85a-49bf-bee0-ea33bc23e90e, reloadCheckpointAfterSuspendCount=null, numberOfCommits=8, lock=java.util.concurrent.Semaphore@c58879e[Permits = 0]) {fiber-id=10000005, flow-id=139b4a00-e10e-47f5-b235-cf81bf9bb9f1, invocation_id=f0ea21bb-0a54-447d-bd07-87b929b94b09, invocation_timestamp=2021-04-15T13:36:45.425Z, origin=O=InvestorA, L=TestLand, C=US, session_id=f0ea21bb-0a54-447d-bd07-87b929b94b09, session_timestamp=2021-04-15T13:36:45.425Z, thread-id=649, tx_id=30D1436F3B6BACDC831257B49CDE3E68568B06DDBDB654B5BCB741CF58D4B2C1}
[INFO ] 2021-04-15T13:36:45,766Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {fiber-id=10000005, flow-id=139b4a00-e10e-47f5-b235-cf81bf9bb9f1, invocation_id=f0ea21bb-0a54-447d-bd07-87b929b94b09, invocation_timestamp=2021-04-15T13:36:45.425Z, origin=O=InvestorA, L=TestLand, C=US, session_id=f0ea21bb-0a54-447d-bd07-87b929b94b09, session_timestamp=2021-04-15T13:36:45.425Z, thread-id=649, tx_id=30D1436F3B6BACDC831257B49CDE3E68568B06DDBDB654B5BCB741CF58D4B2C1}
java.lang.IllegalArgumentException: A signature was requested for a key that isn't part of the required signing keys for transaction 30D1436F3B6BACDC831257B49CDE3E68568B06DDBDB654B5BCB741CF58D4B2C1
	at net.corda.core.flows.SignTransactionFlow.checkMySignaturesRequired(CollectSignaturesFlow.kt:345) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:287) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:103) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:79) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[INFO ] 2021-04-15T13:36:45,770Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {fiber-id=10000005, flow-id=139b4a00-e10e-47f5-b235-cf81bf9bb9f1, invocation_id=f0ea21bb-0a54-447d-bd07-87b929b94b09, invocation_timestamp=2021-04-15T13:36:45.425Z, origin=O=InvestorA, L=TestLand, C=US, session_id=f0ea21bb-0a54-447d-bd07-87b929b94b09, session_timestamp=2021-04-15T13:36:45.425Z, thread-id=649, tx_id=30D1436F3B6BACDC831257B49CDE3E68568B06DDBDB654B5BCB741CF58D4B2C1}
java.lang.IllegalArgumentException: A signature was requested for a key that isn't part of the required signing keys for transaction 30D1436F3B6BACDC831257B49CDE3E68568B06DDBDB654B5BCB741CF58D4B2C1
	at net.corda.core.flows.SignTransactionFlow.checkMySignaturesRequired(CollectSignaturesFlow.kt:345) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:287) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:103) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:79) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[WARN ] 2021-04-15T13:36:45,814Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] errored, dumping all transitions:

 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.436Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[139b4a00-e10e-47f5-b235-cf81bf9bb9f1], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Invocation, sessionId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=99D76DE4DE0E4FD626740347CACE1C1A43A71788DE93319CB7EBF59942C8A0AB), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@26733ae4])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@26733ae4])
    SignalFlowHasStarted(flowId=[139b4a00-e10e-47f5-b235-cf81bf9bb9f1])
    SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6344776333199307461), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=3432537001696079104), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--6344776333199307461--7407588496997707006-0-0), senderUUID=fabef124-e85a-49bf-bee0-ea33bc23e90e))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=3432537001696079104): 
    null
    Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6344776333199307461), deduplicationSeed=D--6344776333199307461--7407588496997707006)
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@26733ae4]
    []


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.440Z
  Event: EnterSubFlow(subFlowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.426Z
    2021-04-15T13:36:45.440Z


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.444Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.440Z
    2021-04-15T13:36:45.444Z


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.456Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))]), maySkipCheckpoint=false, fiber=E5B150D89EDB3F2D8C6B4D9A5E62C2F6EDBF3670F0AEEF79782B5ACA79BAD9DC, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[139b4a00-e10e-47f5-b235-cf81bf9bb9f1], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Invocation, sessionId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3432537001696079104)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6344776333199307461), deduplicationSeed=D--6344776333199307461--7407588496997707006)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))]), frozenFiber=E5B150D89EDB3F2D8C6B4D9A5E62C2F6EDBF3670F0AEEF79782B5ACA79BAD9DC), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=99D76DE4DE0E4FD626740347CACE1C1A43A71788DE93319CB7EBF59942C8A0AB)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))]), frozenFiber=E5B150D89EDB3F2D8C6B4D9A5E62C2F6EDBF3670F0AEEF79782B5ACA79BAD9DC)
checkpoint.timestamp: 
    2021-04-15T13:36:45.444Z
    2021-04-15T13:36:45.452Z
checkpoint.progressStep: 
    null
    Starting
isFlowResumed: 
    true
    false
numberOfCommits: 
    0
    2


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.456Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=3432537001696079104).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
checkpoint.timestamp: 
    2021-04-15T13:36:45.452Z
    2021-04-15T13:36:45.456Z
isFlowResumed: 
    false
    true


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.459Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.456Z
    2021-04-15T13:36:45.459Z


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.459Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.464Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.459Z
    2021-04-15T13:36:45.464Z


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.464Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.464Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.465Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.464Z
    2021-04-15T13:36:45.465Z


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.475Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=25F86705967772FB3C97AE4B1D31F54B45ADF1CBC26CB2E79E96EC0789BA464D}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=59B3E771FF958EC3FB2315AB92C8FAC82B6CED2DE5952626AA418D89CEBE2ABE, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[139b4a00-e10e-47f5-b235-cf81bf9bb9f1], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Invocation, sessionId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3432537001696079104)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6344776333199307461), deduplicationSeed=D--6344776333199307461--7407588496997707006)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=25F86705967772FB3C97AE4B1D31F54B45ADF1CBC26CB2E79E96EC0789BA464D}, shouldRetrySend=false), frozenFiber=59B3E771FF958EC3FB2315AB92C8FAC82B6CED2DE5952626AA418D89CEBE2ABE), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
checkpoint.flowIoRequest: 
    Receive
    SendAndReceive
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))])
    SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=25F86705967772FB3C97AE4B1D31F54B45ADF1CBC26CB2E79E96EC0789BA464D}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    E5B150D89EDB3F2D8C6B4D9A5E62C2F6EDBF3670F0AEEF79782B5ACA79BAD9DC
    59B3E771FF958EC3FB2315AB92C8FAC82B6CED2DE5952626AA418D89CEBE2ABE
checkpoint.timestamp: 
    2021-04-15T13:36:45.465Z
    2021-04-15T13:36:45.472Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    2
    3


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.476Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6344776333199307461), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--6344776333199307461--7407588496997707006-2-0), senderUUID=fabef124-e85a-49bf-bee0-ea33bc23e90e))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=25F86705967772FB3C97AE4B1D31F54B45ADF1CBC26CB2E79E96EC0789BA464D}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))])
checkpoint.timestamp: 
    2021-04-15T13:36:45.472Z
    2021-04-15T13:36:45.475Z


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.512Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3432537001696079104), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1c808536, sender=O=InvestorA, L=TestLand, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=3432537001696079104).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.475Z
    2021-04-15T13:36:45.512Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1c808536]


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.512Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=3432537001696079104).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.514Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.512Z
    2021-04-15T13:36:45.514Z


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.518Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.514Z
    2021-04-15T13:36:45.518Z


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.518Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.518Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.518Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.526Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-04-15T13:36:45.518Z), maySkipCheckpoint=false, fiber=71C7C179E51230278B65573A3473BDEE3AAAD933FBA03E3342E51D206FA251DD, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[139b4a00-e10e-47f5-b235-cf81bf9bb9f1], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Invocation, sessionId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3432537001696079104)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6344776333199307461), deduplicationSeed=D--6344776333199307461--7407588496997707006)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-04-15T13:36:45.518Z), frozenFiber=71C7C179E51230278B65573A3473BDEE3AAAD933FBA03E3342E51D206FA251DD), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1c808536])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1c808536])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
checkpoint.flowIoRequest: 
    SendAndReceive
    Sleep
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))])
    Sleep(wakeUpAfter=2021-04-15T13:36:45.518Z)
checkpoint.flowState.frozenFiber.hash: 
    59B3E771FF958EC3FB2315AB92C8FAC82B6CED2DE5952626AA418D89CEBE2ABE
    71C7C179E51230278B65573A3473BDEE3AAAD933FBA03E3342E51D206FA251DD
checkpoint.timestamp: 
    2021-04-15T13:36:45.518Z
    2021-04-15T13:36:45.523Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    3
    4
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1c808536]
    []


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.527Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Invocation, sessionId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3432537001696079104)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6344776333199307461), deduplicationSeed=D--6344776333199307461--7407588496997707006)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-04-15T13:36:45.518Z), frozenFiber=71C7C179E51230278B65573A3473BDEE3AAAD933FBA03E3342E51D206FA251DD), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@12007c71, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@4230abdc, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=fabef124-e85a-49bf-bee0-ea33bc23e90e, reloadCheckpointAfterSuspendCount=null, numberOfCommits=4, lock=java.util.concurrent.Semaphore@c58879e[Permits = 0]), time=2021-04-15T13:36:45.518Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
isWaitingForFuture: 
    false
    true
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@4230abdc


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.532Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isWaitingForFuture: 
    true
    false
isFlowResumed: 
    false
    true
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@4230abdc
    null


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.532Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.523Z
    2021-04-15T13:36:45.532Z


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.542Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=B569E21CE86B3F50E0B24BB2E2103F565226455B551628AB109B19CF6F4659E2}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=82647ECC05A94D76662F1EE7C75EAF8847789DD41BA6985664189984A974ADBF, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[139b4a00-e10e-47f5-b235-cf81bf9bb9f1], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Invocation, sessionId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3432537001696079104)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6344776333199307461), deduplicationSeed=D--6344776333199307461--7407588496997707006)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=B569E21CE86B3F50E0B24BB2E2103F565226455B551628AB109B19CF6F4659E2}, shouldRetrySend=false), frozenFiber=82647ECC05A94D76662F1EE7C75EAF8847789DD41BA6985664189984A974ADBF), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.checkpointState.numberOfCommits: 
    4
    5
checkpoint.flowIoRequest: 
    Sleep
    SendAndReceive
checkpoint.flowState.flowIORequest: 
    Sleep(wakeUpAfter=2021-04-15T13:36:45.518Z)
    SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=B569E21CE86B3F50E0B24BB2E2103F565226455B551628AB109B19CF6F4659E2}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    71C7C179E51230278B65573A3473BDEE3AAAD933FBA03E3342E51D206FA251DD
    82647ECC05A94D76662F1EE7C75EAF8847789DD41BA6985664189984A974ADBF
checkpoint.timestamp: 
    2021-04-15T13:36:45.532Z
    2021-04-15T13:36:45.539Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    4
    5


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.543Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6344776333199307461), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--6344776333199307461--7407588496997707006-4-0), senderUUID=fabef124-e85a-49bf-bee0-ea33bc23e90e))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=B569E21CE86B3F50E0B24BB2E2103F565226455B551628AB109B19CF6F4659E2}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))])
checkpoint.timestamp: 
    2021-04-15T13:36:45.539Z
    2021-04-15T13:36:45.543Z


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.566Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3432537001696079104), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7ffe6d3b, sender=O=InvestorA, L=TestLand, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=3432537001696079104).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.543Z
    2021-04-15T13:36:45.566Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7ffe6d3b]


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.566Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=3432537001696079104).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.567Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.566Z
    2021-04-15T13:36:45.567Z


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.569Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.567Z
    2021-04-15T13:36:45.569Z


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.570Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.569Z
    2021-04-15T13:36:45.570Z


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.570Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.570Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.578Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-04-15T13:36:45.570Z), maySkipCheckpoint=false, fiber=43FBB7B44945329D769210B62CEDB03CCFC2E8873B02514C92A2936DDF5B8EA3, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[139b4a00-e10e-47f5-b235-cf81bf9bb9f1], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Invocation, sessionId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3432537001696079104)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6344776333199307461), deduplicationSeed=D--6344776333199307461--7407588496997707006)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-04-15T13:36:45.570Z), frozenFiber=43FBB7B44945329D769210B62CEDB03CCFC2E8873B02514C92A2936DDF5B8EA3), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7ffe6d3b])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7ffe6d3b])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.checkpointState.numberOfCommits: 
    5
    6
checkpoint.flowIoRequest: 
    SendAndReceive
    Sleep
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))])
    Sleep(wakeUpAfter=2021-04-15T13:36:45.570Z)
checkpoint.flowState.frozenFiber.hash: 
    82647ECC05A94D76662F1EE7C75EAF8847789DD41BA6985664189984A974ADBF
    43FBB7B44945329D769210B62CEDB03CCFC2E8873B02514C92A2936DDF5B8EA3
checkpoint.timestamp: 
    2021-04-15T13:36:45.570Z
    2021-04-15T13:36:45.575Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    5
    6
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7ffe6d3b]
    []


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.578Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Invocation, sessionId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3432537001696079104)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6344776333199307461), deduplicationSeed=D--6344776333199307461--7407588496997707006)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-04-15T13:36:45.570Z), frozenFiber=43FBB7B44945329D769210B62CEDB03CCFC2E8873B02514C92A2936DDF5B8EA3), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@12007c71, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@d7db393, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=fabef124-e85a-49bf-bee0-ea33bc23e90e, reloadCheckpointAfterSuspendCount=null, numberOfCommits=6, lock=java.util.concurrent.Semaphore@c58879e[Permits = 0]), time=2021-04-15T13:36:45.570Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
isWaitingForFuture: 
    false
    true
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@d7db393


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.579Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isWaitingForFuture: 
    true
    false
isFlowResumed: 
    false
    true
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@d7db393
    null


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.586Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=5D2AC0B6FE94F55D8BB911A4F7F9DC617D55A17AEC9145E7962EE5BAB6920C0D, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[139b4a00-e10e-47f5-b235-cf81bf9bb9f1], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Invocation, sessionId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3432537001696079104)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6344776333199307461), deduplicationSeed=D--6344776333199307461--7407588496997707006)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=5D2AC0B6FE94F55D8BB911A4F7F9DC617D55A17AEC9145E7962EE5BAB6920C0D), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
checkpoint.checkpointState.numberOfCommits: 
    6
    7
checkpoint.flowIoRequest: 
    Sleep
    Send
checkpoint.flowState.flowIORequest: 
    Sleep(wakeUpAfter=2021-04-15T13:36:45.570Z)
    Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    43FBB7B44945329D769210B62CEDB03CCFC2E8873B02514C92A2936DDF5B8EA3
    5D2AC0B6FE94F55D8BB911A4F7F9DC617D55A17AEC9145E7962EE5BAB6920C0D
checkpoint.timestamp: 
    2021-04-15T13:36:45.575Z
    2021-04-15T13:36:45.584Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    6
    7


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.587Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6344776333199307461), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--6344776333199307461--7407588496997707006-6-0), senderUUID=fabef124-e85a-49bf-bee0-ea33bc23e90e))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.709Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.587Z
    2021-04-15T13:36:45.709Z


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.722Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.709Z
    2021-04-15T13:36:45.722Z


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.729Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))]), maySkipCheckpoint=false, fiber=3B73886522C247B80800439C18D434F236EF733E1E41718BCCA8F1D154674AD9, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[139b4a00-e10e-47f5-b235-cf81bf9bb9f1], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Invocation, sessionId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3432537001696079104)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6344776333199307461), deduplicationSeed=D--6344776333199307461--7407588496997707006)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))]), frozenFiber=3B73886522C247B80800439C18D434F236EF733E1E41718BCCA8F1D154674AD9), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.numberOfSuspends: 
    6
    7
checkpoint.checkpointState.numberOfCommits: 
    7
    8
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))])
checkpoint.flowState.frozenFiber.hash: 
    5D2AC0B6FE94F55D8BB911A4F7F9DC617D55A17AEC9145E7962EE5BAB6920C0D
    3B73886522C247B80800439C18D434F236EF733E1E41718BCCA8F1D154674AD9
checkpoint.timestamp: 
    2021-04-15T13:36:45.722Z
    2021-04-15T13:36:45.726Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    7
    8


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.729Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.756Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3432537001696079104), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1a069a16, sender=O=InvestorA, L=TestLand, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=3432537001696079104).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.729Z
    2021-04-15T13:36:45.756Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1a069a16]


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.757Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=3432537001696079104).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
checkpoint.timestamp: 
    2021-04-15T13:36:45.756Z
    2021-04-15T13:36:45.757Z
isFlowResumed: 
    false
    true


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.757Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false)]


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.771Z
  Event: Error(exception=java.lang.IllegalArgumentException: A signature was requested for a key that isn't part of the required signing keys for transaction 30D1436F3B6BACDC831257B49CDE3E68568B06DDBDB654B5BCB741CF58D4B2C1, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=778635719191990208, exception=java.lang.IllegalArgumentException: A signature was requested for a key that isn't part of the required signing keys for transaction 30D1436F3B6BACDC831257B49CDE3E68568B06DDBDB654B5BCB741CF58D4B2C1)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2021-04-15T13:36:45.757Z
    2021-04-15T13:36:45.761Z
isFlowResumed: 
    true
    false


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.777Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.778Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:36:45.761Z
    2021-04-15T13:36:45.778Z
 {fiber-id=10000005, flow-id=139b4a00-e10e-47f5-b235-cf81bf9bb9f1, invocation_id=f0ea21bb-0a54-447d-bd07-87b929b94b09, invocation_timestamp=2021-04-15T13:36:45.425Z, origin=O=InvestorA, L=TestLand, C=US, session_id=f0ea21bb-0a54-447d-bd07-87b929b94b09, session_timestamp=2021-04-15T13:36:45.425Z, thread-id=649, tx_id=30D1436F3B6BACDC831257B49CDE3E68568B06DDBDB654B5BCB741CF58D4B2C1}
[WARN ] 2021-04-15T13:36:45,814Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] error {fiber-id=10000005, flow-id=139b4a00-e10e-47f5-b235-cf81bf9bb9f1, invocation_id=f0ea21bb-0a54-447d-bd07-87b929b94b09, invocation_timestamp=2021-04-15T13:36:45.425Z, origin=O=InvestorA, L=TestLand, C=US, session_id=f0ea21bb-0a54-447d-bd07-87b929b94b09, session_timestamp=2021-04-15T13:36:45.425Z, thread-id=649, tx_id=30D1436F3B6BACDC831257B49CDE3E68568B06DDBDB654B5BCB741CF58D4B2C1}
java.lang.IllegalArgumentException: A signature was requested for a key that isn't part of the required signing keys for transaction 30D1436F3B6BACDC831257B49CDE3E68568B06DDBDB654B5BCB741CF58D4B2C1
	at net.corda.core.flows.SignTransactionFlow.checkMySignaturesRequired(CollectSignaturesFlow.kt:345) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:287) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:103) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:79) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[WARN ] 2021-04-15T13:36:45,815Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {fiber-id=10000005, flow-id=139b4a00-e10e-47f5-b235-cf81bf9bb9f1, invocation_id=f0ea21bb-0a54-447d-bd07-87b929b94b09, invocation_timestamp=2021-04-15T13:36:45.425Z, origin=O=InvestorA, L=TestLand, C=US, session_id=f0ea21bb-0a54-447d-bd07-87b929b94b09, session_timestamp=2021-04-15T13:36:45.425Z, thread-id=649, tx_id=30D1436F3B6BACDC831257B49CDE3E68568B06DDBDB654B5BCB741CF58D4B2C1}
[WARN ] 2021-04-15T13:36:45,910Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] errored, dumping all transitions:

 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.436Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[139b4a00-e10e-47f5-b235-cf81bf9bb9f1], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Invocation, sessionId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=99D76DE4DE0E4FD626740347CACE1C1A43A71788DE93319CB7EBF59942C8A0AB), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@26733ae4])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@26733ae4])
    SignalFlowHasStarted(flowId=[139b4a00-e10e-47f5-b235-cf81bf9bb9f1])
    SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6344776333199307461), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=3432537001696079104), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--6344776333199307461--7407588496997707006-0-0), senderUUID=fabef124-e85a-49bf-bee0-ea33bc23e90e))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=3432537001696079104): 
    null
    Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6344776333199307461), deduplicationSeed=D--6344776333199307461--7407588496997707006)
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@26733ae4]
    []


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.440Z
  Event: EnterSubFlow(subFlowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.426Z
    2021-04-15T13:36:45.440Z


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.444Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.440Z
    2021-04-15T13:36:45.444Z


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.456Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))]), maySkipCheckpoint=false, fiber=E5B150D89EDB3F2D8C6B4D9A5E62C2F6EDBF3670F0AEEF79782B5ACA79BAD9DC, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[139b4a00-e10e-47f5-b235-cf81bf9bb9f1], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Invocation, sessionId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3432537001696079104)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6344776333199307461), deduplicationSeed=D--6344776333199307461--7407588496997707006)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))]), frozenFiber=E5B150D89EDB3F2D8C6B4D9A5E62C2F6EDBF3670F0AEEF79782B5ACA79BAD9DC), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=99D76DE4DE0E4FD626740347CACE1C1A43A71788DE93319CB7EBF59942C8A0AB)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))]), frozenFiber=E5B150D89EDB3F2D8C6B4D9A5E62C2F6EDBF3670F0AEEF79782B5ACA79BAD9DC)
checkpoint.timestamp: 
    2021-04-15T13:36:45.444Z
    2021-04-15T13:36:45.452Z
checkpoint.progressStep: 
    null
    Starting
isFlowResumed: 
    true
    false
numberOfCommits: 
    0
    2


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.456Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=3432537001696079104).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
checkpoint.timestamp: 
    2021-04-15T13:36:45.452Z
    2021-04-15T13:36:45.456Z
isFlowResumed: 
    false
    true


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.459Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.456Z
    2021-04-15T13:36:45.459Z


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.459Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.464Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.459Z
    2021-04-15T13:36:45.464Z


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.464Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.464Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.465Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.464Z
    2021-04-15T13:36:45.465Z


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.475Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=25F86705967772FB3C97AE4B1D31F54B45ADF1CBC26CB2E79E96EC0789BA464D}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=59B3E771FF958EC3FB2315AB92C8FAC82B6CED2DE5952626AA418D89CEBE2ABE, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[139b4a00-e10e-47f5-b235-cf81bf9bb9f1], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Invocation, sessionId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3432537001696079104)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6344776333199307461), deduplicationSeed=D--6344776333199307461--7407588496997707006)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=25F86705967772FB3C97AE4B1D31F54B45ADF1CBC26CB2E79E96EC0789BA464D}, shouldRetrySend=false), frozenFiber=59B3E771FF958EC3FB2315AB92C8FAC82B6CED2DE5952626AA418D89CEBE2ABE), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
checkpoint.flowIoRequest: 
    Receive
    SendAndReceive
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))])
    SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=25F86705967772FB3C97AE4B1D31F54B45ADF1CBC26CB2E79E96EC0789BA464D}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    E5B150D89EDB3F2D8C6B4D9A5E62C2F6EDBF3670F0AEEF79782B5ACA79BAD9DC
    59B3E771FF958EC3FB2315AB92C8FAC82B6CED2DE5952626AA418D89CEBE2ABE
checkpoint.timestamp: 
    2021-04-15T13:36:45.465Z
    2021-04-15T13:36:45.472Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    2
    3


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.476Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6344776333199307461), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--6344776333199307461--7407588496997707006-2-0), senderUUID=fabef124-e85a-49bf-bee0-ea33bc23e90e))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=25F86705967772FB3C97AE4B1D31F54B45ADF1CBC26CB2E79E96EC0789BA464D}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))])
checkpoint.timestamp: 
    2021-04-15T13:36:45.472Z
    2021-04-15T13:36:45.475Z


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.512Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3432537001696079104), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1c808536, sender=O=InvestorA, L=TestLand, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=3432537001696079104).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.475Z
    2021-04-15T13:36:45.512Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1c808536]


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.512Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=3432537001696079104).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.514Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.512Z
    2021-04-15T13:36:45.514Z


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.518Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.514Z
    2021-04-15T13:36:45.518Z


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.518Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.518Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.518Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.526Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-04-15T13:36:45.518Z), maySkipCheckpoint=false, fiber=71C7C179E51230278B65573A3473BDEE3AAAD933FBA03E3342E51D206FA251DD, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[139b4a00-e10e-47f5-b235-cf81bf9bb9f1], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Invocation, sessionId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3432537001696079104)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6344776333199307461), deduplicationSeed=D--6344776333199307461--7407588496997707006)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-04-15T13:36:45.518Z), frozenFiber=71C7C179E51230278B65573A3473BDEE3AAAD933FBA03E3342E51D206FA251DD), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1c808536])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1c808536])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
checkpoint.flowIoRequest: 
    SendAndReceive
    Sleep
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))])
    Sleep(wakeUpAfter=2021-04-15T13:36:45.518Z)
checkpoint.flowState.frozenFiber.hash: 
    59B3E771FF958EC3FB2315AB92C8FAC82B6CED2DE5952626AA418D89CEBE2ABE
    71C7C179E51230278B65573A3473BDEE3AAAD933FBA03E3342E51D206FA251DD
checkpoint.timestamp: 
    2021-04-15T13:36:45.518Z
    2021-04-15T13:36:45.523Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    3
    4
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1c808536]
    []


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.527Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Invocation, sessionId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3432537001696079104)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6344776333199307461), deduplicationSeed=D--6344776333199307461--7407588496997707006)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-04-15T13:36:45.518Z), frozenFiber=71C7C179E51230278B65573A3473BDEE3AAAD933FBA03E3342E51D206FA251DD), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@12007c71, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@4230abdc, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=fabef124-e85a-49bf-bee0-ea33bc23e90e, reloadCheckpointAfterSuspendCount=null, numberOfCommits=4, lock=java.util.concurrent.Semaphore@c58879e[Permits = 0]), time=2021-04-15T13:36:45.518Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
isWaitingForFuture: 
    false
    true
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@4230abdc


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.532Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isWaitingForFuture: 
    true
    false
isFlowResumed: 
    false
    true
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@4230abdc
    null


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.532Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.523Z
    2021-04-15T13:36:45.532Z


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.542Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=B569E21CE86B3F50E0B24BB2E2103F565226455B551628AB109B19CF6F4659E2}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=82647ECC05A94D76662F1EE7C75EAF8847789DD41BA6985664189984A974ADBF, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[139b4a00-e10e-47f5-b235-cf81bf9bb9f1], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Invocation, sessionId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3432537001696079104)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6344776333199307461), deduplicationSeed=D--6344776333199307461--7407588496997707006)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=B569E21CE86B3F50E0B24BB2E2103F565226455B551628AB109B19CF6F4659E2}, shouldRetrySend=false), frozenFiber=82647ECC05A94D76662F1EE7C75EAF8847789DD41BA6985664189984A974ADBF), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.checkpointState.numberOfCommits: 
    4
    5
checkpoint.flowIoRequest: 
    Sleep
    SendAndReceive
checkpoint.flowState.flowIORequest: 
    Sleep(wakeUpAfter=2021-04-15T13:36:45.518Z)
    SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=B569E21CE86B3F50E0B24BB2E2103F565226455B551628AB109B19CF6F4659E2}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    71C7C179E51230278B65573A3473BDEE3AAAD933FBA03E3342E51D206FA251DD
    82647ECC05A94D76662F1EE7C75EAF8847789DD41BA6985664189984A974ADBF
checkpoint.timestamp: 
    2021-04-15T13:36:45.532Z
    2021-04-15T13:36:45.539Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    4
    5


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.543Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6344776333199307461), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--6344776333199307461--7407588496997707006-4-0), senderUUID=fabef124-e85a-49bf-bee0-ea33bc23e90e))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=B569E21CE86B3F50E0B24BB2E2103F565226455B551628AB109B19CF6F4659E2}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))])
checkpoint.timestamp: 
    2021-04-15T13:36:45.539Z
    2021-04-15T13:36:45.543Z


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.566Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3432537001696079104), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7ffe6d3b, sender=O=InvestorA, L=TestLand, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=3432537001696079104).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.543Z
    2021-04-15T13:36:45.566Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7ffe6d3b]


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.566Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=3432537001696079104).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.567Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.566Z
    2021-04-15T13:36:45.567Z


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.569Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.567Z
    2021-04-15T13:36:45.569Z


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.570Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.569Z
    2021-04-15T13:36:45.570Z


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.570Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.570Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.578Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-04-15T13:36:45.570Z), maySkipCheckpoint=false, fiber=43FBB7B44945329D769210B62CEDB03CCFC2E8873B02514C92A2936DDF5B8EA3, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[139b4a00-e10e-47f5-b235-cf81bf9bb9f1], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Invocation, sessionId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3432537001696079104)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6344776333199307461), deduplicationSeed=D--6344776333199307461--7407588496997707006)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-04-15T13:36:45.570Z), frozenFiber=43FBB7B44945329D769210B62CEDB03CCFC2E8873B02514C92A2936DDF5B8EA3), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7ffe6d3b])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7ffe6d3b])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.checkpointState.numberOfCommits: 
    5
    6
checkpoint.flowIoRequest: 
    SendAndReceive
    Sleep
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))])
    Sleep(wakeUpAfter=2021-04-15T13:36:45.570Z)
checkpoint.flowState.frozenFiber.hash: 
    82647ECC05A94D76662F1EE7C75EAF8847789DD41BA6985664189984A974ADBF
    43FBB7B44945329D769210B62CEDB03CCFC2E8873B02514C92A2936DDF5B8EA3
checkpoint.timestamp: 
    2021-04-15T13:36:45.570Z
    2021-04-15T13:36:45.575Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    5
    6
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7ffe6d3b]
    []


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.578Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Invocation, sessionId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3432537001696079104)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6344776333199307461), deduplicationSeed=D--6344776333199307461--7407588496997707006)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-04-15T13:36:45.570Z), frozenFiber=43FBB7B44945329D769210B62CEDB03CCFC2E8873B02514C92A2936DDF5B8EA3), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@12007c71, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@d7db393, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=fabef124-e85a-49bf-bee0-ea33bc23e90e, reloadCheckpointAfterSuspendCount=null, numberOfCommits=6, lock=java.util.concurrent.Semaphore@c58879e[Permits = 0]), time=2021-04-15T13:36:45.570Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
isWaitingForFuture: 
    false
    true
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@d7db393


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.579Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isWaitingForFuture: 
    true
    false
isFlowResumed: 
    false
    true
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@d7db393
    null


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.586Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=5D2AC0B6FE94F55D8BB911A4F7F9DC617D55A17AEC9145E7962EE5BAB6920C0D, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[139b4a00-e10e-47f5-b235-cf81bf9bb9f1], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Invocation, sessionId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3432537001696079104)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6344776333199307461), deduplicationSeed=D--6344776333199307461--7407588496997707006)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=5D2AC0B6FE94F55D8BB911A4F7F9DC617D55A17AEC9145E7962EE5BAB6920C0D), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
checkpoint.checkpointState.numberOfCommits: 
    6
    7
checkpoint.flowIoRequest: 
    Sleep
    Send
checkpoint.flowState.flowIORequest: 
    Sleep(wakeUpAfter=2021-04-15T13:36:45.570Z)
    Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    43FBB7B44945329D769210B62CEDB03CCFC2E8873B02514C92A2936DDF5B8EA3
    5D2AC0B6FE94F55D8BB911A4F7F9DC617D55A17AEC9145E7962EE5BAB6920C0D
checkpoint.timestamp: 
    2021-04-15T13:36:45.575Z
    2021-04-15T13:36:45.584Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    6
    7


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.587Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6344776333199307461), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--6344776333199307461--7407588496997707006-6-0), senderUUID=fabef124-e85a-49bf-bee0-ea33bc23e90e))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.709Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.587Z
    2021-04-15T13:36:45.709Z


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.722Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.709Z
    2021-04-15T13:36:45.722Z


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.729Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))]), maySkipCheckpoint=false, fiber=3B73886522C247B80800439C18D434F236EF733E1E41718BCCA8F1D154674AD9, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[139b4a00-e10e-47f5-b235-cf81bf9bb9f1], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Invocation, sessionId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3432537001696079104)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6344776333199307461), deduplicationSeed=D--6344776333199307461--7407588496997707006)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))]), frozenFiber=3B73886522C247B80800439C18D434F236EF733E1E41718BCCA8F1D154674AD9), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.numberOfSuspends: 
    6
    7
checkpoint.checkpointState.numberOfCommits: 
    7
    8
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))])
checkpoint.flowState.frozenFiber.hash: 
    5D2AC0B6FE94F55D8BB911A4F7F9DC617D55A17AEC9145E7962EE5BAB6920C0D
    3B73886522C247B80800439C18D434F236EF733E1E41718BCCA8F1D154674AD9
checkpoint.timestamp: 
    2021-04-15T13:36:45.722Z
    2021-04-15T13:36:45.726Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    7
    8


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.729Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.756Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3432537001696079104), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1a069a16, sender=O=InvestorA, L=TestLand, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=3432537001696079104).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.729Z
    2021-04-15T13:36:45.756Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1a069a16]


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.757Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=3432537001696079104).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
checkpoint.timestamp: 
    2021-04-15T13:36:45.756Z
    2021-04-15T13:36:45.757Z
isFlowResumed: 
    false
    true


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.757Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false)]


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.771Z
  Event: Error(exception=java.lang.IllegalArgumentException: A signature was requested for a key that isn't part of the required signing keys for transaction 30D1436F3B6BACDC831257B49CDE3E68568B06DDBDB654B5BCB741CF58D4B2C1, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=778635719191990208, exception=java.lang.IllegalArgumentException: A signature was requested for a key that isn't part of the required signing keys for transaction 30D1436F3B6BACDC831257B49CDE3E68568B06DDBDB654B5BCB741CF58D4B2C1)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2021-04-15T13:36:45.757Z
    2021-04-15T13:36:45.761Z
isFlowResumed: 
    true
    false


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.777Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.778Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:36:45.761Z
    2021-04-15T13:36:45.778Z


 --- Transition of flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] ---
  Timestamp: 2021-04-15T13:36:45.894Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=778635719191990208)], sessions=[Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6344776333199307461), deduplicationSeed=D--6344776333199307461--7407588496997707006)], senderUUID=fabef124-e85a-49bf-bee0-ea33bc23e90e)
    CreateTransaction
    RemoveCheckpoint(id=[139b4a00-e10e-47f5-b235-cf81bf9bb9f1], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1a069a16])
    ReleaseSoftLocks(uuid=139b4a00-e10e-47f5-b235-cf81bf9bb9f1)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1a069a16])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=3432537001696079104)])
    RemoveFlow(flowId=[139b4a00-e10e-47f5-b235-cf81bf9bb9f1], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=778635719191990208, exception=java.lang.IllegalArgumentException: A signature was requested for a key that isn't part of the required signing keys for transaction 30D1436F3B6BACDC831257B49CDE3E68568B06DDBDB654B5BCB741CF58D4B2C1)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Invocation, sessionId=f0ea21bb-0a54-447d-bd07-87b929b94b09, timestamp: 2021-04-15T13:36:45.425Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3432537001696079104)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6344776333199307461), deduplicationSeed=D--6344776333199307461--7407588496997707006)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=9), flowState=net.corda.node.services.statemachine.FlowState$Finished@5c3d4d6c, errorState=Errored(errors=[FlowError(errorId=778635719191990208, exception=java.lang.IllegalArgumentException: A signature was requested for a key that isn't part of the required signing keys for transaction 30D1436F3B6BACDC831257B49CDE3E68568B06DDBDB654B5BCB741CF58D4B2C1)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@12007c71, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, senderUUID=fabef124-e85a-49bf-bee0-ea33bc23e90e, reloadCheckpointAfterSuspendCount=null, numberOfCommits=9, lock=java.util.concurrent.Semaphore@c58879e[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.checkpointState.numberOfCommits: 
    8
    9
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3432537001696079104))]), frozenFiber=3B73886522C247B80800439C18D434F236EF733E1E41718BCCA8F1D154674AD9)
    net.corda.node.services.statemachine.FlowState$Finished@5c3d4d6c
checkpoint.timestamp: 
    2021-04-15T13:36:45.778Z
    2021-04-15T13:36:45.814Z
checkpoint.status: 
    RUNNABLE
    FAILED
numberOfCommits: 
    8
    9
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1a069a16]
    []
isRemoved: 
    false
    true
 {fiber-id=10000005, flow-id=139b4a00-e10e-47f5-b235-cf81bf9bb9f1, invocation_id=f0ea21bb-0a54-447d-bd07-87b929b94b09, invocation_timestamp=2021-04-15T13:36:45.425Z, origin=O=InvestorA, L=TestLand, C=US, session_id=f0ea21bb-0a54-447d-bd07-87b929b94b09, session_timestamp=2021-04-15T13:36:45.425Z, thread-id=649, tx_id=30D1436F3B6BACDC831257B49CDE3E68568B06DDBDB654B5BCB741CF58D4B2C1}
[WARN ] 2021-04-15T13:36:45,910Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [139b4a00-e10e-47f5-b235-cf81bf9bb9f1] error {fiber-id=10000005, flow-id=139b4a00-e10e-47f5-b235-cf81bf9bb9f1, invocation_id=f0ea21bb-0a54-447d-bd07-87b929b94b09, invocation_timestamp=2021-04-15T13:36:45.425Z, origin=O=InvestorA, L=TestLand, C=US, session_id=f0ea21bb-0a54-447d-bd07-87b929b94b09, session_timestamp=2021-04-15T13:36:45.425Z, thread-id=649, tx_id=30D1436F3B6BACDC831257B49CDE3E68568B06DDBDB654B5BCB741CF58D4B2C1}
java.lang.IllegalArgumentException: A signature was requested for a key that isn't part of the required signing keys for transaction 30D1436F3B6BACDC831257B49CDE3E68568B06DDBDB654B5BCB741CF58D4B2C1
	at net.corda.core.flows.SignTransactionFlow.checkMySignaturesRequired(CollectSignaturesFlow.kt:345) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:287) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:103) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:79) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[INFO ] 2021-04-15T13:36:45,915Z [Mock network] corda.flow. - Flow raised an error: Counter-flow errored. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=cb4a51ef-51af-43ec-a519-90f71239bb12, invocation_id=8eb46f22-19d5-4c14-b976-edc7eae92321, invocation_timestamp=2021-04-15T13:36:45.285Z, origin=Only For Testing, session_id=8eb46f22-19d5-4c14-b976-edc7eae92321, session_timestamp=2021-04-15T13:36:45.285Z, thread-id=649}
[INFO ] 2021-04-15T13:36:45,917Z [Mock network] statemachine.StaffedFlowHospital. - Flow [cb4a51ef-51af-43ec-a519-90f71239bb12] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=8eb46f22-19d5-4c14-b976-edc7eae92321, timestamp: 2021-04-15T13:36:45.285Z, entityType: Invocation, sessionId=8eb46f22-19d5-4c14-b976-edc7eae92321, timestamp: 2021-04-15T13:36:45.285Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=-2536924767445144842)=Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2536924767445144842), additionalEntropy=5729983305720333538), SessionId(toLong=-6344776333199307461)=Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=3432537001696079104), deduplicationSeed=R--6344776333199307461--7407588496997707006)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))]), frozenFiber=48C92BC34B2A825CC58048D9E6D7D2D06E1D4CFDA97B84AC39EDFE5AE4D93031), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator@3550dab2, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@d44ad02], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=e596a3cf-e663-4875-a4be-2c0760dfad19, reloadCheckpointAfterSuspendCount=null, numberOfCommits=6, lock=java.util.concurrent.Semaphore@54717e3[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=cb4a51ef-51af-43ec-a519-90f71239bb12, invocation_id=8eb46f22-19d5-4c14-b976-edc7eae92321, invocation_timestamp=2021-04-15T13:36:45.285Z, origin=Only For Testing, session_id=8eb46f22-19d5-4c14-b976-edc7eae92321, session_timestamp=2021-04-15T13:36:45.285Z, thread-id=649}
[INFO ] 2021-04-15T13:36:45,917Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=cb4a51ef-51af-43ec-a519-90f71239bb12, invocation_id=8eb46f22-19d5-4c14-b976-edc7eae92321, invocation_timestamp=2021-04-15T13:36:45.285Z, origin=Only For Testing, session_id=8eb46f22-19d5-4c14-b976-edc7eae92321, session_timestamp=2021-04-15T13:36:45.285Z, thread-id=649}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=TIE, L=TestVillage, C=US.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:574) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:67) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:29) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[INFO ] 2021-04-15T13:36:45,917Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=cb4a51ef-51af-43ec-a519-90f71239bb12, invocation_id=8eb46f22-19d5-4c14-b976-edc7eae92321, invocation_timestamp=2021-04-15T13:36:45.285Z, origin=Only For Testing, session_id=8eb46f22-19d5-4c14-b976-edc7eae92321, session_timestamp=2021-04-15T13:36:45.285Z, thread-id=649}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=TIE, L=TestVillage, C=US.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:574) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:67) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:29) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[WARN ] 2021-04-15T13:36:45,937Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [cb4a51ef-51af-43ec-a519-90f71239bb12] errored, dumping all transitions:

 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.289Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[cb4a51ef-51af-43ec-a519-90f71239bb12], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=8eb46f22-19d5-4c14-b976-edc7eae92321, timestamp: 2021-04-15T13:36:45.285Z, entityType: Invocation, sessionId=8eb46f22-19d5-4c14-b976-edc7eae92321, timestamp: 2021-04-15T13:36:45.285Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=CB7EE257D3C4DDE48AA2AC402F2461756A464A432D5F0A945B68A395716177C5), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@b2ab8d1])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@b2ab8d1])
    SignalFlowHasStarted(flowId=[cb4a51ef-51af-43ec-a519-90f71239bb12])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@b2ab8d1]
    []


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.389Z
  Event: InitiateFlow(destination=O=InvestorB, L=TestCity, C=US, wellKnownParty=O=InvestorB, L=TestCity, C=US)
  Actions: 
    AddSessionBinding(flowId=[cb4a51ef-51af-43ec-a519-90f71239bb12], sessionId=SessionId(toLong=-2536924767445144842))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-2536924767445144842): 
    null
    Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2536924767445144842), additionalEntropy=5729983305720333538)
checkpoint.timestamp: 
    2021-04-15T13:36:45.286Z
    2021-04-15T13:36:45.389Z


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.389Z
  Event: InitiateFlow(destination=O=TIE, L=TestVillage, C=US, wellKnownParty=O=TIE, L=TestVillage, C=US)
  Actions: 
    AddSessionBinding(flowId=[cb4a51ef-51af-43ec-a519-90f71239bb12], sessionId=SessionId(toLong=-6344776333199307461))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-6344776333199307461): 
    null
    Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-6344776333199307461), additionalEntropy=-7407588496997707006)


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.390Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.389Z
    2021-04-15T13:36:45.390Z


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.391Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.390Z
    2021-04-15T13:36:45.391Z


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.407Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=C3D241D167EFEF5E9F169CA88BB1C0F35BD908913B3196551A7E894E9FC6AD7C}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=9C848DD1301FC9EF3D2A34F1B62610E85B7A25B9E70EC9667D547472D622223C, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[cb4a51ef-51af-43ec-a519-90f71239bb12], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=8eb46f22-19d5-4c14-b976-edc7eae92321, timestamp: 2021-04-15T13:36:45.285Z, entityType: Invocation, sessionId=8eb46f22-19d5-4c14-b976-edc7eae92321, timestamp: 2021-04-15T13:36:45.285Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=-2536924767445144842)=Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2536924767445144842), additionalEntropy=5729983305720333538), SessionId(toLong=-6344776333199307461)=Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-6344776333199307461), additionalEntropy=-7407588496997707006)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=C3D241D167EFEF5E9F169CA88BB1C0F35BD908913B3196551A7E894E9FC6AD7C}, shouldRetrySend=false), frozenFiber=9C848DD1301FC9EF3D2A34F1B62610E85B7A25B9E70EC9667D547472D622223C), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.flowIoRequest: 
    null
    SendAndReceive
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=CB7EE257D3C4DDE48AA2AC402F2461756A464A432D5F0A945B68A395716177C5)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=C3D241D167EFEF5E9F169CA88BB1C0F35BD908913B3196551A7E894E9FC6AD7C}, shouldRetrySend=false), frozenFiber=9C848DD1301FC9EF3D2A34F1B62610E85B7A25B9E70EC9667D547472D622223C)
checkpoint.timestamp: 
    2021-04-15T13:36:45.391Z
    2021-04-15T13:36:45.404Z
checkpoint.progressStep: 
    null
    Starting
isFlowResumed: 
    true
    false
numberOfCommits: 
    0
    2


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.414Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=TIE, L=TestVillage, C=US, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-6344776333199307461), initiationEntropy=-7407588496997707006, initiatorFlowClassName=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--6344776333199307461--7407588496997707006-1-0), senderUUID=e596a3cf-e663-4875-a4be-2c0760dfad19))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-6344776333199307461): 
    Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-6344776333199307461), additionalEntropy=-7407588496997707006)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--6344776333199307461--7407588496997707006)
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=C3D241D167EFEF5E9F169CA88BB1C0F35BD908913B3196551A7E894E9FC6AD7C}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))])
checkpoint.timestamp: 
    2021-04-15T13:36:45.404Z
    2021-04-15T13:36:45.408Z


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.485Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6344776333199307461), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=3432537001696079104), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7455c647, sender=O=TIE, L=TestVillage, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-6344776333199307461): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--6344776333199307461--7407588496997707006)
    Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3432537001696079104), deduplicationSeed=R--6344776333199307461--7407588496997707006)
checkpoint.timestamp: 
    2021-04-15T13:36:45.408Z
    2021-04-15T13:36:45.485Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7455c647]


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.485Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.493Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6344776333199307461), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5c514972, sender=O=TIE, L=TestVillage, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-6344776333199307461).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.485Z
    2021-04-15T13:36:45.493Z
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7455c647]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7455c647, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5c514972]


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.493Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-6344776333199307461).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.504Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=C3403D05D7DD861000C6AF2DBA05796A9ADCADC51C2BCFCD3774FBD973971F43}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=03BEC23863E661304C08A2EB4FDF9D59F9E0B0CA3F743119C027E7FBF31BBE4D, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[cb4a51ef-51af-43ec-a519-90f71239bb12], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=8eb46f22-19d5-4c14-b976-edc7eae92321, timestamp: 2021-04-15T13:36:45.285Z, entityType: Invocation, sessionId=8eb46f22-19d5-4c14-b976-edc7eae92321, timestamp: 2021-04-15T13:36:45.285Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=-2536924767445144842)=Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2536924767445144842), additionalEntropy=5729983305720333538), SessionId(toLong=-6344776333199307461)=Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3432537001696079104), deduplicationSeed=R--6344776333199307461--7407588496997707006)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=C3403D05D7DD861000C6AF2DBA05796A9ADCADC51C2BCFCD3774FBD973971F43}, shouldRetrySend=false), frozenFiber=03BEC23863E661304C08A2EB4FDF9D59F9E0B0CA3F743119C027E7FBF31BBE4D), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7455c647, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5c514972])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7455c647, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5c514972])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))])
    SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=C3403D05D7DD861000C6AF2DBA05796A9ADCADC51C2BCFCD3774FBD973971F43}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    9C848DD1301FC9EF3D2A34F1B62610E85B7A25B9E70EC9667D547472D622223C
    03BEC23863E661304C08A2EB4FDF9D59F9E0B0CA3F743119C027E7FBF31BBE4D
checkpoint.timestamp: 
    2021-04-15T13:36:45.493Z
    2021-04-15T13:36:45.502Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    2
    3
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7455c647, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5c514972]
    []


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.505Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=TIE, L=TestVillage, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3432537001696079104), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--6344776333199307461--7407588496997707006-2-0), senderUUID=e596a3cf-e663-4875-a4be-2c0760dfad19))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=C3403D05D7DD861000C6AF2DBA05796A9ADCADC51C2BCFCD3774FBD973971F43}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))])
checkpoint.timestamp: 
    2021-04-15T13:36:45.502Z
    2021-04-15T13:36:45.505Z


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.549Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6344776333199307461), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6194a514, sender=O=TIE, L=TestVillage, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-6344776333199307461).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.505Z
    2021-04-15T13:36:45.549Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6194a514]


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.549Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-6344776333199307461).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.558Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=C687857DD9A0316CF14E69499836A18FB8C3E905CF6C3644E16DFF30D4EB0C4B}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=EC56036F145DEA030B7955F47E063F569BD9FDAB57B1F92BFB52D90A3D7B76D6, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[cb4a51ef-51af-43ec-a519-90f71239bb12], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=8eb46f22-19d5-4c14-b976-edc7eae92321, timestamp: 2021-04-15T13:36:45.285Z, entityType: Invocation, sessionId=8eb46f22-19d5-4c14-b976-edc7eae92321, timestamp: 2021-04-15T13:36:45.285Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=-2536924767445144842)=Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2536924767445144842), additionalEntropy=5729983305720333538), SessionId(toLong=-6344776333199307461)=Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3432537001696079104), deduplicationSeed=R--6344776333199307461--7407588496997707006)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=C687857DD9A0316CF14E69499836A18FB8C3E905CF6C3644E16DFF30D4EB0C4B}, shouldRetrySend=false), frozenFiber=EC56036F145DEA030B7955F47E063F569BD9FDAB57B1F92BFB52D90A3D7B76D6), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6194a514])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6194a514])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))])
    SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=C687857DD9A0316CF14E69499836A18FB8C3E905CF6C3644E16DFF30D4EB0C4B}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    03BEC23863E661304C08A2EB4FDF9D59F9E0B0CA3F743119C027E7FBF31BBE4D
    EC56036F145DEA030B7955F47E063F569BD9FDAB57B1F92BFB52D90A3D7B76D6
checkpoint.timestamp: 
    2021-04-15T13:36:45.549Z
    2021-04-15T13:36:45.556Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    3
    4
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6194a514]
    []


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.560Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=TIE, L=TestVillage, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3432537001696079104), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--6344776333199307461--7407588496997707006-3-0), senderUUID=e596a3cf-e663-4875-a4be-2c0760dfad19))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=C687857DD9A0316CF14E69499836A18FB8C3E905CF6C3644E16DFF30D4EB0C4B}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))])
checkpoint.timestamp: 
    2021-04-15T13:36:45.556Z
    2021-04-15T13:36:45.559Z


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.735Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6344776333199307461), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3f2665c7, sender=O=TIE, L=TestVillage, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-6344776333199307461).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.559Z
    2021-04-15T13:36:45.734Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3f2665c7]


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.735Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-6344776333199307461).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
checkpoint.timestamp: 
    2021-04-15T13:36:45.734Z
    2021-04-15T13:36:45.735Z
isFlowResumed: 
    false
    true


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.735Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.741Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=E425C309A1357CCF62910A44A04025834E9507775307AE0842D86ACADC932197}), maySkipCheckpoint=false, fiber=B2226A8471A38912042E8C358DFD5024A54220560751D346B3B4FF115480844A, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[cb4a51ef-51af-43ec-a519-90f71239bb12], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=8eb46f22-19d5-4c14-b976-edc7eae92321, timestamp: 2021-04-15T13:36:45.285Z, entityType: Invocation, sessionId=8eb46f22-19d5-4c14-b976-edc7eae92321, timestamp: 2021-04-15T13:36:45.285Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=-2536924767445144842)=Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2536924767445144842), additionalEntropy=5729983305720333538), SessionId(toLong=-6344776333199307461)=Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3432537001696079104), deduplicationSeed=R--6344776333199307461--7407588496997707006)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=E425C309A1357CCF62910A44A04025834E9507775307AE0842D86ACADC932197}), frozenFiber=B2226A8471A38912042E8C358DFD5024A54220560751D346B3B4FF115480844A), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3f2665c7])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3f2665c7])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.checkpointState.numberOfCommits: 
    4
    5
checkpoint.flowIoRequest: 
    SendAndReceive
    Send
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=E425C309A1357CCF62910A44A04025834E9507775307AE0842D86ACADC932197})
checkpoint.flowState.frozenFiber.hash: 
    EC56036F145DEA030B7955F47E063F569BD9FDAB57B1F92BFB52D90A3D7B76D6
    B2226A8471A38912042E8C358DFD5024A54220560751D346B3B4FF115480844A
checkpoint.timestamp: 
    2021-04-15T13:36:45.735Z
    2021-04-15T13:36:45.739Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    4
    5
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3f2665c7]
    []


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.742Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=TIE, L=TestVillage, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3432537001696079104), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--6344776333199307461--7407588496997707006-4-0), senderUUID=e596a3cf-e663-4875-a4be-2c0760dfad19))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.749Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))]), maySkipCheckpoint=false, fiber=48C92BC34B2A825CC58048D9E6D7D2D06E1D4CFDA97B84AC39EDFE5AE4D93031, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[cb4a51ef-51af-43ec-a519-90f71239bb12], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=8eb46f22-19d5-4c14-b976-edc7eae92321, timestamp: 2021-04-15T13:36:45.285Z, entityType: Invocation, sessionId=8eb46f22-19d5-4c14-b976-edc7eae92321, timestamp: 2021-04-15T13:36:45.285Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=-2536924767445144842)=Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2536924767445144842), additionalEntropy=5729983305720333538), SessionId(toLong=-6344776333199307461)=Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3432537001696079104), deduplicationSeed=R--6344776333199307461--7407588496997707006)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))]), frozenFiber=48C92BC34B2A825CC58048D9E6D7D2D06E1D4CFDA97B84AC39EDFE5AE4D93031), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.checkpointState.numberOfCommits: 
    5
    6
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=E425C309A1357CCF62910A44A04025834E9507775307AE0842D86ACADC932197})
    Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))])
checkpoint.flowState.frozenFiber.hash: 
    B2226A8471A38912042E8C358DFD5024A54220560751D346B3B4FF115480844A
    48C92BC34B2A825CC58048D9E6D7D2D06E1D4CFDA97B84AC39EDFE5AE4D93031
checkpoint.timestamp: 
    2021-04-15T13:36:45.742Z
    2021-04-15T13:36:45.746Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    5
    6


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.749Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.913Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6344776333199307461), payload=ErrorSessionMessage(flowException=null, errorId=778635719191990208)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@d44ad02, sender=O=TIE, L=TestVillage, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-6344776333199307461).receivedMessages: 
    []
    [ErrorSessionMessage(flowException=null, errorId=778635719191990208)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.749Z
    2021-04-15T13:36:45.913Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@d44ad02]


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.914Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-6344776333199307461).otherSideErrored: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-6344776333199307461).receivedMessages: 
    [ErrorSessionMessage(flowException=null, errorId=778635719191990208)]
    []
checkpoint.timestamp: 
    2021-04-15T13:36:45.913Z
    2021-04-15T13:36:45.914Z
isFlowResumed: 
    false
    true


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.915Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.914Z
    2021-04-15T13:36:45.915Z


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.917Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=778635719191990208, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.918Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.918Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:36:45.915Z
    2021-04-15T13:36:45.918Z
 {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=cb4a51ef-51af-43ec-a519-90f71239bb12, invocation_id=8eb46f22-19d5-4c14-b976-edc7eae92321, invocation_timestamp=2021-04-15T13:36:45.285Z, origin=Only For Testing, session_id=8eb46f22-19d5-4c14-b976-edc7eae92321, session_timestamp=2021-04-15T13:36:45.285Z, thread-id=649}
[WARN ] 2021-04-15T13:36:45,937Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [cb4a51ef-51af-43ec-a519-90f71239bb12] error {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=cb4a51ef-51af-43ec-a519-90f71239bb12, invocation_id=8eb46f22-19d5-4c14-b976-edc7eae92321, invocation_timestamp=2021-04-15T13:36:45.285Z, origin=Only For Testing, session_id=8eb46f22-19d5-4c14-b976-edc7eae92321, session_timestamp=2021-04-15T13:36:45.285Z, thread-id=649}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=TIE, L=TestVillage, C=US.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:574) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:67) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:29) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[WARN ] 2021-04-15T13:36:45,937Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=cb4a51ef-51af-43ec-a519-90f71239bb12, invocation_id=8eb46f22-19d5-4c14-b976-edc7eae92321, invocation_timestamp=2021-04-15T13:36:45.285Z, origin=Only For Testing, session_id=8eb46f22-19d5-4c14-b976-edc7eae92321, session_timestamp=2021-04-15T13:36:45.285Z, thread-id=649}
[WARN ] 2021-04-15T13:36:45,957Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [cb4a51ef-51af-43ec-a519-90f71239bb12] errored, dumping all transitions:

 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.289Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[cb4a51ef-51af-43ec-a519-90f71239bb12], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=8eb46f22-19d5-4c14-b976-edc7eae92321, timestamp: 2021-04-15T13:36:45.285Z, entityType: Invocation, sessionId=8eb46f22-19d5-4c14-b976-edc7eae92321, timestamp: 2021-04-15T13:36:45.285Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=CB7EE257D3C4DDE48AA2AC402F2461756A464A432D5F0A945B68A395716177C5), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@b2ab8d1])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@b2ab8d1])
    SignalFlowHasStarted(flowId=[cb4a51ef-51af-43ec-a519-90f71239bb12])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@b2ab8d1]
    []


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.389Z
  Event: InitiateFlow(destination=O=InvestorB, L=TestCity, C=US, wellKnownParty=O=InvestorB, L=TestCity, C=US)
  Actions: 
    AddSessionBinding(flowId=[cb4a51ef-51af-43ec-a519-90f71239bb12], sessionId=SessionId(toLong=-2536924767445144842))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-2536924767445144842): 
    null
    Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2536924767445144842), additionalEntropy=5729983305720333538)
checkpoint.timestamp: 
    2021-04-15T13:36:45.286Z
    2021-04-15T13:36:45.389Z


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.389Z
  Event: InitiateFlow(destination=O=TIE, L=TestVillage, C=US, wellKnownParty=O=TIE, L=TestVillage, C=US)
  Actions: 
    AddSessionBinding(flowId=[cb4a51ef-51af-43ec-a519-90f71239bb12], sessionId=SessionId(toLong=-6344776333199307461))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-6344776333199307461): 
    null
    Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-6344776333199307461), additionalEntropy=-7407588496997707006)


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.390Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.389Z
    2021-04-15T13:36:45.390Z


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.391Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.390Z
    2021-04-15T13:36:45.391Z


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.407Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=C3D241D167EFEF5E9F169CA88BB1C0F35BD908913B3196551A7E894E9FC6AD7C}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=9C848DD1301FC9EF3D2A34F1B62610E85B7A25B9E70EC9667D547472D622223C, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[cb4a51ef-51af-43ec-a519-90f71239bb12], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=8eb46f22-19d5-4c14-b976-edc7eae92321, timestamp: 2021-04-15T13:36:45.285Z, entityType: Invocation, sessionId=8eb46f22-19d5-4c14-b976-edc7eae92321, timestamp: 2021-04-15T13:36:45.285Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=-2536924767445144842)=Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2536924767445144842), additionalEntropy=5729983305720333538), SessionId(toLong=-6344776333199307461)=Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-6344776333199307461), additionalEntropy=-7407588496997707006)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=C3D241D167EFEF5E9F169CA88BB1C0F35BD908913B3196551A7E894E9FC6AD7C}, shouldRetrySend=false), frozenFiber=9C848DD1301FC9EF3D2A34F1B62610E85B7A25B9E70EC9667D547472D622223C), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.flowIoRequest: 
    null
    SendAndReceive
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=CB7EE257D3C4DDE48AA2AC402F2461756A464A432D5F0A945B68A395716177C5)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=C3D241D167EFEF5E9F169CA88BB1C0F35BD908913B3196551A7E894E9FC6AD7C}, shouldRetrySend=false), frozenFiber=9C848DD1301FC9EF3D2A34F1B62610E85B7A25B9E70EC9667D547472D622223C)
checkpoint.timestamp: 
    2021-04-15T13:36:45.391Z
    2021-04-15T13:36:45.404Z
checkpoint.progressStep: 
    null
    Starting
isFlowResumed: 
    true
    false
numberOfCommits: 
    0
    2


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.414Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=TIE, L=TestVillage, C=US, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-6344776333199307461), initiationEntropy=-7407588496997707006, initiatorFlowClassName=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--6344776333199307461--7407588496997707006-1-0), senderUUID=e596a3cf-e663-4875-a4be-2c0760dfad19))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-6344776333199307461): 
    Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-6344776333199307461), additionalEntropy=-7407588496997707006)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--6344776333199307461--7407588496997707006)
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=C3D241D167EFEF5E9F169CA88BB1C0F35BD908913B3196551A7E894E9FC6AD7C}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))])
checkpoint.timestamp: 
    2021-04-15T13:36:45.404Z
    2021-04-15T13:36:45.408Z


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.485Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6344776333199307461), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=3432537001696079104), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7455c647, sender=O=TIE, L=TestVillage, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-6344776333199307461): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--6344776333199307461--7407588496997707006)
    Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3432537001696079104), deduplicationSeed=R--6344776333199307461--7407588496997707006)
checkpoint.timestamp: 
    2021-04-15T13:36:45.408Z
    2021-04-15T13:36:45.485Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7455c647]


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.485Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.493Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6344776333199307461), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5c514972, sender=O=TIE, L=TestVillage, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-6344776333199307461).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.485Z
    2021-04-15T13:36:45.493Z
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7455c647]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7455c647, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5c514972]


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.493Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-6344776333199307461).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.504Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=C3403D05D7DD861000C6AF2DBA05796A9ADCADC51C2BCFCD3774FBD973971F43}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=03BEC23863E661304C08A2EB4FDF9D59F9E0B0CA3F743119C027E7FBF31BBE4D, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[cb4a51ef-51af-43ec-a519-90f71239bb12], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=8eb46f22-19d5-4c14-b976-edc7eae92321, timestamp: 2021-04-15T13:36:45.285Z, entityType: Invocation, sessionId=8eb46f22-19d5-4c14-b976-edc7eae92321, timestamp: 2021-04-15T13:36:45.285Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=-2536924767445144842)=Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2536924767445144842), additionalEntropy=5729983305720333538), SessionId(toLong=-6344776333199307461)=Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3432537001696079104), deduplicationSeed=R--6344776333199307461--7407588496997707006)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=C3403D05D7DD861000C6AF2DBA05796A9ADCADC51C2BCFCD3774FBD973971F43}, shouldRetrySend=false), frozenFiber=03BEC23863E661304C08A2EB4FDF9D59F9E0B0CA3F743119C027E7FBF31BBE4D), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7455c647, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5c514972])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7455c647, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5c514972])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))])
    SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=C3403D05D7DD861000C6AF2DBA05796A9ADCADC51C2BCFCD3774FBD973971F43}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    9C848DD1301FC9EF3D2A34F1B62610E85B7A25B9E70EC9667D547472D622223C
    03BEC23863E661304C08A2EB4FDF9D59F9E0B0CA3F743119C027E7FBF31BBE4D
checkpoint.timestamp: 
    2021-04-15T13:36:45.493Z
    2021-04-15T13:36:45.502Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    2
    3
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7455c647, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5c514972]
    []


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.505Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=TIE, L=TestVillage, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3432537001696079104), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--6344776333199307461--7407588496997707006-2-0), senderUUID=e596a3cf-e663-4875-a4be-2c0760dfad19))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=C3403D05D7DD861000C6AF2DBA05796A9ADCADC51C2BCFCD3774FBD973971F43}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))])
checkpoint.timestamp: 
    2021-04-15T13:36:45.502Z
    2021-04-15T13:36:45.505Z


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.549Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6344776333199307461), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6194a514, sender=O=TIE, L=TestVillage, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-6344776333199307461).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.505Z
    2021-04-15T13:36:45.549Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6194a514]


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.549Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-6344776333199307461).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.558Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=C687857DD9A0316CF14E69499836A18FB8C3E905CF6C3644E16DFF30D4EB0C4B}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=EC56036F145DEA030B7955F47E063F569BD9FDAB57B1F92BFB52D90A3D7B76D6, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[cb4a51ef-51af-43ec-a519-90f71239bb12], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=8eb46f22-19d5-4c14-b976-edc7eae92321, timestamp: 2021-04-15T13:36:45.285Z, entityType: Invocation, sessionId=8eb46f22-19d5-4c14-b976-edc7eae92321, timestamp: 2021-04-15T13:36:45.285Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=-2536924767445144842)=Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2536924767445144842), additionalEntropy=5729983305720333538), SessionId(toLong=-6344776333199307461)=Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3432537001696079104), deduplicationSeed=R--6344776333199307461--7407588496997707006)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=C687857DD9A0316CF14E69499836A18FB8C3E905CF6C3644E16DFF30D4EB0C4B}, shouldRetrySend=false), frozenFiber=EC56036F145DEA030B7955F47E063F569BD9FDAB57B1F92BFB52D90A3D7B76D6), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6194a514])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6194a514])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))])
    SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=C687857DD9A0316CF14E69499836A18FB8C3E905CF6C3644E16DFF30D4EB0C4B}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    03BEC23863E661304C08A2EB4FDF9D59F9E0B0CA3F743119C027E7FBF31BBE4D
    EC56036F145DEA030B7955F47E063F569BD9FDAB57B1F92BFB52D90A3D7B76D6
checkpoint.timestamp: 
    2021-04-15T13:36:45.549Z
    2021-04-15T13:36:45.556Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    3
    4
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6194a514]
    []


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.560Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=TIE, L=TestVillage, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3432537001696079104), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--6344776333199307461--7407588496997707006-3-0), senderUUID=e596a3cf-e663-4875-a4be-2c0760dfad19))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=C687857DD9A0316CF14E69499836A18FB8C3E905CF6C3644E16DFF30D4EB0C4B}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))])
checkpoint.timestamp: 
    2021-04-15T13:36:45.556Z
    2021-04-15T13:36:45.559Z


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.735Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6344776333199307461), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3f2665c7, sender=O=TIE, L=TestVillage, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-6344776333199307461).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.559Z
    2021-04-15T13:36:45.734Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3f2665c7]


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.735Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-6344776333199307461).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []
checkpoint.timestamp: 
    2021-04-15T13:36:45.734Z
    2021-04-15T13:36:45.735Z
isFlowResumed: 
    false
    true


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.735Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.741Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=E425C309A1357CCF62910A44A04025834E9507775307AE0842D86ACADC932197}), maySkipCheckpoint=false, fiber=B2226A8471A38912042E8C358DFD5024A54220560751D346B3B4FF115480844A, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[cb4a51ef-51af-43ec-a519-90f71239bb12], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=8eb46f22-19d5-4c14-b976-edc7eae92321, timestamp: 2021-04-15T13:36:45.285Z, entityType: Invocation, sessionId=8eb46f22-19d5-4c14-b976-edc7eae92321, timestamp: 2021-04-15T13:36:45.285Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=-2536924767445144842)=Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2536924767445144842), additionalEntropy=5729983305720333538), SessionId(toLong=-6344776333199307461)=Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3432537001696079104), deduplicationSeed=R--6344776333199307461--7407588496997707006)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=E425C309A1357CCF62910A44A04025834E9507775307AE0842D86ACADC932197}), frozenFiber=B2226A8471A38912042E8C358DFD5024A54220560751D346B3B4FF115480844A), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3f2665c7])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3f2665c7])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.checkpointState.numberOfCommits: 
    4
    5
checkpoint.flowIoRequest: 
    SendAndReceive
    Send
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=E425C309A1357CCF62910A44A04025834E9507775307AE0842D86ACADC932197})
checkpoint.flowState.frozenFiber.hash: 
    EC56036F145DEA030B7955F47E063F569BD9FDAB57B1F92BFB52D90A3D7B76D6
    B2226A8471A38912042E8C358DFD5024A54220560751D346B3B4FF115480844A
checkpoint.timestamp: 
    2021-04-15T13:36:45.735Z
    2021-04-15T13:36:45.739Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    4
    5
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3f2665c7]
    []


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.742Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=TIE, L=TestVillage, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3432537001696079104), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--6344776333199307461--7407588496997707006-4-0), senderUUID=e596a3cf-e663-4875-a4be-2c0760dfad19))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.749Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))]), maySkipCheckpoint=false, fiber=48C92BC34B2A825CC58048D9E6D7D2D06E1D4CFDA97B84AC39EDFE5AE4D93031, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[cb4a51ef-51af-43ec-a519-90f71239bb12], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=8eb46f22-19d5-4c14-b976-edc7eae92321, timestamp: 2021-04-15T13:36:45.285Z, entityType: Invocation, sessionId=8eb46f22-19d5-4c14-b976-edc7eae92321, timestamp: 2021-04-15T13:36:45.285Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=-2536924767445144842)=Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2536924767445144842), additionalEntropy=5729983305720333538), SessionId(toLong=-6344776333199307461)=Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3432537001696079104), deduplicationSeed=R--6344776333199307461--7407588496997707006)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))]), frozenFiber=48C92BC34B2A825CC58048D9E6D7D2D06E1D4CFDA97B84AC39EDFE5AE4D93031), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.checkpointState.numberOfCommits: 
    5
    6
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))=E425C309A1357CCF62910A44A04025834E9507775307AE0842D86ACADC932197})
    Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))])
checkpoint.flowState.frozenFiber.hash: 
    B2226A8471A38912042E8C358DFD5024A54220560751D346B3B4FF115480844A
    48C92BC34B2A825CC58048D9E6D7D2D06E1D4CFDA97B84AC39EDFE5AE4D93031
checkpoint.timestamp: 
    2021-04-15T13:36:45.742Z
    2021-04-15T13:36:45.746Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    5
    6


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.749Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.913Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6344776333199307461), payload=ErrorSessionMessage(flowException=null, errorId=778635719191990208)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@d44ad02, sender=O=TIE, L=TestVillage, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-6344776333199307461).receivedMessages: 
    []
    [ErrorSessionMessage(flowException=null, errorId=778635719191990208)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.749Z
    2021-04-15T13:36:45.913Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@d44ad02]


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.914Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-6344776333199307461).otherSideErrored: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-6344776333199307461).receivedMessages: 
    [ErrorSessionMessage(flowException=null, errorId=778635719191990208)]
    []
checkpoint.timestamp: 
    2021-04-15T13:36:45.913Z
    2021-04-15T13:36:45.914Z
isFlowResumed: 
    false
    true


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.915Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2021-04-15T13:36:45.914Z
    2021-04-15T13:36:45.915Z


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.917Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=778635719191990208, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.918Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.918Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:36:45.915Z
    2021-04-15T13:36:45.918Z


 --- Transition of flow [cb4a51ef-51af-43ec-a519-90f71239bb12] ---
  Timestamp: 2021-04-15T13:36:45.943Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=778635719191990208)], sessions=[], senderUUID=e596a3cf-e663-4875-a4be-2c0760dfad19)
    CreateTransaction
    RemoveCheckpoint(id=[cb4a51ef-51af-43ec-a519-90f71239bb12], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@d44ad02])
    ReleaseSoftLocks(uuid=cb4a51ef-51af-43ec-a519-90f71239bb12)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@d44ad02])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-2536924767445144842), SessionId(toLong=-6344776333199307461)])
    RemoveFlow(flowId=[cb4a51ef-51af-43ec-a519-90f71239bb12], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=778635719191990208, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=8eb46f22-19d5-4c14-b976-edc7eae92321, timestamp: 2021-04-15T13:36:45.285Z, entityType: Invocation, sessionId=8eb46f22-19d5-4c14-b976-edc7eae92321, timestamp: 2021-04-15T13:36:45.285Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=-2536924767445144842)=Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2536924767445144842), additionalEntropy=5729983305720333538), SessionId(toLong=-6344776333199307461)=Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=3432537001696079104), deduplicationSeed=R--6344776333199307461--7407588496997707006)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=0A0BBB6E89B5322477D26B2F22157CD1FD9D707D2AC5F5848C7ED418CF6E71B3), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=7), flowState=net.corda.node.services.statemachine.FlowState$Finished@5c3d4d6c, errorState=Errored(errors=[FlowError(errorId=778635719191990208, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator@3550dab2, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, senderUUID=e596a3cf-e663-4875-a4be-2c0760dfad19, reloadCheckpointAfterSuspendCount=null, numberOfCommits=7, lock=java.util.concurrent.Semaphore@54717e3[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.checkpointState.numberOfCommits: 
    6
    7
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-6344776333199307461))]), frozenFiber=48C92BC34B2A825CC58048D9E6D7D2D06E1D4CFDA97B84AC39EDFE5AE4D93031)
    net.corda.node.services.statemachine.FlowState$Finished@5c3d4d6c
checkpoint.timestamp: 
    2021-04-15T13:36:45.918Z
    2021-04-15T13:36:45.937Z
checkpoint.status: 
    RUNNABLE
    FAILED
numberOfCommits: 
    6
    7
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@d44ad02]
    []
isRemoved: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=cb4a51ef-51af-43ec-a519-90f71239bb12, invocation_id=8eb46f22-19d5-4c14-b976-edc7eae92321, invocation_timestamp=2021-04-15T13:36:45.285Z, origin=Only For Testing, session_id=8eb46f22-19d5-4c14-b976-edc7eae92321, session_timestamp=2021-04-15T13:36:45.285Z, thread-id=649}
[WARN ] 2021-04-15T13:36:45,957Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [cb4a51ef-51af-43ec-a519-90f71239bb12] error {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=cb4a51ef-51af-43ec-a519-90f71239bb12, invocation_id=8eb46f22-19d5-4c14-b976-edc7eae92321, invocation_timestamp=2021-04-15T13:36:45.285Z, origin=Only For Testing, session_id=8eb46f22-19d5-4c14-b976-edc7eae92321, session_timestamp=2021-04-15T13:36:45.285Z, thread-id=649}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=TIE, L=TestVillage, C=US.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:574) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:67) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:29) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[INFO ] 2021-04-15T13:36:45,994Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2021-04-15T13:36:46,046Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:36:46,046Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:36:46,054Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2021-04-15T13:36:46,087Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:36:46,087Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:36:46,095Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2021-04-15T13:36:46,144Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:36:46,144Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:36:46,152Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2021-04-15T13:36:46,166Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:36:46,166Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:39:29,364Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/peterli/Desktop/tokenTest/workflows ... {}
[INFO ] 2021-04-15T13:39:29,578Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:39:31,125Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2021-04-15T13:39:32,151Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2021-04-15T13:39:32,173Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2021-04-15T13:39:32,174Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:39:32,908Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:39:32,931Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2021-04-15T13:39:33,530Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:39:33,540Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:39:33,540Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2021-04-15T13:39:33,774Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:39:33,796Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:39:34,491Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2021-04-15T13:39:35,409Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:39:35,420Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2021-04-15T13:39:35,452Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:39:35,453Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2021-04-15T13:39:35,453Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:39:36,327Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:39:36,327Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2021-04-15T13:39:36,466Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:39:36,466Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2021-04-15T13:39:36,500Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:39:36,500Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2021-04-15T13:39:36,620Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:39:36,631Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:39:36,773Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:39:36,814Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:39:36,878Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2021-04-15T13:39:37,158Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:39:37,158Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2021-04-15T13:39:37,158Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:39:37,180Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2021-04-15T13:39:37,180Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:39:37,223Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:39:37,223Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2021-04-15T13:39:37,235Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:39:37,235Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2021-04-15T13:39:37,236Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:39:37,236Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:39:37,247Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2021-04-15T13:39:37,358Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:39:37,358Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:39:37,369Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:39:37,369Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:39:37,369Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:39:37,369Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:39:37,380Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:39:37,380Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:39:37,380Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:39:37,380Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:39:37,381Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2021-04-15T13:39:37,412Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:39:37,412Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:39:37,425Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2021-04-15T13:39:37,465Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:39:37,466Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2021-04-15T13:39:37,466Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:39:37,466Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2021-04-15T13:39:37,466Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:39:37,478Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:39:37,478Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2021-04-15T13:39:37,500Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:39:37,500Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2021-04-15T13:39:37,500Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:39:37,500Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:39:37,500Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2021-04-15T13:39:37,542Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:39:37,542Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:39:37,542Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:39:37,542Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:39:37,542Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:39:37,543Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:39:37,543Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:39:37,543Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:39:37,543Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:39:37,543Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:39:37,543Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:39:37,543Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:39:37,543Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2021-04-15T13:39:39,312Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:39:39,325Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:39:39,325Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2021-04-15T13:39:39,325Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:39:39,327Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:39:39,337Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/peterli/Desktop/tokenTest/.gradle {}
[INFO ] 2021-04-15T13:39:39,337Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:39:39,360Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2021-04-15T13:39:44,550Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/0/cordapps] {}
[INFO ] 2021-04-15T13:39:44,560Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:39:44,573Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:39:44,683Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:39:44,699Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:39:44,751Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:39:46,350Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:39:46,620Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:39:46,686Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:39:46,705Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:39:46,710Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLG3Vw6KipnWE6FS8kByfSKn2FoQhoDmrqdSj2EJmjtgYq, alias: identity-private-key {}
[INFO ] 2021-04-15T13:39:46,866Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:39:46,867Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:39:46,871Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:39:46,872Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:39:46,872Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:39:46,873Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:39:46,873Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:39:46,874Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:39:46,874Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:39:46,874Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:39:46,875Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:39:46,875Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:39:46,876Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:39:46,877Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:39:46,877Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:39:46,909Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:39:47,004Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:39:25.077Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:39:52,779Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:39:52,862Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-04-15T13:39:52,869Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-04-15T13:39:56,024Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-04-15T13:39:56,496Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:39:56,508Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618493996496), owningKey=DLG3Vw6KipnWE6FS8kByfSKn2FoQhoDmrqdSj2EJmjtgYq {}
[INFO ] 2021-04-15T13:39:56,508Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:39:56,736Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618493996496) {}
[INFO ] 2021-04-15T13:39:56,820Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:39:56,861Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:39:56,863Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:39:56,911Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618493996496), owningKey=DLG3Vw6KipnWE6FS8kByfSKn2FoQhoDmrqdSj2EJmjtgYq {}
[INFO ] 2021-04-15T13:39:56,912Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:39:57,044Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:39:57,076Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:39:57,094Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:39:57,109Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:39:57,214Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:39:57,315Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:39:57,315Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-04-15T13:39:58,251Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618493996496) {}
[INFO ] 2021-04-15T13:39:58,265Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618493996496), owningKey=DLG3Vw6KipnWE6FS8kByfSKn2FoQhoDmrqdSj2EJmjtgYq {}
[INFO ] 2021-04-15T13:39:58,265Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:39:58,265Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618493996496), owningKey=DLG3Vw6KipnWE6FS8kByfSKn2FoQhoDmrqdSj2EJmjtgYq {}
[INFO ] 2021-04-15T13:39:58,265Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:39:58,279Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/1/cordapps] {}
[INFO ] 2021-04-15T13:39:58,279Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:39:58,280Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:39:58,291Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:39:58,298Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:39:58,310Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:39:58,364Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:39:58,366Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:39:58,367Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:39:58,419Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:39:58,419Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL6s9H2JzeiDAAi5A9sX6Wgn1eCvjtKVd9BZsDZgusDYMt, alias: identity-private-key {}
[INFO ] 2021-04-15T13:39:58,427Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:39:58,427Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:39:58,427Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:39:58,428Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:39:58,428Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:39:58,428Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:39:58,428Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:39:58,428Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:39:58,428Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:39:58,429Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:39:58,429Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:39:58,429Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:39:58,429Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:39:58,429Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:39:58,429Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:39:58,429Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:39:58,435Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:39:25.077Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:39:59,280Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:39:59,282Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:39:59,282Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:39:59,506Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:39:59,512Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:39:59,517Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618493999512), owningKey=DL6s9H2JzeiDAAi5A9sX6Wgn1eCvjtKVd9BZsDZgusDYMt {}
[INFO ] 2021-04-15T13:39:59,517Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:39:59,529Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618493999512) {}
[INFO ] 2021-04-15T13:39:59,539Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:39:59,539Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:39:59,539Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:39:59,550Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618493999512), owningKey=DL6s9H2JzeiDAAi5A9sX6Wgn1eCvjtKVd9BZsDZgusDYMt {}
[INFO ] 2021-04-15T13:39:59,550Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:39:59,589Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:39:59,618Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:39:59,621Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:39:59,621Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:39:59,622Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:39:59,630Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:39:59,662Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618493999512) {}
[INFO ] 2021-04-15T13:39:59,666Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618493996496), owningKey=DLG3Vw6KipnWE6FS8kByfSKn2FoQhoDmrqdSj2EJmjtgYq {}
[INFO ] 2021-04-15T13:39:59,666Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:39:59,687Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618493999512), owningKey=DL6s9H2JzeiDAAi5A9sX6Wgn1eCvjtKVd9BZsDZgusDYMt {}
[INFO ] 2021-04-15T13:39:59,687Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:39:59,704Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618493999512), owningKey=DL6s9H2JzeiDAAi5A9sX6Wgn1eCvjtKVd9BZsDZgusDYMt {}
[INFO ] 2021-04-15T13:39:59,704Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:39:59,704Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618493999512), owningKey=DL6s9H2JzeiDAAi5A9sX6Wgn1eCvjtKVd9BZsDZgusDYMt {}
[INFO ] 2021-04-15T13:39:59,705Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:39:59,718Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/2/cordapps] {}
[INFO ] 2021-04-15T13:39:59,718Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:39:59,718Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:39:59,726Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:39:59,733Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:39:59,745Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:39:59,796Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:39:59,798Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:39:59,799Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:39:59,851Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:39:59,852Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLHBybvUcoUeK7EBb876o7Z2hYJFH8anDr386VSbmeR1VX, alias: identity-private-key {}
[INFO ] 2021-04-15T13:39:59,861Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:39:59,861Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:39:59,861Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:39:59,861Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:39:59,861Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:39:59,861Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:39:59,861Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:39:59,861Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:39:59,862Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:39:59,862Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:39:59,862Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:39:59,862Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:39:59,862Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:39:59,862Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:39:59,862Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:39:59,862Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:39:59,869Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:39:25.077Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:40:00,692Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:40:00,693Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:40:00,693Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:40:00,954Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:40:00,963Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:40:00,969Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494000963), owningKey=DLHBybvUcoUeK7EBb876o7Z2hYJFH8anDr386VSbmeR1VX {}
[INFO ] 2021-04-15T13:40:00,969Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:40:00,981Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494000963) {}
[INFO ] 2021-04-15T13:40:00,995Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:40:00,996Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:40:00,996Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:40:01,006Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494000963), owningKey=DLHBybvUcoUeK7EBb876o7Z2hYJFH8anDr386VSbmeR1VX {}
[INFO ] 2021-04-15T13:40:01,006Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:40:01,050Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:40:01,080Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:40:01,084Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:40:01,085Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:40:01,085Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:40:01,093Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:40:01,137Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494000963) {}
[INFO ] 2021-04-15T13:40:01,141Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618493996496), owningKey=DLG3Vw6KipnWE6FS8kByfSKn2FoQhoDmrqdSj2EJmjtgYq {}
[INFO ] 2021-04-15T13:40:01,141Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:40:01,164Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494000963), owningKey=DLHBybvUcoUeK7EBb876o7Z2hYJFH8anDr386VSbmeR1VX {}
[INFO ] 2021-04-15T13:40:01,164Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:40:01,199Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618493999512), owningKey=DL6s9H2JzeiDAAi5A9sX6Wgn1eCvjtKVd9BZsDZgusDYMt {}
[INFO ] 2021-04-15T13:40:01,199Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:40:01,214Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494000963), owningKey=DLHBybvUcoUeK7EBb876o7Z2hYJFH8anDr386VSbmeR1VX {}
[INFO ] 2021-04-15T13:40:01,214Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:40:01,226Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494000963), owningKey=DLHBybvUcoUeK7EBb876o7Z2hYJFH8anDr386VSbmeR1VX {}
[INFO ] 2021-04-15T13:40:01,226Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:40:01,226Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494000963), owningKey=DLHBybvUcoUeK7EBb876o7Z2hYJFH8anDr386VSbmeR1VX {}
[INFO ] 2021-04-15T13:40:01,226Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:40:01,242Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/3/cordapps] {}
[INFO ] 2021-04-15T13:40:01,243Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/3/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/3/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/3/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/3/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:40:01,243Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/3/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:40:01,253Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/3/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:40:01,260Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/3/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:40:01,271Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/3/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:40:01,321Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:40:01,322Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:40:01,324Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:40:01,363Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:40:01,363Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL6qvLRhiHMPLBMX57CzFr4318mhY5Tn1LkLhhV22E9UtQ, alias: identity-private-key {}
[INFO ] 2021-04-15T13:40:01,371Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:40:01,371Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:40:01,372Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:40:01,372Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:40:01,372Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:40:01,372Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:40:01,372Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:40:01,372Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:40:01,372Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:40:01,372Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:40:01,372Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:40:01,372Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:40:01,373Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:40:01,373Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:40:01,373Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:40:01,373Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:40:01,377Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:39:25.077Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:40:02,089Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:40:02,090Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:40:02,090Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:40:02,274Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:40:02,281Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:40:02,286Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494002281), owningKey=DL6qvLRhiHMPLBMX57CzFr4318mhY5Tn1LkLhhV22E9UtQ {}
[INFO ] 2021-04-15T13:40:02,286Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:40:02,295Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494002281) {}
[INFO ] 2021-04-15T13:40:02,307Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:40:02,308Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:40:02,308Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:40:02,317Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494002281), owningKey=DL6qvLRhiHMPLBMX57CzFr4318mhY5Tn1LkLhhV22E9UtQ {}
[INFO ] 2021-04-15T13:40:02,317Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:40:02,357Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:40:02,388Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:40:02,393Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:40:02,393Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-133927.977-52FE98802A10AA39/nodes/3/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:40:02,394Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:40:02,402Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:40:02,431Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494002281) {}
[INFO ] 2021-04-15T13:40:02,435Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618493996496), owningKey=DLG3Vw6KipnWE6FS8kByfSKn2FoQhoDmrqdSj2EJmjtgYq {}
[INFO ] 2021-04-15T13:40:02,435Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:40:02,454Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494002281), owningKey=DL6qvLRhiHMPLBMX57CzFr4318mhY5Tn1LkLhhV22E9UtQ {}
[INFO ] 2021-04-15T13:40:02,454Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:40:02,476Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618493999512), owningKey=DL6s9H2JzeiDAAi5A9sX6Wgn1eCvjtKVd9BZsDZgusDYMt {}
[INFO ] 2021-04-15T13:40:02,476Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:40:02,491Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494002281), owningKey=DL6qvLRhiHMPLBMX57CzFr4318mhY5Tn1LkLhhV22E9UtQ {}
[INFO ] 2021-04-15T13:40:02,491Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:40:02,507Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494000963), owningKey=DLHBybvUcoUeK7EBb876o7Z2hYJFH8anDr386VSbmeR1VX {}
[INFO ] 2021-04-15T13:40:02,507Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:40:02,522Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494002281), owningKey=DL6qvLRhiHMPLBMX57CzFr4318mhY5Tn1LkLhhV22E9UtQ {}
[INFO ] 2021-04-15T13:40:02,522Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:40:02,538Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494002281), owningKey=DL6qvLRhiHMPLBMX57CzFr4318mhY5Tn1LkLhhV22E9UtQ {}
[INFO ] 2021-04-15T13:40:02,538Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:40:02,538Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494002281), owningKey=DL6qvLRhiHMPLBMX57CzFr4318mhY5Tn1LkLhhV22E9UtQ {}
[INFO ] 2021-04-15T13:40:02,538Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:40:03,394Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=e48d93ee-e632-4876-9539-e5c8144d679a, invocation_id=e778f0d4-7d45-41d5-be6f-36a78ae2d10a, invocation_timestamp=2021-04-15T13:40:02.579Z, origin=Only For Testing, session_id=e778f0d4-7d45-41d5-be6f-36a78ae2d10a, session_timestamp=2021-04-15T13:40:02.579Z, thread-id=645, tx_id=472FDEA61BDA3D0D5B2F09E11B57597E9D0FA4BB93BC436B83BBBFD674A4B1EC}
[INFO ] 2021-04-15T13:40:03,394Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=e48d93ee-e632-4876-9539-e5c8144d679a, invocation_id=e778f0d4-7d45-41d5-be6f-36a78ae2d10a, invocation_timestamp=2021-04-15T13:40:02.579Z, origin=Only For Testing, session_id=e778f0d4-7d45-41d5-be6f-36a78ae2d10a, session_timestamp=2021-04-15T13:40:02.579Z, thread-id=645, tx_id=472FDEA61BDA3D0D5B2F09E11B57597E9D0FA4BB93BC436B83BBBFD674A4B1EC}
[INFO ] 2021-04-15T13:40:03,543Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=e48d93ee-e632-4876-9539-e5c8144d679a, invocation_id=e778f0d4-7d45-41d5-be6f-36a78ae2d10a, invocation_timestamp=2021-04-15T13:40:02.579Z, origin=Only For Testing, session_id=e778f0d4-7d45-41d5-be6f-36a78ae2d10a, session_timestamp=2021-04-15T13:40:02.579Z, thread-id=645, tx_id=472FDEA61BDA3D0D5B2F09E11B57597E9D0FA4BB93BC436B83BBBFD674A4B1EC}
[INFO ] 2021-04-15T13:40:03,543Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=e48d93ee-e632-4876-9539-e5c8144d679a, invocation_id=e778f0d4-7d45-41d5-be6f-36a78ae2d10a, invocation_timestamp=2021-04-15T13:40:02.579Z, origin=Only For Testing, session_id=e778f0d4-7d45-41d5-be6f-36a78ae2d10a, session_timestamp=2021-04-15T13:40:02.579Z, thread-id=645, tx_id=472FDEA61BDA3D0D5B2F09E11B57597E9D0FA4BB93BC436B83BBBFD674A4B1EC}
[INFO ] 2021-04-15T13:40:04,013Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary, L=London, C=GB. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=b6d425df-898a-4637-999c-8e237deadfde, invocation_id=dbe3f5cd-e72c-4ffa-98e3-86db00f0275c, invocation_timestamp=2021-04-15T13:40:03.651Z, origin=Only For Testing, session_id=dbe3f5cd-e72c-4ffa-98e3-86db00f0275c, session_timestamp=2021-04-15T13:40:03.651Z, thread-id=645, tx_id=ECACF56EA15ED1E9CF8A0E0174D985F3EBBAEF5ED0A72C5CFFE449D7BA665E3A}
[INFO ] 2021-04-15T13:40:04,151Z [Mock network] corda.flow. - Received a notarisation request for Tx [ECACF56EA15ED1E9CF8A0E0174D985F3EBBAEF5ED0A72C5CFFE449D7BA665E3A] from [O=InvestorA, L=TestLand, C=US] {fiber-id=10000003, flow-id=3414b4e5-81bf-428f-86fb-4e3319fb611b, invocation_id=be23f625-418f-447f-b84e-ba4e3c6e4819, invocation_timestamp=2021-04-15T13:40:04.114Z, origin=O=InvestorA, L=TestLand, C=US, session_id=be23f625-418f-447f-b84e-ba4e3c6e4819, session_timestamp=2021-04-15T13:40:04.114Z, thread-id=645}
[INFO ] 2021-04-15T13:40:04,894Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 0 input states and 1 references {}
[INFO ] 2021-04-15T13:40:04,934Z [Mock network] corda.flow. - Transaction [ECACF56EA15ED1E9CF8A0E0174D985F3EBBAEF5ED0A72C5CFFE449D7BA665E3A] successfully notarised, sending signature back to [O=InvestorA, L=TestLand, C=US] {fiber-id=10000003, flow-id=3414b4e5-81bf-428f-86fb-4e3319fb611b, invocation_id=be23f625-418f-447f-b84e-ba4e3c6e4819, invocation_timestamp=2021-04-15T13:40:04.114Z, origin=O=InvestorA, L=TestLand, C=US, session_id=be23f625-418f-447f-b84e-ba4e3c6e4819, session_timestamp=2021-04-15T13:40:04.114Z, thread-id=645}
[INFO ] 2021-04-15T13:40:04,993Z [Mock network] corda.flow. - Notary responded (O=Notary, L=London, C=GB). {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=b6d425df-898a-4637-999c-8e237deadfde, invocation_id=dbe3f5cd-e72c-4ffa-98e3-86db00f0275c, invocation_timestamp=2021-04-15T13:40:03.651Z, origin=Only For Testing, session_id=dbe3f5cd-e72c-4ffa-98e3-86db00f0275c, session_timestamp=2021-04-15T13:40:03.651Z, thread-id=645, tx_id=ECACF56EA15ED1E9CF8A0E0174D985F3EBBAEF5ED0A72C5CFFE449D7BA665E3A}
[INFO ] 2021-04-15T13:40:04,995Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=b6d425df-898a-4637-999c-8e237deadfde, invocation_id=dbe3f5cd-e72c-4ffa-98e3-86db00f0275c, invocation_timestamp=2021-04-15T13:40:03.651Z, origin=Only For Testing, session_id=dbe3f5cd-e72c-4ffa-98e3-86db00f0275c, session_timestamp=2021-04-15T13:40:03.651Z, thread-id=645, tx_id=ECACF56EA15ED1E9CF8A0E0174D985F3EBBAEF5ED0A72C5CFFE449D7BA665E3A}
[INFO ] 2021-04-15T13:40:05,030Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=b6d425df-898a-4637-999c-8e237deadfde, invocation_id=dbe3f5cd-e72c-4ffa-98e3-86db00f0275c, invocation_timestamp=2021-04-15T13:40:03.651Z, origin=Only For Testing, session_id=dbe3f5cd-e72c-4ffa-98e3-86db00f0275c, session_timestamp=2021-04-15T13:40:03.651Z, thread-id=645, tx_id=ECACF56EA15ED1E9CF8A0E0174D985F3EBBAEF5ED0A72C5CFFE449D7BA665E3A}
[INFO ] 2021-04-15T13:40:05,030Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=b6d425df-898a-4637-999c-8e237deadfde, invocation_id=dbe3f5cd-e72c-4ffa-98e3-86db00f0275c, invocation_timestamp=2021-04-15T13:40:03.651Z, origin=Only For Testing, session_id=dbe3f5cd-e72c-4ffa-98e3-86db00f0275c, session_timestamp=2021-04-15T13:40:03.651Z, thread-id=645, tx_id=ECACF56EA15ED1E9CF8A0E0174D985F3EBBAEF5ED0A72C5CFFE449D7BA665E3A}
[INFO ] 2021-04-15T13:40:05,292Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=InvestorA, L=TestLand, C=US. {fiber-id=10000005, flow-id=1b2e0279-eada-4924-90e6-147b1bee97a8, invocation_id=623f0920-f0bf-433f-8d9d-6c3d13e74688, invocation_timestamp=2021-04-15T13:40:05.259Z, origin=O=InvestorA, L=TestLand, C=US, session_id=623f0920-f0bf-433f-8d9d-6c3d13e74688, session_timestamp=2021-04-15T13:40:05.259Z, thread-id=645, tx_id=3ACD15264E023091C991F10872A14214CA9B660B9B1DB860F409C5969EE01369}
[INFO ] 2021-04-15T13:40:05,552Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=1b2e0279-eada-4924-90e6-147b1bee97a8, invocation_id=623f0920-f0bf-433f-8d9d-6c3d13e74688, invocation_timestamp=2021-04-15T13:40:05.259Z, origin=O=InvestorA, L=TestLand, C=US, session_id=623f0920-f0bf-433f-8d9d-6c3d13e74688, session_timestamp=2021-04-15T13:40:05.259Z, thread-id=645, tx_id=3ACD15264E023091C991F10872A14214CA9B660B9B1DB860F409C5969EE01369}
[INFO ] 2021-04-15T13:40:05,595Z [Mock network] corda.flow. - Flow raised an error: A signature was requested for a key that isn't part of the required signing keys for transaction 3ACD15264E023091C991F10872A14214CA9B660B9B1DB860F409C5969EE01369. Sending it to flow hospital to be triaged. {fiber-id=10000005, flow-id=1b2e0279-eada-4924-90e6-147b1bee97a8, invocation_id=623f0920-f0bf-433f-8d9d-6c3d13e74688, invocation_timestamp=2021-04-15T13:40:05.259Z, origin=O=InvestorA, L=TestLand, C=US, session_id=623f0920-f0bf-433f-8d9d-6c3d13e74688, session_timestamp=2021-04-15T13:40:05.259Z, thread-id=645, tx_id=3ACD15264E023091C991F10872A14214CA9B660B9B1DB860F409C5969EE01369}
[INFO ] 2021-04-15T13:40:05,599Z [Mock network] statemachine.StaffedFlowHospital. - Flow [1b2e0279-eada-4924-90e6-147b1bee97a8] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Invocation, sessionId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3479092221888832009)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7129816874138993921), deduplicationSeed=D--7129816874138993921--7725007534527307632)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))]), frozenFiber=055623B739DAC71C2C4B1B792D85B5157AEDA2109E1ED6BAFBB0FBFCA65ED831), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@439a2912, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@48e01b98], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=a51c9c6c-419a-4eac-b4e4-34324cd7fb5c, reloadCheckpointAfterSuspendCount=null, numberOfCommits=8, lock=java.util.concurrent.Semaphore@7725fda7[Permits = 0]) {fiber-id=10000005, flow-id=1b2e0279-eada-4924-90e6-147b1bee97a8, invocation_id=623f0920-f0bf-433f-8d9d-6c3d13e74688, invocation_timestamp=2021-04-15T13:40:05.259Z, origin=O=InvestorA, L=TestLand, C=US, session_id=623f0920-f0bf-433f-8d9d-6c3d13e74688, session_timestamp=2021-04-15T13:40:05.259Z, thread-id=645, tx_id=3ACD15264E023091C991F10872A14214CA9B660B9B1DB860F409C5969EE01369}
[INFO ] 2021-04-15T13:40:05,602Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {fiber-id=10000005, flow-id=1b2e0279-eada-4924-90e6-147b1bee97a8, invocation_id=623f0920-f0bf-433f-8d9d-6c3d13e74688, invocation_timestamp=2021-04-15T13:40:05.259Z, origin=O=InvestorA, L=TestLand, C=US, session_id=623f0920-f0bf-433f-8d9d-6c3d13e74688, session_timestamp=2021-04-15T13:40:05.259Z, thread-id=645, tx_id=3ACD15264E023091C991F10872A14214CA9B660B9B1DB860F409C5969EE01369}
java.lang.IllegalArgumentException: A signature was requested for a key that isn't part of the required signing keys for transaction 3ACD15264E023091C991F10872A14214CA9B660B9B1DB860F409C5969EE01369
	at net.corda.core.flows.SignTransactionFlow.checkMySignaturesRequired(CollectSignaturesFlow.kt:345) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:287) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:103) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:79) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[INFO ] 2021-04-15T13:40:05,606Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {fiber-id=10000005, flow-id=1b2e0279-eada-4924-90e6-147b1bee97a8, invocation_id=623f0920-f0bf-433f-8d9d-6c3d13e74688, invocation_timestamp=2021-04-15T13:40:05.259Z, origin=O=InvestorA, L=TestLand, C=US, session_id=623f0920-f0bf-433f-8d9d-6c3d13e74688, session_timestamp=2021-04-15T13:40:05.259Z, thread-id=645, tx_id=3ACD15264E023091C991F10872A14214CA9B660B9B1DB860F409C5969EE01369}
java.lang.IllegalArgumentException: A signature was requested for a key that isn't part of the required signing keys for transaction 3ACD15264E023091C991F10872A14214CA9B660B9B1DB860F409C5969EE01369
	at net.corda.core.flows.SignTransactionFlow.checkMySignaturesRequired(CollectSignaturesFlow.kt:345) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:287) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:103) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:79) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[WARN ] 2021-04-15T13:40:05,647Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [1b2e0279-eada-4924-90e6-147b1bee97a8] errored, dumping all transitions:

 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.268Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[1b2e0279-eada-4924-90e6-147b1bee97a8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Invocation, sessionId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=4A729F18264C91E4B89A20F9F3AF8C532B7ACB8D99181D2F0257ADF6A64BDB80), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3f5446af])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3f5446af])
    SignalFlowHasStarted(flowId=[1b2e0279-eada-4924-90e6-147b1bee97a8])
    SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7129816874138993921), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=3479092221888832009), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--7129816874138993921--7725007534527307632-0-0), senderUUID=a51c9c6c-419a-4eac-b4e4-34324cd7fb5c))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=3479092221888832009): 
    null
    Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7129816874138993921), deduplicationSeed=D--7129816874138993921--7725007534527307632)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3f5446af]
    []


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.272Z
  Event: EnterSubFlow(subFlowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.260Z
    2021-04-15T13:40:05.272Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.275Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.272Z
    2021-04-15T13:40:05.275Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.289Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))]), maySkipCheckpoint=false, fiber=1F12653FBC5770EFDE1AF4E04918FEA6A13F5CB95D20F91268C39E99CAA1375A, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[1b2e0279-eada-4924-90e6-147b1bee97a8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Invocation, sessionId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3479092221888832009)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7129816874138993921), deduplicationSeed=D--7129816874138993921--7725007534527307632)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))]), frozenFiber=1F12653FBC5770EFDE1AF4E04918FEA6A13F5CB95D20F91268C39E99CAA1375A), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=4A729F18264C91E4B89A20F9F3AF8C532B7ACB8D99181D2F0257ADF6A64BDB80)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))]), frozenFiber=1F12653FBC5770EFDE1AF4E04918FEA6A13F5CB95D20F91268C39E99CAA1375A)
checkpoint.timestamp: 
    2021-04-15T13:40:05.275Z
    2021-04-15T13:40:05.285Z
checkpoint.progressStep: 
    null
    Starting
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.290Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:40:05.285Z
    2021-04-15T13:40:05.290Z
checkpoint.checkpointState.sessions.SessionId(toLong=3479092221888832009).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.292Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.290Z
    2021-04-15T13:40:05.292Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.293Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.292Z
    2021-04-15T13:40:05.293Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.297Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.293Z
    2021-04-15T13:40:05.297Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.297Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.297Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.297Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.308Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=A170B6734056E0256CA5A610EA0C01DAA80FEB5883661FAA972500883407AD8D}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=11DEA14A5A250AA651A4453618DEDCEC811B4021CEBC3E60A197DE08085E0CB3, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[1b2e0279-eada-4924-90e6-147b1bee97a8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Invocation, sessionId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3479092221888832009)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7129816874138993921), deduplicationSeed=D--7129816874138993921--7725007534527307632)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=A170B6734056E0256CA5A610EA0C01DAA80FEB5883661FAA972500883407AD8D}, shouldRetrySend=false), frozenFiber=11DEA14A5A250AA651A4453618DEDCEC811B4021CEBC3E60A197DE08085E0CB3), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowIoRequest: 
    Receive
    SendAndReceive
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))])
    SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=A170B6734056E0256CA5A610EA0C01DAA80FEB5883661FAA972500883407AD8D}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    1F12653FBC5770EFDE1AF4E04918FEA6A13F5CB95D20F91268C39E99CAA1375A
    11DEA14A5A250AA651A4453618DEDCEC811B4021CEBC3E60A197DE08085E0CB3
checkpoint.timestamp: 
    2021-04-15T13:40:05.297Z
    2021-04-15T13:40:05.305Z
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.309Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7129816874138993921), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--7129816874138993921--7725007534527307632-2-0), senderUUID=a51c9c6c-419a-4eac-b4e4-34324cd7fb5c))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=A170B6734056E0256CA5A610EA0C01DAA80FEB5883661FAA972500883407AD8D}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))])
checkpoint.timestamp: 
    2021-04-15T13:40:05.305Z
    2021-04-15T13:40:05.309Z


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.342Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3479092221888832009), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@280d9c16, sender=O=InvestorA, L=TestLand, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.309Z
    2021-04-15T13:40:05.342Z
checkpoint.checkpointState.sessions.SessionId(toLong=3479092221888832009).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@280d9c16]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.343Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:40:05.342Z
    2021-04-15T13:40:05.343Z
checkpoint.checkpointState.sessions.SessionId(toLong=3479092221888832009).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.344Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.343Z
    2021-04-15T13:40:05.344Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.349Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.344Z
    2021-04-15T13:40:05.349Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.350Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.349Z
    2021-04-15T13:40:05.350Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.350Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.350Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.358Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-04-15T13:40:05.350Z), maySkipCheckpoint=false, fiber=CF1658932610F00DEC5780447CD47C12DD0594BC8D8420D305C165216622DEEC, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[1b2e0279-eada-4924-90e6-147b1bee97a8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Invocation, sessionId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3479092221888832009)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7129816874138993921), deduplicationSeed=D--7129816874138993921--7725007534527307632)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-04-15T13:40:05.350Z), frozenFiber=CF1658932610F00DEC5780447CD47C12DD0594BC8D8420D305C165216622DEEC), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@280d9c16])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@280d9c16])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowIoRequest: 
    SendAndReceive
    Sleep
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))])
    Sleep(wakeUpAfter=2021-04-15T13:40:05.350Z)
checkpoint.flowState.frozenFiber.hash: 
    11DEA14A5A250AA651A4453618DEDCEC811B4021CEBC3E60A197DE08085E0CB3
    CF1658932610F00DEC5780447CD47C12DD0594BC8D8420D305C165216622DEEC
checkpoint.timestamp: 
    2021-04-15T13:40:05.350Z
    2021-04-15T13:40:05.356Z
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
numberOfCommits: 
    3
    4
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@280d9c16]
    []


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.359Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Invocation, sessionId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3479092221888832009)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7129816874138993921), deduplicationSeed=D--7129816874138993921--7725007534527307632)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-04-15T13:40:05.350Z), frozenFiber=CF1658932610F00DEC5780447CD47C12DD0594BC8D8420D305C165216622DEEC), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@439a2912, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@4bc3dd3b, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=a51c9c6c-419a-4eac-b4e4-34324cd7fb5c, reloadCheckpointAfterSuspendCount=null, numberOfCommits=4, lock=java.util.concurrent.Semaphore@7725fda7[Permits = 0]), time=2021-04-15T13:40:05.350Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
isWaitingForFuture: 
    false
    true
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@4bc3dd3b


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.363Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isWaitingForFuture: 
    true
    false
isFlowResumed: 
    false
    true
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@4bc3dd3b
    null


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.364Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.356Z
    2021-04-15T13:40:05.364Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.374Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=DAC8EC395D3B0CDA184C642837A06891AD077300284A432DB3CB973F591445FD}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=0E011B1103395118BC38332805CFF69299CED33259349F4F0C2A12EEC095E52A, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[1b2e0279-eada-4924-90e6-147b1bee97a8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Invocation, sessionId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3479092221888832009)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7129816874138993921), deduplicationSeed=D--7129816874138993921--7725007534527307632)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=DAC8EC395D3B0CDA184C642837A06891AD077300284A432DB3CB973F591445FD}, shouldRetrySend=false), frozenFiber=0E011B1103395118BC38332805CFF69299CED33259349F4F0C2A12EEC095E52A), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowIoRequest: 
    Sleep
    SendAndReceive
checkpoint.flowState.flowIORequest: 
    Sleep(wakeUpAfter=2021-04-15T13:40:05.350Z)
    SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=DAC8EC395D3B0CDA184C642837A06891AD077300284A432DB3CB973F591445FD}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    CF1658932610F00DEC5780447CD47C12DD0594BC8D8420D305C165216622DEEC
    0E011B1103395118BC38332805CFF69299CED33259349F4F0C2A12EEC095E52A
checkpoint.timestamp: 
    2021-04-15T13:40:05.364Z
    2021-04-15T13:40:05.371Z
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.checkpointState.numberOfCommits: 
    4
    5
numberOfCommits: 
    4
    5


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.374Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7129816874138993921), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--7129816874138993921--7725007534527307632-4-0), senderUUID=a51c9c6c-419a-4eac-b4e4-34324cd7fb5c))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=DAC8EC395D3B0CDA184C642837A06891AD077300284A432DB3CB973F591445FD}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))])
checkpoint.timestamp: 
    2021-04-15T13:40:05.371Z
    2021-04-15T13:40:05.374Z


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.396Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3479092221888832009), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7ac37c23, sender=O=InvestorA, L=TestLand, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.374Z
    2021-04-15T13:40:05.396Z
checkpoint.checkpointState.sessions.SessionId(toLong=3479092221888832009).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7ac37c23]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.396Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=3479092221888832009).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.398Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.396Z
    2021-04-15T13:40:05.397Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.400Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.397Z
    2021-04-15T13:40:05.400Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.400Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.400Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.400Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.408Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-04-15T13:40:05.400Z), maySkipCheckpoint=false, fiber=E03EF1F84D7026F5025EB5ACF945BB94270111CCA73B6B5572316C86E863C2AE, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[1b2e0279-eada-4924-90e6-147b1bee97a8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Invocation, sessionId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3479092221888832009)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7129816874138993921), deduplicationSeed=D--7129816874138993921--7725007534527307632)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-04-15T13:40:05.400Z), frozenFiber=E03EF1F84D7026F5025EB5ACF945BB94270111CCA73B6B5572316C86E863C2AE), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7ac37c23])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7ac37c23])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowIoRequest: 
    SendAndReceive
    Sleep
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))])
    Sleep(wakeUpAfter=2021-04-15T13:40:05.400Z)
checkpoint.flowState.frozenFiber.hash: 
    0E011B1103395118BC38332805CFF69299CED33259349F4F0C2A12EEC095E52A
    E03EF1F84D7026F5025EB5ACF945BB94270111CCA73B6B5572316C86E863C2AE
checkpoint.timestamp: 
    2021-04-15T13:40:05.400Z
    2021-04-15T13:40:05.406Z
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.checkpointState.numberOfCommits: 
    5
    6
numberOfCommits: 
    5
    6
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7ac37c23]
    []


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.408Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Invocation, sessionId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3479092221888832009)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7129816874138993921), deduplicationSeed=D--7129816874138993921--7725007534527307632)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-04-15T13:40:05.400Z), frozenFiber=E03EF1F84D7026F5025EB5ACF945BB94270111CCA73B6B5572316C86E863C2AE), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@439a2912, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@6af50c7d, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=a51c9c6c-419a-4eac-b4e4-34324cd7fb5c, reloadCheckpointAfterSuspendCount=null, numberOfCommits=6, lock=java.util.concurrent.Semaphore@7725fda7[Permits = 0]), time=2021-04-15T13:40:05.400Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
isWaitingForFuture: 
    false
    true
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@6af50c7d


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.413Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isWaitingForFuture: 
    true
    false
isFlowResumed: 
    false
    true
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@6af50c7d
    null


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.422Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=E7219D46B01627434A83D59B38566F943CAEECA7C4D687D5FB0D7C164A3B3E80, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[1b2e0279-eada-4924-90e6-147b1bee97a8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Invocation, sessionId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3479092221888832009)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7129816874138993921), deduplicationSeed=D--7129816874138993921--7725007534527307632)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=E7219D46B01627434A83D59B38566F943CAEECA7C4D687D5FB0D7C164A3B3E80), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowIoRequest: 
    Sleep
    Send
checkpoint.flowState.flowIORequest: 
    Sleep(wakeUpAfter=2021-04-15T13:40:05.400Z)
    Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    E03EF1F84D7026F5025EB5ACF945BB94270111CCA73B6B5572316C86E863C2AE
    E7219D46B01627434A83D59B38566F943CAEECA7C4D687D5FB0D7C164A3B3E80
checkpoint.timestamp: 
    2021-04-15T13:40:05.406Z
    2021-04-15T13:40:05.419Z
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
checkpoint.checkpointState.numberOfCommits: 
    6
    7
numberOfCommits: 
    6
    7


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.423Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7129816874138993921), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--7129816874138993921--7725007534527307632-6-0), senderUUID=a51c9c6c-419a-4eac-b4e4-34324cd7fb5c))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.552Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.422Z
    2021-04-15T13:40:05.552Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.563Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.552Z
    2021-04-15T13:40:05.563Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.569Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))]), maySkipCheckpoint=false, fiber=055623B739DAC71C2C4B1B792D85B5157AEDA2109E1ED6BAFBB0FBFCA65ED831, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[1b2e0279-eada-4924-90e6-147b1bee97a8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Invocation, sessionId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3479092221888832009)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7129816874138993921), deduplicationSeed=D--7129816874138993921--7725007534527307632)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))]), frozenFiber=055623B739DAC71C2C4B1B792D85B5157AEDA2109E1ED6BAFBB0FBFCA65ED831), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))])
checkpoint.flowState.frozenFiber.hash: 
    E7219D46B01627434A83D59B38566F943CAEECA7C4D687D5FB0D7C164A3B3E80
    055623B739DAC71C2C4B1B792D85B5157AEDA2109E1ED6BAFBB0FBFCA65ED831
checkpoint.timestamp: 
    2021-04-15T13:40:05.563Z
    2021-04-15T13:40:05.567Z
checkpoint.checkpointState.numberOfSuspends: 
    6
    7
checkpoint.checkpointState.numberOfCommits: 
    7
    8
numberOfCommits: 
    7
    8


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.570Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.594Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3479092221888832009), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@48e01b98, sender=O=InvestorA, L=TestLand, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.570Z
    2021-04-15T13:40:05.594Z
checkpoint.checkpointState.sessions.SessionId(toLong=3479092221888832009).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@48e01b98]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.594Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=3479092221888832009).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.595Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.594Z
    2021-04-15T13:40:05.595Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.607Z
  Event: Error(exception=java.lang.IllegalArgumentException: A signature was requested for a key that isn't part of the required signing keys for transaction 3ACD15264E023091C991F10872A14214CA9B660B9B1DB860F409C5969EE01369, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=4063086590499276045, exception=java.lang.IllegalArgumentException: A signature was requested for a key that isn't part of the required signing keys for transaction 3ACD15264E023091C991F10872A14214CA9B660B9B1DB860F409C5969EE01369)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2021-04-15T13:40:05.595Z
    2021-04-15T13:40:05.597Z


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.611Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.612Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:40:05.597Z
    2021-04-15T13:40:05.612Z
 {fiber-id=10000005, flow-id=1b2e0279-eada-4924-90e6-147b1bee97a8, invocation_id=623f0920-f0bf-433f-8d9d-6c3d13e74688, invocation_timestamp=2021-04-15T13:40:05.259Z, origin=O=InvestorA, L=TestLand, C=US, session_id=623f0920-f0bf-433f-8d9d-6c3d13e74688, session_timestamp=2021-04-15T13:40:05.259Z, thread-id=645, tx_id=3ACD15264E023091C991F10872A14214CA9B660B9B1DB860F409C5969EE01369}
[WARN ] 2021-04-15T13:40:05,647Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [1b2e0279-eada-4924-90e6-147b1bee97a8] error {fiber-id=10000005, flow-id=1b2e0279-eada-4924-90e6-147b1bee97a8, invocation_id=623f0920-f0bf-433f-8d9d-6c3d13e74688, invocation_timestamp=2021-04-15T13:40:05.259Z, origin=O=InvestorA, L=TestLand, C=US, session_id=623f0920-f0bf-433f-8d9d-6c3d13e74688, session_timestamp=2021-04-15T13:40:05.259Z, thread-id=645, tx_id=3ACD15264E023091C991F10872A14214CA9B660B9B1DB860F409C5969EE01369}
java.lang.IllegalArgumentException: A signature was requested for a key that isn't part of the required signing keys for transaction 3ACD15264E023091C991F10872A14214CA9B660B9B1DB860F409C5969EE01369
	at net.corda.core.flows.SignTransactionFlow.checkMySignaturesRequired(CollectSignaturesFlow.kt:345) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:287) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:103) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:79) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[WARN ] 2021-04-15T13:40:05,653Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {fiber-id=10000005, flow-id=1b2e0279-eada-4924-90e6-147b1bee97a8, invocation_id=623f0920-f0bf-433f-8d9d-6c3d13e74688, invocation_timestamp=2021-04-15T13:40:05.259Z, origin=O=InvestorA, L=TestLand, C=US, session_id=623f0920-f0bf-433f-8d9d-6c3d13e74688, session_timestamp=2021-04-15T13:40:05.259Z, thread-id=645, tx_id=3ACD15264E023091C991F10872A14214CA9B660B9B1DB860F409C5969EE01369}
[WARN ] 2021-04-15T13:40:05,761Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [1b2e0279-eada-4924-90e6-147b1bee97a8] errored, dumping all transitions:

 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.268Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[1b2e0279-eada-4924-90e6-147b1bee97a8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Invocation, sessionId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=4A729F18264C91E4B89A20F9F3AF8C532B7ACB8D99181D2F0257ADF6A64BDB80), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3f5446af])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3f5446af])
    SignalFlowHasStarted(flowId=[1b2e0279-eada-4924-90e6-147b1bee97a8])
    SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7129816874138993921), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=3479092221888832009), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--7129816874138993921--7725007534527307632-0-0), senderUUID=a51c9c6c-419a-4eac-b4e4-34324cd7fb5c))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=3479092221888832009): 
    null
    Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7129816874138993921), deduplicationSeed=D--7129816874138993921--7725007534527307632)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3f5446af]
    []


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.272Z
  Event: EnterSubFlow(subFlowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.260Z
    2021-04-15T13:40:05.272Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.275Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.272Z
    2021-04-15T13:40:05.275Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.289Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))]), maySkipCheckpoint=false, fiber=1F12653FBC5770EFDE1AF4E04918FEA6A13F5CB95D20F91268C39E99CAA1375A, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[1b2e0279-eada-4924-90e6-147b1bee97a8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Invocation, sessionId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3479092221888832009)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7129816874138993921), deduplicationSeed=D--7129816874138993921--7725007534527307632)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))]), frozenFiber=1F12653FBC5770EFDE1AF4E04918FEA6A13F5CB95D20F91268C39E99CAA1375A), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=4A729F18264C91E4B89A20F9F3AF8C532B7ACB8D99181D2F0257ADF6A64BDB80)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))]), frozenFiber=1F12653FBC5770EFDE1AF4E04918FEA6A13F5CB95D20F91268C39E99CAA1375A)
checkpoint.timestamp: 
    2021-04-15T13:40:05.275Z
    2021-04-15T13:40:05.285Z
checkpoint.progressStep: 
    null
    Starting
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.290Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:40:05.285Z
    2021-04-15T13:40:05.290Z
checkpoint.checkpointState.sessions.SessionId(toLong=3479092221888832009).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.292Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.290Z
    2021-04-15T13:40:05.292Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.293Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.292Z
    2021-04-15T13:40:05.293Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.297Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.293Z
    2021-04-15T13:40:05.297Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.297Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.297Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.297Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.308Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=A170B6734056E0256CA5A610EA0C01DAA80FEB5883661FAA972500883407AD8D}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=11DEA14A5A250AA651A4453618DEDCEC811B4021CEBC3E60A197DE08085E0CB3, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[1b2e0279-eada-4924-90e6-147b1bee97a8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Invocation, sessionId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3479092221888832009)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7129816874138993921), deduplicationSeed=D--7129816874138993921--7725007534527307632)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=A170B6734056E0256CA5A610EA0C01DAA80FEB5883661FAA972500883407AD8D}, shouldRetrySend=false), frozenFiber=11DEA14A5A250AA651A4453618DEDCEC811B4021CEBC3E60A197DE08085E0CB3), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowIoRequest: 
    Receive
    SendAndReceive
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))])
    SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=A170B6734056E0256CA5A610EA0C01DAA80FEB5883661FAA972500883407AD8D}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    1F12653FBC5770EFDE1AF4E04918FEA6A13F5CB95D20F91268C39E99CAA1375A
    11DEA14A5A250AA651A4453618DEDCEC811B4021CEBC3E60A197DE08085E0CB3
checkpoint.timestamp: 
    2021-04-15T13:40:05.297Z
    2021-04-15T13:40:05.305Z
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.309Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7129816874138993921), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--7129816874138993921--7725007534527307632-2-0), senderUUID=a51c9c6c-419a-4eac-b4e4-34324cd7fb5c))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=A170B6734056E0256CA5A610EA0C01DAA80FEB5883661FAA972500883407AD8D}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))])
checkpoint.timestamp: 
    2021-04-15T13:40:05.305Z
    2021-04-15T13:40:05.309Z


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.342Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3479092221888832009), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@280d9c16, sender=O=InvestorA, L=TestLand, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.309Z
    2021-04-15T13:40:05.342Z
checkpoint.checkpointState.sessions.SessionId(toLong=3479092221888832009).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@280d9c16]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.343Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:40:05.342Z
    2021-04-15T13:40:05.343Z
checkpoint.checkpointState.sessions.SessionId(toLong=3479092221888832009).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.344Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.343Z
    2021-04-15T13:40:05.344Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.349Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.344Z
    2021-04-15T13:40:05.349Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.350Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.349Z
    2021-04-15T13:40:05.350Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.350Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.350Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.358Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-04-15T13:40:05.350Z), maySkipCheckpoint=false, fiber=CF1658932610F00DEC5780447CD47C12DD0594BC8D8420D305C165216622DEEC, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[1b2e0279-eada-4924-90e6-147b1bee97a8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Invocation, sessionId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3479092221888832009)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7129816874138993921), deduplicationSeed=D--7129816874138993921--7725007534527307632)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-04-15T13:40:05.350Z), frozenFiber=CF1658932610F00DEC5780447CD47C12DD0594BC8D8420D305C165216622DEEC), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@280d9c16])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@280d9c16])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowIoRequest: 
    SendAndReceive
    Sleep
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))])
    Sleep(wakeUpAfter=2021-04-15T13:40:05.350Z)
checkpoint.flowState.frozenFiber.hash: 
    11DEA14A5A250AA651A4453618DEDCEC811B4021CEBC3E60A197DE08085E0CB3
    CF1658932610F00DEC5780447CD47C12DD0594BC8D8420D305C165216622DEEC
checkpoint.timestamp: 
    2021-04-15T13:40:05.350Z
    2021-04-15T13:40:05.356Z
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
numberOfCommits: 
    3
    4
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@280d9c16]
    []


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.359Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Invocation, sessionId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3479092221888832009)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7129816874138993921), deduplicationSeed=D--7129816874138993921--7725007534527307632)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-04-15T13:40:05.350Z), frozenFiber=CF1658932610F00DEC5780447CD47C12DD0594BC8D8420D305C165216622DEEC), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@439a2912, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@4bc3dd3b, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=a51c9c6c-419a-4eac-b4e4-34324cd7fb5c, reloadCheckpointAfterSuspendCount=null, numberOfCommits=4, lock=java.util.concurrent.Semaphore@7725fda7[Permits = 0]), time=2021-04-15T13:40:05.350Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
isWaitingForFuture: 
    false
    true
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@4bc3dd3b


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.363Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isWaitingForFuture: 
    true
    false
isFlowResumed: 
    false
    true
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@4bc3dd3b
    null


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.364Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.356Z
    2021-04-15T13:40:05.364Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.374Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=DAC8EC395D3B0CDA184C642837A06891AD077300284A432DB3CB973F591445FD}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=0E011B1103395118BC38332805CFF69299CED33259349F4F0C2A12EEC095E52A, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[1b2e0279-eada-4924-90e6-147b1bee97a8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Invocation, sessionId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3479092221888832009)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7129816874138993921), deduplicationSeed=D--7129816874138993921--7725007534527307632)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=DAC8EC395D3B0CDA184C642837A06891AD077300284A432DB3CB973F591445FD}, shouldRetrySend=false), frozenFiber=0E011B1103395118BC38332805CFF69299CED33259349F4F0C2A12EEC095E52A), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowIoRequest: 
    Sleep
    SendAndReceive
checkpoint.flowState.flowIORequest: 
    Sleep(wakeUpAfter=2021-04-15T13:40:05.350Z)
    SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=DAC8EC395D3B0CDA184C642837A06891AD077300284A432DB3CB973F591445FD}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    CF1658932610F00DEC5780447CD47C12DD0594BC8D8420D305C165216622DEEC
    0E011B1103395118BC38332805CFF69299CED33259349F4F0C2A12EEC095E52A
checkpoint.timestamp: 
    2021-04-15T13:40:05.364Z
    2021-04-15T13:40:05.371Z
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.checkpointState.numberOfCommits: 
    4
    5
numberOfCommits: 
    4
    5


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.374Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7129816874138993921), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--7129816874138993921--7725007534527307632-4-0), senderUUID=a51c9c6c-419a-4eac-b4e4-34324cd7fb5c))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=DAC8EC395D3B0CDA184C642837A06891AD077300284A432DB3CB973F591445FD}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))])
checkpoint.timestamp: 
    2021-04-15T13:40:05.371Z
    2021-04-15T13:40:05.374Z


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.396Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3479092221888832009), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7ac37c23, sender=O=InvestorA, L=TestLand, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.374Z
    2021-04-15T13:40:05.396Z
checkpoint.checkpointState.sessions.SessionId(toLong=3479092221888832009).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7ac37c23]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.396Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=3479092221888832009).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.398Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.396Z
    2021-04-15T13:40:05.397Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.400Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.397Z
    2021-04-15T13:40:05.400Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.400Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.400Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.400Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.408Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-04-15T13:40:05.400Z), maySkipCheckpoint=false, fiber=E03EF1F84D7026F5025EB5ACF945BB94270111CCA73B6B5572316C86E863C2AE, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[1b2e0279-eada-4924-90e6-147b1bee97a8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Invocation, sessionId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3479092221888832009)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7129816874138993921), deduplicationSeed=D--7129816874138993921--7725007534527307632)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-04-15T13:40:05.400Z), frozenFiber=E03EF1F84D7026F5025EB5ACF945BB94270111CCA73B6B5572316C86E863C2AE), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7ac37c23])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7ac37c23])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowIoRequest: 
    SendAndReceive
    Sleep
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))])
    Sleep(wakeUpAfter=2021-04-15T13:40:05.400Z)
checkpoint.flowState.frozenFiber.hash: 
    0E011B1103395118BC38332805CFF69299CED33259349F4F0C2A12EEC095E52A
    E03EF1F84D7026F5025EB5ACF945BB94270111CCA73B6B5572316C86E863C2AE
checkpoint.timestamp: 
    2021-04-15T13:40:05.400Z
    2021-04-15T13:40:05.406Z
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.checkpointState.numberOfCommits: 
    5
    6
numberOfCommits: 
    5
    6
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7ac37c23]
    []


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.408Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Invocation, sessionId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3479092221888832009)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7129816874138993921), deduplicationSeed=D--7129816874138993921--7725007534527307632)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-04-15T13:40:05.400Z), frozenFiber=E03EF1F84D7026F5025EB5ACF945BB94270111CCA73B6B5572316C86E863C2AE), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@439a2912, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@6af50c7d, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=a51c9c6c-419a-4eac-b4e4-34324cd7fb5c, reloadCheckpointAfterSuspendCount=null, numberOfCommits=6, lock=java.util.concurrent.Semaphore@7725fda7[Permits = 0]), time=2021-04-15T13:40:05.400Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
isWaitingForFuture: 
    false
    true
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@6af50c7d


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.413Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isWaitingForFuture: 
    true
    false
isFlowResumed: 
    false
    true
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@6af50c7d
    null


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.422Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=E7219D46B01627434A83D59B38566F943CAEECA7C4D687D5FB0D7C164A3B3E80, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[1b2e0279-eada-4924-90e6-147b1bee97a8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Invocation, sessionId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3479092221888832009)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7129816874138993921), deduplicationSeed=D--7129816874138993921--7725007534527307632)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=E7219D46B01627434A83D59B38566F943CAEECA7C4D687D5FB0D7C164A3B3E80), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowIoRequest: 
    Sleep
    Send
checkpoint.flowState.flowIORequest: 
    Sleep(wakeUpAfter=2021-04-15T13:40:05.400Z)
    Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    E03EF1F84D7026F5025EB5ACF945BB94270111CCA73B6B5572316C86E863C2AE
    E7219D46B01627434A83D59B38566F943CAEECA7C4D687D5FB0D7C164A3B3E80
checkpoint.timestamp: 
    2021-04-15T13:40:05.406Z
    2021-04-15T13:40:05.419Z
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
checkpoint.checkpointState.numberOfCommits: 
    6
    7
numberOfCommits: 
    6
    7


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.423Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7129816874138993921), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--7129816874138993921--7725007534527307632-6-0), senderUUID=a51c9c6c-419a-4eac-b4e4-34324cd7fb5c))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.552Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.422Z
    2021-04-15T13:40:05.552Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.563Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.552Z
    2021-04-15T13:40:05.563Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.569Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))]), maySkipCheckpoint=false, fiber=055623B739DAC71C2C4B1B792D85B5157AEDA2109E1ED6BAFBB0FBFCA65ED831, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[1b2e0279-eada-4924-90e6-147b1bee97a8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Invocation, sessionId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3479092221888832009)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7129816874138993921), deduplicationSeed=D--7129816874138993921--7725007534527307632)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))]), frozenFiber=055623B739DAC71C2C4B1B792D85B5157AEDA2109E1ED6BAFBB0FBFCA65ED831), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))])
checkpoint.flowState.frozenFiber.hash: 
    E7219D46B01627434A83D59B38566F943CAEECA7C4D687D5FB0D7C164A3B3E80
    055623B739DAC71C2C4B1B792D85B5157AEDA2109E1ED6BAFBB0FBFCA65ED831
checkpoint.timestamp: 
    2021-04-15T13:40:05.563Z
    2021-04-15T13:40:05.567Z
checkpoint.checkpointState.numberOfSuspends: 
    6
    7
checkpoint.checkpointState.numberOfCommits: 
    7
    8
numberOfCommits: 
    7
    8


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.570Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.594Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3479092221888832009), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@48e01b98, sender=O=InvestorA, L=TestLand, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.570Z
    2021-04-15T13:40:05.594Z
checkpoint.checkpointState.sessions.SessionId(toLong=3479092221888832009).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@48e01b98]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.594Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=3479092221888832009).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.595Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.594Z
    2021-04-15T13:40:05.595Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false)]


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.607Z
  Event: Error(exception=java.lang.IllegalArgumentException: A signature was requested for a key that isn't part of the required signing keys for transaction 3ACD15264E023091C991F10872A14214CA9B660B9B1DB860F409C5969EE01369, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=4063086590499276045, exception=java.lang.IllegalArgumentException: A signature was requested for a key that isn't part of the required signing keys for transaction 3ACD15264E023091C991F10872A14214CA9B660B9B1DB860F409C5969EE01369)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2021-04-15T13:40:05.595Z
    2021-04-15T13:40:05.597Z


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.611Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.612Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:40:05.597Z
    2021-04-15T13:40:05.612Z


 --- Transition of flow [1b2e0279-eada-4924-90e6-147b1bee97a8] ---
  Timestamp: 2021-04-15T13:40:05.728Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=4063086590499276045)], sessions=[Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7129816874138993921), deduplicationSeed=D--7129816874138993921--7725007534527307632)], senderUUID=a51c9c6c-419a-4eac-b4e4-34324cd7fb5c)
    CreateTransaction
    RemoveCheckpoint(id=[1b2e0279-eada-4924-90e6-147b1bee97a8], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@48e01b98])
    ReleaseSoftLocks(uuid=1b2e0279-eada-4924-90e6-147b1bee97a8)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@48e01b98])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=3479092221888832009)])
    RemoveFlow(flowId=[1b2e0279-eada-4924-90e6-147b1bee97a8], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=4063086590499276045, exception=java.lang.IllegalArgumentException: A signature was requested for a key that isn't part of the required signing keys for transaction 3ACD15264E023091C991F10872A14214CA9B660B9B1DB860F409C5969EE01369)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Invocation, sessionId=623f0920-f0bf-433f-8d9d-6c3d13e74688, timestamp: 2021-04-15T13:40:05.259Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=3479092221888832009)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7129816874138993921), deduplicationSeed=D--7129816874138993921--7725007534527307632)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=9), flowState=net.corda.node.services.statemachine.FlowState$Finished@146a9b5, errorState=Errored(errors=[FlowError(errorId=4063086590499276045, exception=java.lang.IllegalArgumentException: A signature was requested for a key that isn't part of the required signing keys for transaction 3ACD15264E023091C991F10872A14214CA9B660B9B1DB860F409C5969EE01369)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@439a2912, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, senderUUID=a51c9c6c-419a-4eac-b4e4-34324cd7fb5c, reloadCheckpointAfterSuspendCount=null, numberOfCommits=9, lock=java.util.concurrent.Semaphore@7725fda7[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=3479092221888832009))]), frozenFiber=055623B739DAC71C2C4B1B792D85B5157AEDA2109E1ED6BAFBB0FBFCA65ED831)
    net.corda.node.services.statemachine.FlowState$Finished@146a9b5
checkpoint.timestamp: 
    2021-04-15T13:40:05.612Z
    2021-04-15T13:40:05.647Z
checkpoint.checkpointState.numberOfCommits: 
    8
    9
isRemoved: 
    false
    true
numberOfCommits: 
    8
    9
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@48e01b98]
    []
 {fiber-id=10000005, flow-id=1b2e0279-eada-4924-90e6-147b1bee97a8, invocation_id=623f0920-f0bf-433f-8d9d-6c3d13e74688, invocation_timestamp=2021-04-15T13:40:05.259Z, origin=O=InvestorA, L=TestLand, C=US, session_id=623f0920-f0bf-433f-8d9d-6c3d13e74688, session_timestamp=2021-04-15T13:40:05.259Z, thread-id=645, tx_id=3ACD15264E023091C991F10872A14214CA9B660B9B1DB860F409C5969EE01369}
[WARN ] 2021-04-15T13:40:05,761Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [1b2e0279-eada-4924-90e6-147b1bee97a8] error {fiber-id=10000005, flow-id=1b2e0279-eada-4924-90e6-147b1bee97a8, invocation_id=623f0920-f0bf-433f-8d9d-6c3d13e74688, invocation_timestamp=2021-04-15T13:40:05.259Z, origin=O=InvestorA, L=TestLand, C=US, session_id=623f0920-f0bf-433f-8d9d-6c3d13e74688, session_timestamp=2021-04-15T13:40:05.259Z, thread-id=645, tx_id=3ACD15264E023091C991F10872A14214CA9B660B9B1DB860F409C5969EE01369}
java.lang.IllegalArgumentException: A signature was requested for a key that isn't part of the required signing keys for transaction 3ACD15264E023091C991F10872A14214CA9B660B9B1DB860F409C5969EE01369
	at net.corda.core.flows.SignTransactionFlow.checkMySignaturesRequired(CollectSignaturesFlow.kt:345) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:287) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:103) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:79) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[INFO ] 2021-04-15T13:40:05,767Z [Mock network] corda.flow. - Flow raised an error: Counter-flow errored. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=2a6e9b86-39b0-4c31-8331-23dac1acbc6c, invocation_id=b4e0df9f-852e-40f3-9136-b283f9e8c59b, invocation_timestamp=2021-04-15T13:40:05.117Z, origin=Only For Testing, session_id=b4e0df9f-852e-40f3-9136-b283f9e8c59b, session_timestamp=2021-04-15T13:40:05.117Z, thread-id=645}
[INFO ] 2021-04-15T13:40:05,768Z [Mock network] statemachine.StaffedFlowHospital. - Flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=b4e0df9f-852e-40f3-9136-b283f9e8c59b, timestamp: 2021-04-15T13:40:05.117Z, entityType: Invocation, sessionId=b4e0df9f-852e-40f3-9136-b283f9e8c59b, timestamp: 2021-04-15T13:40:05.117Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=4144358299289684339)=Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=4144358299289684339), additionalEntropy=7339449506302529674), SessionId(toLong=-7129816874138993921)=Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=3479092221888832009), deduplicationSeed=R--7129816874138993921--7725007534527307632)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))]), frozenFiber=226459601358E4C32730B71890CD9EA29BAE5B0ED42FCAE9DA887E95FFA093A0), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator@4e4b8bec, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@48472141], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=d9978a75-92ed-4c51-a739-842faf340973, reloadCheckpointAfterSuspendCount=null, numberOfCommits=6, lock=java.util.concurrent.Semaphore@34824a6[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=2a6e9b86-39b0-4c31-8331-23dac1acbc6c, invocation_id=b4e0df9f-852e-40f3-9136-b283f9e8c59b, invocation_timestamp=2021-04-15T13:40:05.117Z, origin=Only For Testing, session_id=b4e0df9f-852e-40f3-9136-b283f9e8c59b, session_timestamp=2021-04-15T13:40:05.117Z, thread-id=645}
[INFO ] 2021-04-15T13:40:05,768Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=2a6e9b86-39b0-4c31-8331-23dac1acbc6c, invocation_id=b4e0df9f-852e-40f3-9136-b283f9e8c59b, invocation_timestamp=2021-04-15T13:40:05.117Z, origin=Only For Testing, session_id=b4e0df9f-852e-40f3-9136-b283f9e8c59b, session_timestamp=2021-04-15T13:40:05.117Z, thread-id=645}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=TIE, L=TestVillage, C=US.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:574) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:67) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:29) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[INFO ] 2021-04-15T13:40:05,768Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=2a6e9b86-39b0-4c31-8331-23dac1acbc6c, invocation_id=b4e0df9f-852e-40f3-9136-b283f9e8c59b, invocation_timestamp=2021-04-15T13:40:05.117Z, origin=Only For Testing, session_id=b4e0df9f-852e-40f3-9136-b283f9e8c59b, session_timestamp=2021-04-15T13:40:05.117Z, thread-id=645}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=TIE, L=TestVillage, C=US.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:574) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:67) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:29) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[WARN ] 2021-04-15T13:40:05,782Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] errored, dumping all transitions:

 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.122Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[2a6e9b86-39b0-4c31-8331-23dac1acbc6c], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=b4e0df9f-852e-40f3-9136-b283f9e8c59b, timestamp: 2021-04-15T13:40:05.117Z, entityType: Invocation, sessionId=b4e0df9f-852e-40f3-9136-b283f9e8c59b, timestamp: 2021-04-15T13:40:05.117Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=C953EA3E3F138C744843E584FFAF386C46B693D2BA3F0258E303A1CAC93E90A0), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@70ac4b2a])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@70ac4b2a])
    SignalFlowHasStarted(flowId=[2a6e9b86-39b0-4c31-8331-23dac1acbc6c])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@70ac4b2a]
    []


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.228Z
  Event: InitiateFlow(destination=O=InvestorB, L=TestCity, C=US, wellKnownParty=O=InvestorB, L=TestCity, C=US)
  Actions: 
    AddSessionBinding(flowId=[2a6e9b86-39b0-4c31-8331-23dac1acbc6c], sessionId=SessionId(toLong=4144358299289684339))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.118Z
    2021-04-15T13:40:05.228Z
checkpoint.checkpointState.sessions.SessionId(toLong=4144358299289684339): 
    null
    Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=4144358299289684339), additionalEntropy=7339449506302529674)


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.228Z
  Event: InitiateFlow(destination=O=TIE, L=TestVillage, C=US, wellKnownParty=O=TIE, L=TestVillage, C=US)
  Actions: 
    AddSessionBinding(flowId=[2a6e9b86-39b0-4c31-8331-23dac1acbc6c], sessionId=SessionId(toLong=-7129816874138993921))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-7129816874138993921): 
    null
    Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-7129816874138993921), additionalEntropy=-7725007534527307632)


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.229Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.228Z
    2021-04-15T13:40:05.229Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.230Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.229Z
    2021-04-15T13:40:05.230Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.245Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=151DAB78EAAD770C0CEC2A24F2EF62A8F269F19C90E043E3968BAB7C391BC5F2}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=6236DBBE679575BF23F71882E98212CC8B521AA9CD573540C67B197F77F275D0, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[2a6e9b86-39b0-4c31-8331-23dac1acbc6c], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=b4e0df9f-852e-40f3-9136-b283f9e8c59b, timestamp: 2021-04-15T13:40:05.117Z, entityType: Invocation, sessionId=b4e0df9f-852e-40f3-9136-b283f9e8c59b, timestamp: 2021-04-15T13:40:05.117Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=4144358299289684339)=Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=4144358299289684339), additionalEntropy=7339449506302529674), SessionId(toLong=-7129816874138993921)=Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-7129816874138993921), additionalEntropy=-7725007534527307632)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=151DAB78EAAD770C0CEC2A24F2EF62A8F269F19C90E043E3968BAB7C391BC5F2}, shouldRetrySend=false), frozenFiber=6236DBBE679575BF23F71882E98212CC8B521AA9CD573540C67B197F77F275D0), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowIoRequest: 
    null
    SendAndReceive
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=C953EA3E3F138C744843E584FFAF386C46B693D2BA3F0258E303A1CAC93E90A0)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=151DAB78EAAD770C0CEC2A24F2EF62A8F269F19C90E043E3968BAB7C391BC5F2}, shouldRetrySend=false), frozenFiber=6236DBBE679575BF23F71882E98212CC8B521AA9CD573540C67B197F77F275D0)
checkpoint.timestamp: 
    2021-04-15T13:40:05.230Z
    2021-04-15T13:40:05.242Z
checkpoint.progressStep: 
    null
    Starting
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.251Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=TIE, L=TestVillage, C=US, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-7129816874138993921), initiationEntropy=-7725007534527307632, initiatorFlowClassName=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--7129816874138993921--7725007534527307632-1-0), senderUUID=d9978a75-92ed-4c51-a739-842faf340973))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=151DAB78EAAD770C0CEC2A24F2EF62A8F269F19C90E043E3968BAB7C391BC5F2}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))])
checkpoint.timestamp: 
    2021-04-15T13:40:05.242Z
    2021-04-15T13:40:05.245Z
checkpoint.checkpointState.sessions.SessionId(toLong=-7129816874138993921): 
    Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-7129816874138993921), additionalEntropy=-7725007534527307632)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--7129816874138993921--7725007534527307632)


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.318Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7129816874138993921), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=3479092221888832009), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62efb99d, sender=O=TIE, L=TestVillage, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.245Z
    2021-04-15T13:40:05.318Z
checkpoint.checkpointState.sessions.SessionId(toLong=-7129816874138993921): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--7129816874138993921--7725007534527307632)
    Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3479092221888832009), deduplicationSeed=R--7129816874138993921--7725007534527307632)
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62efb99d]


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.318Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.324Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7129816874138993921), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@13d3d1a8, sender=O=TIE, L=TestVillage, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.318Z
    2021-04-15T13:40:05.324Z
checkpoint.checkpointState.sessions.SessionId(toLong=-7129816874138993921).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62efb99d]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62efb99d, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@13d3d1a8]


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.324Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-7129816874138993921).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.335Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=363DF267650F596F81FF38FD78D8C239ADB2E2C63BCA736D1435D50DE3B96E9E}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=2C895C6CD0577D3A7A3A0141F8F8052783FD4FE93F101CE4930510F00E1ACEF9, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[2a6e9b86-39b0-4c31-8331-23dac1acbc6c], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=b4e0df9f-852e-40f3-9136-b283f9e8c59b, timestamp: 2021-04-15T13:40:05.117Z, entityType: Invocation, sessionId=b4e0df9f-852e-40f3-9136-b283f9e8c59b, timestamp: 2021-04-15T13:40:05.117Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=4144358299289684339)=Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=4144358299289684339), additionalEntropy=7339449506302529674), SessionId(toLong=-7129816874138993921)=Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3479092221888832009), deduplicationSeed=R--7129816874138993921--7725007534527307632)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=363DF267650F596F81FF38FD78D8C239ADB2E2C63BCA736D1435D50DE3B96E9E}, shouldRetrySend=false), frozenFiber=2C895C6CD0577D3A7A3A0141F8F8052783FD4FE93F101CE4930510F00E1ACEF9), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62efb99d, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@13d3d1a8])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62efb99d, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@13d3d1a8])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))])
    SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=363DF267650F596F81FF38FD78D8C239ADB2E2C63BCA736D1435D50DE3B96E9E}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    6236DBBE679575BF23F71882E98212CC8B521AA9CD573540C67B197F77F275D0
    2C895C6CD0577D3A7A3A0141F8F8052783FD4FE93F101CE4930510F00E1ACEF9
checkpoint.timestamp: 
    2021-04-15T13:40:05.324Z
    2021-04-15T13:40:05.332Z
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62efb99d, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@13d3d1a8]
    []


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.336Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=TIE, L=TestVillage, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3479092221888832009), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--7129816874138993921--7725007534527307632-2-0), senderUUID=d9978a75-92ed-4c51-a739-842faf340973))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=363DF267650F596F81FF38FD78D8C239ADB2E2C63BCA736D1435D50DE3B96E9E}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))])
checkpoint.timestamp: 
    2021-04-15T13:40:05.332Z
    2021-04-15T13:40:05.335Z


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.381Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7129816874138993921), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@51fcaa60, sender=O=TIE, L=TestVillage, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.335Z
    2021-04-15T13:40:05.381Z
checkpoint.checkpointState.sessions.SessionId(toLong=-7129816874138993921).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@51fcaa60]


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.381Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-7129816874138993921).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.390Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=DFE6ECE6B5C9BD8F11EEDED771FF742D06B86D17E22F14FDF724B2B676232689}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=0F02DEC27714BCA555ACC0365BA318C4283EDD6E4344270CC5D5AE3538CA15DD, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[2a6e9b86-39b0-4c31-8331-23dac1acbc6c], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=b4e0df9f-852e-40f3-9136-b283f9e8c59b, timestamp: 2021-04-15T13:40:05.117Z, entityType: Invocation, sessionId=b4e0df9f-852e-40f3-9136-b283f9e8c59b, timestamp: 2021-04-15T13:40:05.117Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=4144358299289684339)=Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=4144358299289684339), additionalEntropy=7339449506302529674), SessionId(toLong=-7129816874138993921)=Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3479092221888832009), deduplicationSeed=R--7129816874138993921--7725007534527307632)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=DFE6ECE6B5C9BD8F11EEDED771FF742D06B86D17E22F14FDF724B2B676232689}, shouldRetrySend=false), frozenFiber=0F02DEC27714BCA555ACC0365BA318C4283EDD6E4344270CC5D5AE3538CA15DD), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@51fcaa60])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@51fcaa60])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))])
    SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=DFE6ECE6B5C9BD8F11EEDED771FF742D06B86D17E22F14FDF724B2B676232689}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    2C895C6CD0577D3A7A3A0141F8F8052783FD4FE93F101CE4930510F00E1ACEF9
    0F02DEC27714BCA555ACC0365BA318C4283EDD6E4344270CC5D5AE3538CA15DD
checkpoint.timestamp: 
    2021-04-15T13:40:05.381Z
    2021-04-15T13:40:05.388Z
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
numberOfCommits: 
    3
    4
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@51fcaa60]
    []


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.391Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=TIE, L=TestVillage, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3479092221888832009), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--7129816874138993921--7725007534527307632-3-0), senderUUID=d9978a75-92ed-4c51-a739-842faf340973))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=DFE6ECE6B5C9BD8F11EEDED771FF742D06B86D17E22F14FDF724B2B676232689}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))])
checkpoint.timestamp: 
    2021-04-15T13:40:05.388Z
    2021-04-15T13:40:05.390Z


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.574Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7129816874138993921), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@431b4e6e, sender=O=TIE, L=TestVillage, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.390Z
    2021-04-15T13:40:05.574Z
checkpoint.checkpointState.sessions.SessionId(toLong=-7129816874138993921).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@431b4e6e]


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.574Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-7129816874138993921).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.574Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.581Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=8B4F331897CDED1C156CF9B16C123C2176E0C03B8145447344B10139F748EFEA}), maySkipCheckpoint=false, fiber=F62C258E59C478CD9A613FA2A806A6D0ED6AED940BFD3F40452F44CC614282E1, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[2a6e9b86-39b0-4c31-8331-23dac1acbc6c], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=b4e0df9f-852e-40f3-9136-b283f9e8c59b, timestamp: 2021-04-15T13:40:05.117Z, entityType: Invocation, sessionId=b4e0df9f-852e-40f3-9136-b283f9e8c59b, timestamp: 2021-04-15T13:40:05.117Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=4144358299289684339)=Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=4144358299289684339), additionalEntropy=7339449506302529674), SessionId(toLong=-7129816874138993921)=Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3479092221888832009), deduplicationSeed=R--7129816874138993921--7725007534527307632)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=8B4F331897CDED1C156CF9B16C123C2176E0C03B8145447344B10139F748EFEA}), frozenFiber=F62C258E59C478CD9A613FA2A806A6D0ED6AED940BFD3F40452F44CC614282E1), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@431b4e6e])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@431b4e6e])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowIoRequest: 
    SendAndReceive
    Send
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=8B4F331897CDED1C156CF9B16C123C2176E0C03B8145447344B10139F748EFEA})
checkpoint.flowState.frozenFiber.hash: 
    0F02DEC27714BCA555ACC0365BA318C4283EDD6E4344270CC5D5AE3538CA15DD
    F62C258E59C478CD9A613FA2A806A6D0ED6AED940BFD3F40452F44CC614282E1
checkpoint.timestamp: 
    2021-04-15T13:40:05.574Z
    2021-04-15T13:40:05.578Z
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.checkpointState.numberOfCommits: 
    4
    5
numberOfCommits: 
    4
    5
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@431b4e6e]
    []


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.582Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=TIE, L=TestVillage, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3479092221888832009), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--7129816874138993921--7725007534527307632-4-0), senderUUID=d9978a75-92ed-4c51-a739-842faf340973))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.589Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))]), maySkipCheckpoint=false, fiber=226459601358E4C32730B71890CD9EA29BAE5B0ED42FCAE9DA887E95FFA093A0, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[2a6e9b86-39b0-4c31-8331-23dac1acbc6c], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=b4e0df9f-852e-40f3-9136-b283f9e8c59b, timestamp: 2021-04-15T13:40:05.117Z, entityType: Invocation, sessionId=b4e0df9f-852e-40f3-9136-b283f9e8c59b, timestamp: 2021-04-15T13:40:05.117Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=4144358299289684339)=Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=4144358299289684339), additionalEntropy=7339449506302529674), SessionId(toLong=-7129816874138993921)=Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3479092221888832009), deduplicationSeed=R--7129816874138993921--7725007534527307632)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))]), frozenFiber=226459601358E4C32730B71890CD9EA29BAE5B0ED42FCAE9DA887E95FFA093A0), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=8B4F331897CDED1C156CF9B16C123C2176E0C03B8145447344B10139F748EFEA})
    Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))])
checkpoint.flowState.frozenFiber.hash: 
    F62C258E59C478CD9A613FA2A806A6D0ED6AED940BFD3F40452F44CC614282E1
    226459601358E4C32730B71890CD9EA29BAE5B0ED42FCAE9DA887E95FFA093A0
checkpoint.timestamp: 
    2021-04-15T13:40:05.581Z
    2021-04-15T13:40:05.586Z
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.checkpointState.numberOfCommits: 
    5
    6
numberOfCommits: 
    5
    6


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.589Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.765Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7129816874138993921), payload=ErrorSessionMessage(flowException=null, errorId=4063086590499276045)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@48472141, sender=O=TIE, L=TestVillage, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.589Z
    2021-04-15T13:40:05.765Z
checkpoint.checkpointState.sessions.SessionId(toLong=-7129816874138993921).receivedMessages: 
    []
    [ErrorSessionMessage(flowException=null, errorId=4063086590499276045)]
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@48472141]


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.766Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:40:05.765Z
    2021-04-15T13:40:05.766Z
checkpoint.checkpointState.sessions.SessionId(toLong=-7129816874138993921).otherSideErrored: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-7129816874138993921).receivedMessages: 
    [ErrorSessionMessage(flowException=null, errorId=4063086590499276045)]
    []


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.767Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.766Z
    2021-04-15T13:40:05.767Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false)]


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.768Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=4063086590499276045, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=0, propagating=false)


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.769Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.769Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:40:05.767Z
    2021-04-15T13:40:05.769Z
 {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=2a6e9b86-39b0-4c31-8331-23dac1acbc6c, invocation_id=b4e0df9f-852e-40f3-9136-b283f9e8c59b, invocation_timestamp=2021-04-15T13:40:05.117Z, origin=Only For Testing, session_id=b4e0df9f-852e-40f3-9136-b283f9e8c59b, session_timestamp=2021-04-15T13:40:05.117Z, thread-id=645}
[WARN ] 2021-04-15T13:40:05,783Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] error {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=2a6e9b86-39b0-4c31-8331-23dac1acbc6c, invocation_id=b4e0df9f-852e-40f3-9136-b283f9e8c59b, invocation_timestamp=2021-04-15T13:40:05.117Z, origin=Only For Testing, session_id=b4e0df9f-852e-40f3-9136-b283f9e8c59b, session_timestamp=2021-04-15T13:40:05.117Z, thread-id=645}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=TIE, L=TestVillage, C=US.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:574) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:67) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:29) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[WARN ] 2021-04-15T13:40:05,783Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=2a6e9b86-39b0-4c31-8331-23dac1acbc6c, invocation_id=b4e0df9f-852e-40f3-9136-b283f9e8c59b, invocation_timestamp=2021-04-15T13:40:05.117Z, origin=Only For Testing, session_id=b4e0df9f-852e-40f3-9136-b283f9e8c59b, session_timestamp=2021-04-15T13:40:05.117Z, thread-id=645}
[WARN ] 2021-04-15T13:40:05,805Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] errored, dumping all transitions:

 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.122Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[2a6e9b86-39b0-4c31-8331-23dac1acbc6c], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=b4e0df9f-852e-40f3-9136-b283f9e8c59b, timestamp: 2021-04-15T13:40:05.117Z, entityType: Invocation, sessionId=b4e0df9f-852e-40f3-9136-b283f9e8c59b, timestamp: 2021-04-15T13:40:05.117Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=C953EA3E3F138C744843E584FFAF386C46B693D2BA3F0258E303A1CAC93E90A0), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@70ac4b2a])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@70ac4b2a])
    SignalFlowHasStarted(flowId=[2a6e9b86-39b0-4c31-8331-23dac1acbc6c])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@70ac4b2a]
    []


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.228Z
  Event: InitiateFlow(destination=O=InvestorB, L=TestCity, C=US, wellKnownParty=O=InvestorB, L=TestCity, C=US)
  Actions: 
    AddSessionBinding(flowId=[2a6e9b86-39b0-4c31-8331-23dac1acbc6c], sessionId=SessionId(toLong=4144358299289684339))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.118Z
    2021-04-15T13:40:05.228Z
checkpoint.checkpointState.sessions.SessionId(toLong=4144358299289684339): 
    null
    Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=4144358299289684339), additionalEntropy=7339449506302529674)


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.228Z
  Event: InitiateFlow(destination=O=TIE, L=TestVillage, C=US, wellKnownParty=O=TIE, L=TestVillage, C=US)
  Actions: 
    AddSessionBinding(flowId=[2a6e9b86-39b0-4c31-8331-23dac1acbc6c], sessionId=SessionId(toLong=-7129816874138993921))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-7129816874138993921): 
    null
    Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-7129816874138993921), additionalEntropy=-7725007534527307632)


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.229Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.228Z
    2021-04-15T13:40:05.229Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.230Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.229Z
    2021-04-15T13:40:05.230Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.245Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=151DAB78EAAD770C0CEC2A24F2EF62A8F269F19C90E043E3968BAB7C391BC5F2}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=6236DBBE679575BF23F71882E98212CC8B521AA9CD573540C67B197F77F275D0, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[2a6e9b86-39b0-4c31-8331-23dac1acbc6c], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=b4e0df9f-852e-40f3-9136-b283f9e8c59b, timestamp: 2021-04-15T13:40:05.117Z, entityType: Invocation, sessionId=b4e0df9f-852e-40f3-9136-b283f9e8c59b, timestamp: 2021-04-15T13:40:05.117Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=4144358299289684339)=Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=4144358299289684339), additionalEntropy=7339449506302529674), SessionId(toLong=-7129816874138993921)=Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-7129816874138993921), additionalEntropy=-7725007534527307632)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=151DAB78EAAD770C0CEC2A24F2EF62A8F269F19C90E043E3968BAB7C391BC5F2}, shouldRetrySend=false), frozenFiber=6236DBBE679575BF23F71882E98212CC8B521AA9CD573540C67B197F77F275D0), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowIoRequest: 
    null
    SendAndReceive
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=C953EA3E3F138C744843E584FFAF386C46B693D2BA3F0258E303A1CAC93E90A0)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=151DAB78EAAD770C0CEC2A24F2EF62A8F269F19C90E043E3968BAB7C391BC5F2}, shouldRetrySend=false), frozenFiber=6236DBBE679575BF23F71882E98212CC8B521AA9CD573540C67B197F77F275D0)
checkpoint.timestamp: 
    2021-04-15T13:40:05.230Z
    2021-04-15T13:40:05.242Z
checkpoint.progressStep: 
    null
    Starting
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.251Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=TIE, L=TestVillage, C=US, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-7129816874138993921), initiationEntropy=-7725007534527307632, initiatorFlowClassName=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--7129816874138993921--7725007534527307632-1-0), senderUUID=d9978a75-92ed-4c51-a739-842faf340973))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=151DAB78EAAD770C0CEC2A24F2EF62A8F269F19C90E043E3968BAB7C391BC5F2}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))])
checkpoint.timestamp: 
    2021-04-15T13:40:05.242Z
    2021-04-15T13:40:05.245Z
checkpoint.checkpointState.sessions.SessionId(toLong=-7129816874138993921): 
    Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-7129816874138993921), additionalEntropy=-7725007534527307632)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--7129816874138993921--7725007534527307632)


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.318Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7129816874138993921), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=3479092221888832009), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62efb99d, sender=O=TIE, L=TestVillage, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.245Z
    2021-04-15T13:40:05.318Z
checkpoint.checkpointState.sessions.SessionId(toLong=-7129816874138993921): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--7129816874138993921--7725007534527307632)
    Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3479092221888832009), deduplicationSeed=R--7129816874138993921--7725007534527307632)
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62efb99d]


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.318Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.324Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7129816874138993921), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@13d3d1a8, sender=O=TIE, L=TestVillage, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.318Z
    2021-04-15T13:40:05.324Z
checkpoint.checkpointState.sessions.SessionId(toLong=-7129816874138993921).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62efb99d]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62efb99d, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@13d3d1a8]


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.324Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-7129816874138993921).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.335Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=363DF267650F596F81FF38FD78D8C239ADB2E2C63BCA736D1435D50DE3B96E9E}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=2C895C6CD0577D3A7A3A0141F8F8052783FD4FE93F101CE4930510F00E1ACEF9, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[2a6e9b86-39b0-4c31-8331-23dac1acbc6c], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=b4e0df9f-852e-40f3-9136-b283f9e8c59b, timestamp: 2021-04-15T13:40:05.117Z, entityType: Invocation, sessionId=b4e0df9f-852e-40f3-9136-b283f9e8c59b, timestamp: 2021-04-15T13:40:05.117Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=4144358299289684339)=Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=4144358299289684339), additionalEntropy=7339449506302529674), SessionId(toLong=-7129816874138993921)=Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3479092221888832009), deduplicationSeed=R--7129816874138993921--7725007534527307632)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=363DF267650F596F81FF38FD78D8C239ADB2E2C63BCA736D1435D50DE3B96E9E}, shouldRetrySend=false), frozenFiber=2C895C6CD0577D3A7A3A0141F8F8052783FD4FE93F101CE4930510F00E1ACEF9), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62efb99d, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@13d3d1a8])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62efb99d, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@13d3d1a8])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))])
    SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=363DF267650F596F81FF38FD78D8C239ADB2E2C63BCA736D1435D50DE3B96E9E}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    6236DBBE679575BF23F71882E98212CC8B521AA9CD573540C67B197F77F275D0
    2C895C6CD0577D3A7A3A0141F8F8052783FD4FE93F101CE4930510F00E1ACEF9
checkpoint.timestamp: 
    2021-04-15T13:40:05.324Z
    2021-04-15T13:40:05.332Z
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62efb99d, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@13d3d1a8]
    []


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.336Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=TIE, L=TestVillage, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3479092221888832009), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--7129816874138993921--7725007534527307632-2-0), senderUUID=d9978a75-92ed-4c51-a739-842faf340973))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=363DF267650F596F81FF38FD78D8C239ADB2E2C63BCA736D1435D50DE3B96E9E}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))])
checkpoint.timestamp: 
    2021-04-15T13:40:05.332Z
    2021-04-15T13:40:05.335Z


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.381Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7129816874138993921), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@51fcaa60, sender=O=TIE, L=TestVillage, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.335Z
    2021-04-15T13:40:05.381Z
checkpoint.checkpointState.sessions.SessionId(toLong=-7129816874138993921).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@51fcaa60]


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.381Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-7129816874138993921).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.390Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=DFE6ECE6B5C9BD8F11EEDED771FF742D06B86D17E22F14FDF724B2B676232689}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=0F02DEC27714BCA555ACC0365BA318C4283EDD6E4344270CC5D5AE3538CA15DD, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[2a6e9b86-39b0-4c31-8331-23dac1acbc6c], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=b4e0df9f-852e-40f3-9136-b283f9e8c59b, timestamp: 2021-04-15T13:40:05.117Z, entityType: Invocation, sessionId=b4e0df9f-852e-40f3-9136-b283f9e8c59b, timestamp: 2021-04-15T13:40:05.117Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=4144358299289684339)=Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=4144358299289684339), additionalEntropy=7339449506302529674), SessionId(toLong=-7129816874138993921)=Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3479092221888832009), deduplicationSeed=R--7129816874138993921--7725007534527307632)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=DFE6ECE6B5C9BD8F11EEDED771FF742D06B86D17E22F14FDF724B2B676232689}, shouldRetrySend=false), frozenFiber=0F02DEC27714BCA555ACC0365BA318C4283EDD6E4344270CC5D5AE3538CA15DD), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@51fcaa60])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@51fcaa60])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))])
    SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=DFE6ECE6B5C9BD8F11EEDED771FF742D06B86D17E22F14FDF724B2B676232689}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    2C895C6CD0577D3A7A3A0141F8F8052783FD4FE93F101CE4930510F00E1ACEF9
    0F02DEC27714BCA555ACC0365BA318C4283EDD6E4344270CC5D5AE3538CA15DD
checkpoint.timestamp: 
    2021-04-15T13:40:05.381Z
    2021-04-15T13:40:05.388Z
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
numberOfCommits: 
    3
    4
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@51fcaa60]
    []


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.391Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=TIE, L=TestVillage, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3479092221888832009), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--7129816874138993921--7725007534527307632-3-0), senderUUID=d9978a75-92ed-4c51-a739-842faf340973))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=DFE6ECE6B5C9BD8F11EEDED771FF742D06B86D17E22F14FDF724B2B676232689}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))])
checkpoint.timestamp: 
    2021-04-15T13:40:05.388Z
    2021-04-15T13:40:05.390Z


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.574Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7129816874138993921), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@431b4e6e, sender=O=TIE, L=TestVillage, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.390Z
    2021-04-15T13:40:05.574Z
checkpoint.checkpointState.sessions.SessionId(toLong=-7129816874138993921).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@431b4e6e]


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.574Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-7129816874138993921).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.574Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.581Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=8B4F331897CDED1C156CF9B16C123C2176E0C03B8145447344B10139F748EFEA}), maySkipCheckpoint=false, fiber=F62C258E59C478CD9A613FA2A806A6D0ED6AED940BFD3F40452F44CC614282E1, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[2a6e9b86-39b0-4c31-8331-23dac1acbc6c], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=b4e0df9f-852e-40f3-9136-b283f9e8c59b, timestamp: 2021-04-15T13:40:05.117Z, entityType: Invocation, sessionId=b4e0df9f-852e-40f3-9136-b283f9e8c59b, timestamp: 2021-04-15T13:40:05.117Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=4144358299289684339)=Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=4144358299289684339), additionalEntropy=7339449506302529674), SessionId(toLong=-7129816874138993921)=Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3479092221888832009), deduplicationSeed=R--7129816874138993921--7725007534527307632)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=8B4F331897CDED1C156CF9B16C123C2176E0C03B8145447344B10139F748EFEA}), frozenFiber=F62C258E59C478CD9A613FA2A806A6D0ED6AED940BFD3F40452F44CC614282E1), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@431b4e6e])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@431b4e6e])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowIoRequest: 
    SendAndReceive
    Send
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=8B4F331897CDED1C156CF9B16C123C2176E0C03B8145447344B10139F748EFEA})
checkpoint.flowState.frozenFiber.hash: 
    0F02DEC27714BCA555ACC0365BA318C4283EDD6E4344270CC5D5AE3538CA15DD
    F62C258E59C478CD9A613FA2A806A6D0ED6AED940BFD3F40452F44CC614282E1
checkpoint.timestamp: 
    2021-04-15T13:40:05.574Z
    2021-04-15T13:40:05.578Z
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.checkpointState.numberOfCommits: 
    4
    5
numberOfCommits: 
    4
    5
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@431b4e6e]
    []


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.582Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=TIE, L=TestVillage, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3479092221888832009), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--7129816874138993921--7725007534527307632-4-0), senderUUID=d9978a75-92ed-4c51-a739-842faf340973))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.589Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))]), maySkipCheckpoint=false, fiber=226459601358E4C32730B71890CD9EA29BAE5B0ED42FCAE9DA887E95FFA093A0, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[2a6e9b86-39b0-4c31-8331-23dac1acbc6c], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=b4e0df9f-852e-40f3-9136-b283f9e8c59b, timestamp: 2021-04-15T13:40:05.117Z, entityType: Invocation, sessionId=b4e0df9f-852e-40f3-9136-b283f9e8c59b, timestamp: 2021-04-15T13:40:05.117Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=4144358299289684339)=Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=4144358299289684339), additionalEntropy=7339449506302529674), SessionId(toLong=-7129816874138993921)=Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3479092221888832009), deduplicationSeed=R--7129816874138993921--7725007534527307632)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))]), frozenFiber=226459601358E4C32730B71890CD9EA29BAE5B0ED42FCAE9DA887E95FFA093A0), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))=8B4F331897CDED1C156CF9B16C123C2176E0C03B8145447344B10139F748EFEA})
    Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))])
checkpoint.flowState.frozenFiber.hash: 
    F62C258E59C478CD9A613FA2A806A6D0ED6AED940BFD3F40452F44CC614282E1
    226459601358E4C32730B71890CD9EA29BAE5B0ED42FCAE9DA887E95FFA093A0
checkpoint.timestamp: 
    2021-04-15T13:40:05.581Z
    2021-04-15T13:40:05.586Z
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.checkpointState.numberOfCommits: 
    5
    6
numberOfCommits: 
    5
    6


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.589Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.765Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7129816874138993921), payload=ErrorSessionMessage(flowException=null, errorId=4063086590499276045)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@48472141, sender=O=TIE, L=TestVillage, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.589Z
    2021-04-15T13:40:05.765Z
checkpoint.checkpointState.sessions.SessionId(toLong=-7129816874138993921).receivedMessages: 
    []
    [ErrorSessionMessage(flowException=null, errorId=4063086590499276045)]
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@48472141]


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.766Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:40:05.765Z
    2021-04-15T13:40:05.766Z
checkpoint.checkpointState.sessions.SessionId(toLong=-7129816874138993921).otherSideErrored: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-7129816874138993921).receivedMessages: 
    [ErrorSessionMessage(flowException=null, errorId=4063086590499276045)]
    []


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.767Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:40:05.766Z
    2021-04-15T13:40:05.767Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false)]


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.768Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=4063086590499276045, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=0, propagating=false)


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.769Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.769Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:40:05.767Z
    2021-04-15T13:40:05.769Z


 --- Transition of flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] ---
  Timestamp: 2021-04-15T13:40:05.789Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=4063086590499276045)], sessions=[], senderUUID=d9978a75-92ed-4c51-a739-842faf340973)
    CreateTransaction
    RemoveCheckpoint(id=[2a6e9b86-39b0-4c31-8331-23dac1acbc6c], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@48472141])
    ReleaseSoftLocks(uuid=2a6e9b86-39b0-4c31-8331-23dac1acbc6c)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@48472141])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=4144358299289684339), SessionId(toLong=-7129816874138993921)])
    RemoveFlow(flowId=[2a6e9b86-39b0-4c31-8331-23dac1acbc6c], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=4063086590499276045, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=b4e0df9f-852e-40f3-9136-b283f9e8c59b, timestamp: 2021-04-15T13:40:05.117Z, entityType: Invocation, sessionId=b4e0df9f-852e-40f3-9136-b283f9e8c59b, timestamp: 2021-04-15T13:40:05.117Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=4144358299289684339)=Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=4144358299289684339), additionalEntropy=7339449506302529674), SessionId(toLong=-7129816874138993921)=Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=3479092221888832009), deduplicationSeed=R--7129816874138993921--7725007534527307632)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=9257D4C837703ADCEF1CDC272EFD8CFC21AB7F877587079E2F971EC818B7CFD3), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=7), flowState=net.corda.node.services.statemachine.FlowState$Finished@146a9b5, errorState=Errored(errors=[FlowError(errorId=4063086590499276045, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator@4e4b8bec, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, senderUUID=d9978a75-92ed-4c51-a739-842faf340973, reloadCheckpointAfterSuspendCount=null, numberOfCommits=7, lock=java.util.concurrent.Semaphore@34824a6[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=-7129816874138993921))]), frozenFiber=226459601358E4C32730B71890CD9EA29BAE5B0ED42FCAE9DA887E95FFA093A0)
    net.corda.node.services.statemachine.FlowState$Finished@146a9b5
checkpoint.timestamp: 
    2021-04-15T13:40:05.769Z
    2021-04-15T13:40:05.783Z
checkpoint.checkpointState.numberOfCommits: 
    6
    7
isRemoved: 
    false
    true
numberOfCommits: 
    6
    7
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@48472141]
    []
 {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=2a6e9b86-39b0-4c31-8331-23dac1acbc6c, invocation_id=b4e0df9f-852e-40f3-9136-b283f9e8c59b, invocation_timestamp=2021-04-15T13:40:05.117Z, origin=Only For Testing, session_id=b4e0df9f-852e-40f3-9136-b283f9e8c59b, session_timestamp=2021-04-15T13:40:05.117Z, thread-id=645}
[WARN ] 2021-04-15T13:40:05,805Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [2a6e9b86-39b0-4c31-8331-23dac1acbc6c] error {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=2a6e9b86-39b0-4c31-8331-23dac1acbc6c, invocation_id=b4e0df9f-852e-40f3-9136-b283f9e8c59b, invocation_timestamp=2021-04-15T13:40:05.117Z, origin=Only For Testing, session_id=b4e0df9f-852e-40f3-9136-b283f9e8c59b, session_timestamp=2021-04-15T13:40:05.117Z, thread-id=645}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=TIE, L=TestVillage, C=US.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:574) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.CollectSignatureFlow.call(CollectSignaturesFlow.kt:199) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:67) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:29) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[INFO ] 2021-04-15T13:40:05,823Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2021-04-15T13:40:05,852Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:40:05,853Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:40:05,858Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2021-04-15T13:40:05,875Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:40:05,875Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:40:05,878Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2021-04-15T13:40:05,892Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:40:05,892Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:40:05,894Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2021-04-15T13:40:05,908Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:40:05,908Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:41:18,546Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/peterli/Desktop/tokenTest/workflows ... {}
[INFO ] 2021-04-15T13:41:18,770Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:41:20,099Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2021-04-15T13:41:21,062Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2021-04-15T13:41:21,076Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2021-04-15T13:41:21,076Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:41:21,709Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:41:21,733Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2021-04-15T13:41:22,259Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:41:22,271Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:41:22,271Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2021-04-15T13:41:22,454Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:41:22,475Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:41:23,092Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2021-04-15T13:41:23,941Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:41:23,962Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2021-04-15T13:41:23,983Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:41:23,983Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2021-04-15T13:41:23,983Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:41:24,827Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:41:24,827Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2021-04-15T13:41:24,950Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:41:24,950Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2021-04-15T13:41:24,973Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:41:24,973Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2021-04-15T13:41:25,083Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:41:25,083Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:41:25,223Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:41:25,245Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:41:25,312Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2021-04-15T13:41:25,576Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:41:25,576Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2021-04-15T13:41:25,577Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:41:25,610Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2021-04-15T13:41:25,610Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:41:25,643Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:41:25,654Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2021-04-15T13:41:25,654Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:41:25,654Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2021-04-15T13:41:25,654Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:41:25,654Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:41:25,669Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2021-04-15T13:41:25,763Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:41:25,763Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:41:25,786Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:41:25,786Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:41:25,786Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:41:25,786Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:41:25,786Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:41:25,786Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:41:25,786Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:41:25,786Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:41:25,798Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2021-04-15T13:41:25,808Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:41:25,818Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:41:25,840Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2021-04-15T13:41:25,873Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:41:25,873Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2021-04-15T13:41:25,873Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:41:25,884Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2021-04-15T13:41:25,884Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:41:25,884Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:41:25,897Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2021-04-15T13:41:25,897Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:41:25,897Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2021-04-15T13:41:25,898Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:41:25,898Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:41:25,908Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2021-04-15T13:41:25,940Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:41:25,940Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:41:25,940Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:41:25,952Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:41:25,952Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:41:25,952Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:41:25,952Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:41:25,952Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:41:25,953Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:41:25,953Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:41:25,953Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:41:25,953Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:41:25,953Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2021-04-15T13:41:27,644Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:41:27,644Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:41:27,644Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2021-04-15T13:41:27,654Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:41:27,656Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:41:27,666Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/peterli/Desktop/tokenTest/.gradle {}
[INFO ] 2021-04-15T13:41:27,666Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:41:27,691Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2021-04-15T13:41:32,538Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/0/cordapps] {}
[INFO ] 2021-04-15T13:41:32,547Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:41:32,567Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:41:32,685Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:41:32,701Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:41:32,752Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:41:34,353Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:41:34,618Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:41:34,689Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:41:34,709Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:41:34,713Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL6AXgfXmAiUNkQcVD6iMdhiUCDScY6vVQyK2vrSpUt1ss, alias: identity-private-key {}
[INFO ] 2021-04-15T13:41:34,865Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:41:34,866Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:41:34,870Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:34,871Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:34,871Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:34,872Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:34,872Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:34,872Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:34,873Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:34,873Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:34,874Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:34,875Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:34,875Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:41:34,876Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:41:34,877Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:41:34,908Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:41:34,997Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:41:14.184Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:41:41,008Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:41:41,085Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-04-15T13:41:41,091Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-04-15T13:41:43,924Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-04-15T13:41:44,298Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:41:44,308Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494104298), owningKey=DL6AXgfXmAiUNkQcVD6iMdhiUCDScY6vVQyK2vrSpUt1ss {}
[INFO ] 2021-04-15T13:41:44,308Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:41:44,488Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494104298) {}
[INFO ] 2021-04-15T13:41:44,550Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:41:44,587Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:41:44,589Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:41:44,635Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494104298), owningKey=DL6AXgfXmAiUNkQcVD6iMdhiUCDScY6vVQyK2vrSpUt1ss {}
[INFO ] 2021-04-15T13:41:44,636Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:41:44,754Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:41:44,782Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:41:44,797Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:41:44,811Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:41:44,902Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:41:45,012Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:41:45,012Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-04-15T13:41:45,807Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494104298) {}
[INFO ] 2021-04-15T13:41:45,815Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494104298), owningKey=DL6AXgfXmAiUNkQcVD6iMdhiUCDScY6vVQyK2vrSpUt1ss {}
[INFO ] 2021-04-15T13:41:45,815Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:41:45,815Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494104298), owningKey=DL6AXgfXmAiUNkQcVD6iMdhiUCDScY6vVQyK2vrSpUt1ss {}
[INFO ] 2021-04-15T13:41:45,815Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:41:45,826Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/1/cordapps] {}
[INFO ] 2021-04-15T13:41:45,826Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:41:45,826Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:41:45,837Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:41:45,843Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:41:45,857Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:41:45,921Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:41:45,922Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:41:45,923Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:41:45,966Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:41:45,966Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLFV2rQsU697sLciygGpu1Z2avkH2WU9nr2qtxWAYQ6Ch1, alias: identity-private-key {}
[INFO ] 2021-04-15T13:41:45,975Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:41:45,975Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:41:45,975Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:45,975Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:45,975Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:45,975Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:45,976Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:45,976Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:45,976Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:45,976Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:45,976Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:45,976Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:45,976Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:41:45,976Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:41:45,976Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:41:45,976Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:41:45,987Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:41:14.184Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:41:46,788Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:41:46,790Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:41:46,790Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:41:47,042Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:41:47,051Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:41:47,057Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494107051), owningKey=DLFV2rQsU697sLciygGpu1Z2avkH2WU9nr2qtxWAYQ6Ch1 {}
[INFO ] 2021-04-15T13:41:47,057Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:41:47,070Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494107051) {}
[INFO ] 2021-04-15T13:41:47,082Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:41:47,083Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:41:47,083Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:41:47,097Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494107051), owningKey=DLFV2rQsU697sLciygGpu1Z2avkH2WU9nr2qtxWAYQ6Ch1 {}
[INFO ] 2021-04-15T13:41:47,097Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:41:47,141Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:41:47,168Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:41:47,172Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:41:47,172Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:41:47,173Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:41:47,180Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:41:47,215Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494107051) {}
[INFO ] 2021-04-15T13:41:47,218Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494104298), owningKey=DL6AXgfXmAiUNkQcVD6iMdhiUCDScY6vVQyK2vrSpUt1ss {}
[INFO ] 2021-04-15T13:41:47,218Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:41:47,241Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494107051), owningKey=DLFV2rQsU697sLciygGpu1Z2avkH2WU9nr2qtxWAYQ6Ch1 {}
[INFO ] 2021-04-15T13:41:47,241Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:41:47,256Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494107051), owningKey=DLFV2rQsU697sLciygGpu1Z2avkH2WU9nr2qtxWAYQ6Ch1 {}
[INFO ] 2021-04-15T13:41:47,256Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:41:47,257Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494107051), owningKey=DLFV2rQsU697sLciygGpu1Z2avkH2WU9nr2qtxWAYQ6Ch1 {}
[INFO ] 2021-04-15T13:41:47,257Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:41:47,268Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/2/cordapps] {}
[INFO ] 2021-04-15T13:41:47,269Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:41:47,269Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:41:47,279Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:41:47,286Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:41:47,297Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:41:47,345Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:41:47,346Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:41:47,347Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:41:47,389Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:41:47,390Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLArRSgKwVNbbq9xWTHU4VULvH9u5d6bHWr2csQmrPD7YH, alias: identity-private-key {}
[INFO ] 2021-04-15T13:41:47,397Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:41:47,397Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:41:47,398Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:47,398Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:47,398Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:47,398Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:47,398Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:47,398Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:47,398Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:47,398Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:47,398Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:47,398Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:47,398Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:41:47,398Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:41:47,399Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:41:47,399Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:41:47,405Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:41:14.184Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:41:48,190Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:41:48,191Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:41:48,191Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:41:48,392Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:41:48,400Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:41:48,404Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494108400), owningKey=DLArRSgKwVNbbq9xWTHU4VULvH9u5d6bHWr2csQmrPD7YH {}
[INFO ] 2021-04-15T13:41:48,404Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:41:48,417Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494108400) {}
[INFO ] 2021-04-15T13:41:48,429Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:41:48,429Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:41:48,430Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:41:48,441Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494108400), owningKey=DLArRSgKwVNbbq9xWTHU4VULvH9u5d6bHWr2csQmrPD7YH {}
[INFO ] 2021-04-15T13:41:48,441Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:41:48,474Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:41:48,505Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:41:48,508Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:41:48,509Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:41:48,509Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:41:48,517Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:41:48,550Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494108400) {}
[INFO ] 2021-04-15T13:41:48,553Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494104298), owningKey=DL6AXgfXmAiUNkQcVD6iMdhiUCDScY6vVQyK2vrSpUt1ss {}
[INFO ] 2021-04-15T13:41:48,553Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:41:48,575Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494108400), owningKey=DLArRSgKwVNbbq9xWTHU4VULvH9u5d6bHWr2csQmrPD7YH {}
[INFO ] 2021-04-15T13:41:48,575Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:41:48,593Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494107051), owningKey=DLFV2rQsU697sLciygGpu1Z2avkH2WU9nr2qtxWAYQ6Ch1 {}
[INFO ] 2021-04-15T13:41:48,594Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:41:48,610Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494108400), owningKey=DLArRSgKwVNbbq9xWTHU4VULvH9u5d6bHWr2csQmrPD7YH {}
[INFO ] 2021-04-15T13:41:48,610Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:41:48,626Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494108400), owningKey=DLArRSgKwVNbbq9xWTHU4VULvH9u5d6bHWr2csQmrPD7YH {}
[INFO ] 2021-04-15T13:41:48,626Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:41:48,626Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494108400), owningKey=DLArRSgKwVNbbq9xWTHU4VULvH9u5d6bHWr2csQmrPD7YH {}
[INFO ] 2021-04-15T13:41:48,626Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:41:48,641Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/3/cordapps] {}
[INFO ] 2021-04-15T13:41:48,642Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/3/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/3/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/3/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/3/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:41:48,642Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/3/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:41:48,650Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/3/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:41:48,656Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/3/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:41:48,675Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/3/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:41:48,724Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:41:48,725Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:41:48,726Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:41:48,768Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:41:48,769Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL3djYYMSsQW9yhSiBYYxeoeRWduw866qoKsHCDVfbFnzX, alias: identity-private-key {}
[INFO ] 2021-04-15T13:41:48,779Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:41:48,779Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:41:48,779Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:48,779Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:48,780Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:48,780Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:48,780Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:48,780Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:48,780Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:48,780Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:48,780Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:48,780Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:41:48,780Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:41:48,780Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:41:48,780Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:41:48,780Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:41:48,786Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:41:14.184Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:41:49,591Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:41:49,593Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:41:49,593Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:41:49,775Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:41:49,783Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:41:49,788Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494109783), owningKey=DL3djYYMSsQW9yhSiBYYxeoeRWduw866qoKsHCDVfbFnzX {}
[INFO ] 2021-04-15T13:41:49,788Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:41:49,798Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494109783) {}
[INFO ] 2021-04-15T13:41:49,807Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:41:49,807Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:41:49,807Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:41:49,817Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494109783), owningKey=DL3djYYMSsQW9yhSiBYYxeoeRWduw866qoKsHCDVfbFnzX {}
[INFO ] 2021-04-15T13:41:49,817Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:41:49,858Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:41:49,887Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:41:49,891Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:41:49,891Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-134117.120-DE72B6610C3D9ACC/nodes/3/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:41:49,892Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:41:49,899Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:41:49,925Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494109783) {}
[INFO ] 2021-04-15T13:41:49,928Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494104298), owningKey=DL6AXgfXmAiUNkQcVD6iMdhiUCDScY6vVQyK2vrSpUt1ss {}
[INFO ] 2021-04-15T13:41:49,928Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:41:49,941Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494109783), owningKey=DL3djYYMSsQW9yhSiBYYxeoeRWduw866qoKsHCDVfbFnzX {}
[INFO ] 2021-04-15T13:41:49,941Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:41:49,960Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494107051), owningKey=DLFV2rQsU697sLciygGpu1Z2avkH2WU9nr2qtxWAYQ6Ch1 {}
[INFO ] 2021-04-15T13:41:49,960Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:41:49,975Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494109783), owningKey=DL3djYYMSsQW9yhSiBYYxeoeRWduw866qoKsHCDVfbFnzX {}
[INFO ] 2021-04-15T13:41:49,975Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:41:49,989Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494108400), owningKey=DLArRSgKwVNbbq9xWTHU4VULvH9u5d6bHWr2csQmrPD7YH {}
[INFO ] 2021-04-15T13:41:49,989Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:41:50,003Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494109783), owningKey=DL3djYYMSsQW9yhSiBYYxeoeRWduw866qoKsHCDVfbFnzX {}
[INFO ] 2021-04-15T13:41:50,003Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:41:50,016Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494109783), owningKey=DL3djYYMSsQW9yhSiBYYxeoeRWduw866qoKsHCDVfbFnzX {}
[INFO ] 2021-04-15T13:41:50,016Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:41:50,016Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494109783), owningKey=DL3djYYMSsQW9yhSiBYYxeoeRWduw866qoKsHCDVfbFnzX {}
[INFO ] 2021-04-15T13:41:50,016Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:41:50,757Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=30845236-05e7-40a3-83ef-4f8db2726bd0, invocation_id=99cb9fe4-e3b3-4bb0-90cf-93b3060aa345, invocation_timestamp=2021-04-15T13:41:50.062Z, origin=Only For Testing, session_id=99cb9fe4-e3b3-4bb0-90cf-93b3060aa345, session_timestamp=2021-04-15T13:41:50.062Z, thread-id=645, tx_id=F35142C8D6675BCEF3958B4205F4F0B2C74B0C2D702C81E1B3A94E4DC641804F}
[INFO ] 2021-04-15T13:41:50,757Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=30845236-05e7-40a3-83ef-4f8db2726bd0, invocation_id=99cb9fe4-e3b3-4bb0-90cf-93b3060aa345, invocation_timestamp=2021-04-15T13:41:50.062Z, origin=Only For Testing, session_id=99cb9fe4-e3b3-4bb0-90cf-93b3060aa345, session_timestamp=2021-04-15T13:41:50.062Z, thread-id=645, tx_id=F35142C8D6675BCEF3958B4205F4F0B2C74B0C2D702C81E1B3A94E4DC641804F}
[INFO ] 2021-04-15T13:41:50,891Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=30845236-05e7-40a3-83ef-4f8db2726bd0, invocation_id=99cb9fe4-e3b3-4bb0-90cf-93b3060aa345, invocation_timestamp=2021-04-15T13:41:50.062Z, origin=Only For Testing, session_id=99cb9fe4-e3b3-4bb0-90cf-93b3060aa345, session_timestamp=2021-04-15T13:41:50.062Z, thread-id=645, tx_id=F35142C8D6675BCEF3958B4205F4F0B2C74B0C2D702C81E1B3A94E4DC641804F}
[INFO ] 2021-04-15T13:41:50,891Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=30845236-05e7-40a3-83ef-4f8db2726bd0, invocation_id=99cb9fe4-e3b3-4bb0-90cf-93b3060aa345, invocation_timestamp=2021-04-15T13:41:50.062Z, origin=Only For Testing, session_id=99cb9fe4-e3b3-4bb0-90cf-93b3060aa345, session_timestamp=2021-04-15T13:41:50.062Z, thread-id=645, tx_id=F35142C8D6675BCEF3958B4205F4F0B2C74B0C2D702C81E1B3A94E4DC641804F}
[INFO ] 2021-04-15T13:41:51,392Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary, L=London, C=GB. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=c72f33a3-0455-4a27-846f-8bece5d36089, invocation_id=e099e8e4-4bba-43da-b71b-9c50f0c3dd92, invocation_timestamp=2021-04-15T13:41:50.985Z, origin=Only For Testing, session_id=e099e8e4-4bba-43da-b71b-9c50f0c3dd92, session_timestamp=2021-04-15T13:41:50.985Z, thread-id=645, tx_id=F0209E0F982D3DAAEACC2B165CA94B90D9A6EE8BDA4CFEF1FA860F14FC0EF21D}
[INFO ] 2021-04-15T13:41:51,615Z [Mock network] corda.flow. - Received a notarisation request for Tx [F0209E0F982D3DAAEACC2B165CA94B90D9A6EE8BDA4CFEF1FA860F14FC0EF21D] from [O=InvestorA, L=TestLand, C=US] {fiber-id=10000003, flow-id=f5f12c28-941f-46cb-9d68-278338405ac3, invocation_id=d1321dd0-a5da-4cc3-998e-2b43b836530c, invocation_timestamp=2021-04-15T13:41:51.565Z, origin=O=InvestorA, L=TestLand, C=US, session_id=d1321dd0-a5da-4cc3-998e-2b43b836530c, session_timestamp=2021-04-15T13:41:51.565Z, thread-id=645}
[INFO ] 2021-04-15T13:41:52,413Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 0 input states and 1 references {}
[INFO ] 2021-04-15T13:41:52,451Z [Mock network] corda.flow. - Transaction [F0209E0F982D3DAAEACC2B165CA94B90D9A6EE8BDA4CFEF1FA860F14FC0EF21D] successfully notarised, sending signature back to [O=InvestorA, L=TestLand, C=US] {fiber-id=10000003, flow-id=f5f12c28-941f-46cb-9d68-278338405ac3, invocation_id=d1321dd0-a5da-4cc3-998e-2b43b836530c, invocation_timestamp=2021-04-15T13:41:51.565Z, origin=O=InvestorA, L=TestLand, C=US, session_id=d1321dd0-a5da-4cc3-998e-2b43b836530c, session_timestamp=2021-04-15T13:41:51.565Z, thread-id=645}
[INFO ] 2021-04-15T13:41:52,508Z [Mock network] corda.flow. - Notary responded (O=Notary, L=London, C=GB). {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=c72f33a3-0455-4a27-846f-8bece5d36089, invocation_id=e099e8e4-4bba-43da-b71b-9c50f0c3dd92, invocation_timestamp=2021-04-15T13:41:50.985Z, origin=Only For Testing, session_id=e099e8e4-4bba-43da-b71b-9c50f0c3dd92, session_timestamp=2021-04-15T13:41:50.985Z, thread-id=645, tx_id=F0209E0F982D3DAAEACC2B165CA94B90D9A6EE8BDA4CFEF1FA860F14FC0EF21D}
[INFO ] 2021-04-15T13:41:52,510Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=c72f33a3-0455-4a27-846f-8bece5d36089, invocation_id=e099e8e4-4bba-43da-b71b-9c50f0c3dd92, invocation_timestamp=2021-04-15T13:41:50.985Z, origin=Only For Testing, session_id=e099e8e4-4bba-43da-b71b-9c50f0c3dd92, session_timestamp=2021-04-15T13:41:50.985Z, thread-id=645, tx_id=F0209E0F982D3DAAEACC2B165CA94B90D9A6EE8BDA4CFEF1FA860F14FC0EF21D}
[INFO ] 2021-04-15T13:41:52,551Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=c72f33a3-0455-4a27-846f-8bece5d36089, invocation_id=e099e8e4-4bba-43da-b71b-9c50f0c3dd92, invocation_timestamp=2021-04-15T13:41:50.985Z, origin=Only For Testing, session_id=e099e8e4-4bba-43da-b71b-9c50f0c3dd92, session_timestamp=2021-04-15T13:41:50.985Z, thread-id=645, tx_id=F0209E0F982D3DAAEACC2B165CA94B90D9A6EE8BDA4CFEF1FA860F14FC0EF21D}
[INFO ] 2021-04-15T13:41:52,551Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=c72f33a3-0455-4a27-846f-8bece5d36089, invocation_id=e099e8e4-4bba-43da-b71b-9c50f0c3dd92, invocation_timestamp=2021-04-15T13:41:50.985Z, origin=Only For Testing, session_id=e099e8e4-4bba-43da-b71b-9c50f0c3dd92, session_timestamp=2021-04-15T13:41:50.985Z, thread-id=645, tx_id=F0209E0F982D3DAAEACC2B165CA94B90D9A6EE8BDA4CFEF1FA860F14FC0EF21D}
[INFO ] 2021-04-15T13:41:52,878Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary, L=London, C=GB. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=7795c58a-68fb-42ca-b98c-f91cd533ae2b, invocation_id=9213026f-f8f5-4a7f-b5f9-d6cd42d4446e, invocation_timestamp=2021-04-15T13:41:52.630Z, origin=Only For Testing, session_id=9213026f-f8f5-4a7f-b5f9-d6cd42d4446e, session_timestamp=2021-04-15T13:41:52.630Z, thread-id=645, tx_id=B4B004E01B2B513C0F8DCF7F3837ACDDE62300E45BD080B467BF1FEA7D8A0BD6}
[INFO ] 2021-04-15T13:41:52,930Z [Mock network] corda.flow. - Received a notarisation request for Tx [B4B004E01B2B513C0F8DCF7F3837ACDDE62300E45BD080B467BF1FEA7D8A0BD6] from [O=InvestorA, L=TestLand, C=US] {fiber-id=10000005, flow-id=9111c253-619e-4706-80b7-13b72b948afc, invocation_id=04f5365a-edba-4716-8dc8-bb62d0fbaff5, invocation_timestamp=2021-04-15T13:41:52.911Z, origin=O=InvestorA, L=TestLand, C=US, session_id=04f5365a-edba-4716-8dc8-bb62d0fbaff5, session_timestamp=2021-04-15T13:41:52.911Z, thread-id=645}
[INFO ] 2021-04-15T13:41:53,261Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 1 references {}
[INFO ] 2021-04-15T13:41:53,268Z [Mock network] corda.flow. - Transaction [B4B004E01B2B513C0F8DCF7F3837ACDDE62300E45BD080B467BF1FEA7D8A0BD6] successfully notarised, sending signature back to [O=InvestorA, L=TestLand, C=US] {fiber-id=10000005, flow-id=9111c253-619e-4706-80b7-13b72b948afc, invocation_id=04f5365a-edba-4716-8dc8-bb62d0fbaff5, invocation_timestamp=2021-04-15T13:41:52.911Z, origin=O=InvestorA, L=TestLand, C=US, session_id=04f5365a-edba-4716-8dc8-bb62d0fbaff5, session_timestamp=2021-04-15T13:41:52.911Z, thread-id=645}
[INFO ] 2021-04-15T13:41:53,343Z [Mock network] corda.flow. - Notary responded (O=Notary, L=London, C=GB). {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=7795c58a-68fb-42ca-b98c-f91cd533ae2b, invocation_id=9213026f-f8f5-4a7f-b5f9-d6cd42d4446e, invocation_timestamp=2021-04-15T13:41:52.630Z, origin=Only For Testing, session_id=9213026f-f8f5-4a7f-b5f9-d6cd42d4446e, session_timestamp=2021-04-15T13:41:52.630Z, thread-id=645, tx_id=B4B004E01B2B513C0F8DCF7F3837ACDDE62300E45BD080B467BF1FEA7D8A0BD6}
[INFO ] 2021-04-15T13:41:53,345Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=7795c58a-68fb-42ca-b98c-f91cd533ae2b, invocation_id=9213026f-f8f5-4a7f-b5f9-d6cd42d4446e, invocation_timestamp=2021-04-15T13:41:52.630Z, origin=Only For Testing, session_id=9213026f-f8f5-4a7f-b5f9-d6cd42d4446e, session_timestamp=2021-04-15T13:41:52.630Z, thread-id=645, tx_id=B4B004E01B2B513C0F8DCF7F3837ACDDE62300E45BD080B467BF1FEA7D8A0BD6}
[INFO ] 2021-04-15T13:41:53,364Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=7795c58a-68fb-42ca-b98c-f91cd533ae2b, invocation_id=9213026f-f8f5-4a7f-b5f9-d6cd42d4446e, invocation_timestamp=2021-04-15T13:41:52.630Z, origin=Only For Testing, session_id=9213026f-f8f5-4a7f-b5f9-d6cd42d4446e, session_timestamp=2021-04-15T13:41:52.630Z, thread-id=645, tx_id=B4B004E01B2B513C0F8DCF7F3837ACDDE62300E45BD080B467BF1FEA7D8A0BD6}
[INFO ] 2021-04-15T13:41:53,403Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=InvestorA, L=TestLand, C=US. {fiber-id=10000006, flow-id=d41ed229-bad0-4e9f-9e6f-2746f1abd84f, invocation_id=2cd31efc-3259-4669-8a7d-22157f98ac07, invocation_timestamp=2021-04-15T13:41:52.964Z, origin=O=InvestorA, L=TestLand, C=US, session_id=2cd31efc-3259-4669-8a7d-22157f98ac07, session_timestamp=2021-04-15T13:41:52.964Z, thread-id=645, tx_id=B4B004E01B2B513C0F8DCF7F3837ACDDE62300E45BD080B467BF1FEA7D8A0BD6}
[INFO ] 2021-04-15T13:41:53,672Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=d41ed229-bad0-4e9f-9e6f-2746f1abd84f, invocation_id=2cd31efc-3259-4669-8a7d-22157f98ac07, invocation_timestamp=2021-04-15T13:41:52.964Z, origin=O=InvestorA, L=TestLand, C=US, session_id=2cd31efc-3259-4669-8a7d-22157f98ac07, session_timestamp=2021-04-15T13:41:52.964Z, thread-id=645, tx_id=B4B004E01B2B513C0F8DCF7F3837ACDDE62300E45BD080B467BF1FEA7D8A0BD6}
[INFO ] 2021-04-15T13:41:53,686Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000006, flow-id=d41ed229-bad0-4e9f-9e6f-2746f1abd84f, invocation_id=2cd31efc-3259-4669-8a7d-22157f98ac07, invocation_timestamp=2021-04-15T13:41:52.964Z, origin=O=InvestorA, L=TestLand, C=US, session_id=2cd31efc-3259-4669-8a7d-22157f98ac07, session_timestamp=2021-04-15T13:41:52.964Z, thread-id=645, tx_id=B4B004E01B2B513C0F8DCF7F3837ACDDE62300E45BD080B467BF1FEA7D8A0BD6}
[INFO ] 2021-04-15T13:41:53,709Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000006, flow-id=d41ed229-bad0-4e9f-9e6f-2746f1abd84f, invocation_id=2cd31efc-3259-4669-8a7d-22157f98ac07, invocation_timestamp=2021-04-15T13:41:52.964Z, origin=O=InvestorA, L=TestLand, C=US, session_id=2cd31efc-3259-4669-8a7d-22157f98ac07, session_timestamp=2021-04-15T13:41:52.964Z, thread-id=645, tx_id=B4B004E01B2B513C0F8DCF7F3837ACDDE62300E45BD080B467BF1FEA7D8A0BD6}
[INFO ] 2021-04-15T13:41:53,730Z [Mock network] corda.flow. - Party O=InvestorB, L=TestCity, C=US received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=7795c58a-68fb-42ca-b98c-f91cd533ae2b, invocation_id=9213026f-f8f5-4a7f-b5f9-d6cd42d4446e, invocation_timestamp=2021-04-15T13:41:52.630Z, origin=Only For Testing, session_id=9213026f-f8f5-4a7f-b5f9-d6cd42d4446e, session_timestamp=2021-04-15T13:41:52.630Z, thread-id=645, tx_id=B4B004E01B2B513C0F8DCF7F3837ACDDE62300E45BD080B467BF1FEA7D8A0BD6}
[INFO ] 2021-04-15T13:41:53,751Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=InvestorA, L=TestLand, C=US. {fiber-id=10000007, flow-id=87ec0e30-6cec-4459-9475-9db6b6a5caef, invocation_id=8b60a315-55bd-4a85-93e2-9f937a7c3c50, invocation_timestamp=2021-04-15T13:41:53.020Z, origin=O=InvestorA, L=TestLand, C=US, session_id=8b60a315-55bd-4a85-93e2-9f937a7c3c50, session_timestamp=2021-04-15T13:41:53.020Z, thread-id=645, tx_id=B4B004E01B2B513C0F8DCF7F3837ACDDE62300E45BD080B467BF1FEA7D8A0BD6}
[INFO ] 2021-04-15T13:41:54,232Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=87ec0e30-6cec-4459-9475-9db6b6a5caef, invocation_id=8b60a315-55bd-4a85-93e2-9f937a7c3c50, invocation_timestamp=2021-04-15T13:41:53.020Z, origin=O=InvestorA, L=TestLand, C=US, session_id=8b60a315-55bd-4a85-93e2-9f937a7c3c50, session_timestamp=2021-04-15T13:41:53.020Z, thread-id=645, tx_id=B4B004E01B2B513C0F8DCF7F3837ACDDE62300E45BD080B467BF1FEA7D8A0BD6}
[INFO ] 2021-04-15T13:41:54,247Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=87ec0e30-6cec-4459-9475-9db6b6a5caef, invocation_id=8b60a315-55bd-4a85-93e2-9f937a7c3c50, invocation_timestamp=2021-04-15T13:41:53.020Z, origin=O=InvestorA, L=TestLand, C=US, session_id=8b60a315-55bd-4a85-93e2-9f937a7c3c50, session_timestamp=2021-04-15T13:41:53.020Z, thread-id=645, tx_id=B4B004E01B2B513C0F8DCF7F3837ACDDE62300E45BD080B467BF1FEA7D8A0BD6}
[INFO ] 2021-04-15T13:41:54,270Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=87ec0e30-6cec-4459-9475-9db6b6a5caef, invocation_id=8b60a315-55bd-4a85-93e2-9f937a7c3c50, invocation_timestamp=2021-04-15T13:41:53.020Z, origin=O=InvestorA, L=TestLand, C=US, session_id=8b60a315-55bd-4a85-93e2-9f937a7c3c50, session_timestamp=2021-04-15T13:41:53.020Z, thread-id=645, tx_id=B4B004E01B2B513C0F8DCF7F3837ACDDE62300E45BD080B467BF1FEA7D8A0BD6}
[INFO ] 2021-04-15T13:41:54,290Z [Mock network] corda.flow. - Party O=TIE, L=TestVillage, C=US received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=7795c58a-68fb-42ca-b98c-f91cd533ae2b, invocation_id=9213026f-f8f5-4a7f-b5f9-d6cd42d4446e, invocation_timestamp=2021-04-15T13:41:52.630Z, origin=Only For Testing, session_id=9213026f-f8f5-4a7f-b5f9-d6cd42d4446e, session_timestamp=2021-04-15T13:41:52.630Z, thread-id=645, tx_id=B4B004E01B2B513C0F8DCF7F3837ACDDE62300E45BD080B467BF1FEA7D8A0BD6}
[INFO ] 2021-04-15T13:41:54,290Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=7795c58a-68fb-42ca-b98c-f91cd533ae2b, invocation_id=9213026f-f8f5-4a7f-b5f9-d6cd42d4446e, invocation_timestamp=2021-04-15T13:41:52.630Z, origin=Only For Testing, session_id=9213026f-f8f5-4a7f-b5f9-d6cd42d4446e, session_timestamp=2021-04-15T13:41:52.630Z, thread-id=645, tx_id=B4B004E01B2B513C0F8DCF7F3837ACDDE62300E45BD080B467BF1FEA7D8A0BD6}
[INFO ] 2021-04-15T13:41:54,385Z [Mock network] corda.flow. - Already stored a distribution record for O=InvestorA, L=TestLand, C=US and bba472f8-5ff6-4eb5-8e7a-87ed77a2430e. {fiber-id=10000009, flow-id=2a57f84c-5b49-4fb2-b635-827f6ed0388d, invocation_id=9a5040e5-533f-41bc-a308-221708b2ef6e, invocation_timestamp=2021-04-15T13:41:54.365Z, origin=O=InvestorA, L=TestLand, C=US, session_id=9a5040e5-533f-41bc-a308-221708b2ef6e, session_timestamp=2021-04-15T13:41:54.365Z, thread-id=645}
[INFO ] 2021-04-15T13:41:54,409Z [Mock network] corda.flow. - Flow raised an error: Received session end message instead of a data session message. Mismatched send and receive?. Sending it to flow hospital to be triaged. {fiber-id=10000006, flow-id=d41ed229-bad0-4e9f-9e6f-2746f1abd84f, invocation_id=2cd31efc-3259-4669-8a7d-22157f98ac07, invocation_timestamp=2021-04-15T13:41:52.964Z, origin=O=InvestorA, L=TestLand, C=US, session_id=2cd31efc-3259-4669-8a7d-22157f98ac07, session_timestamp=2021-04-15T13:41:52.964Z, thread-id=645, tx_id=B4B004E01B2B513C0F8DCF7F3837ACDDE62300E45BD080B467BF1FEA7D8A0BD6}
[INFO ] 2021-04-15T13:41:54,413Z [Mock network] statemachine.StaffedFlowHospital. - Flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Invocation, sessionId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false)], numberOfSuspends=8, numberOfCommits=9), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))]), frozenFiber=03976CF0306E3C8CD01BBCAE196212FADF4637D064AD69699640A599E89AC844), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@74c2210a, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1d00ed67], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=e4b37b97-8b25-41fc-94a9-ed676aaba876, reloadCheckpointAfterSuspendCount=null, numberOfCommits=9, lock=java.util.concurrent.Semaphore@43f667dd[Permits = 0]) {fiber-id=10000006, flow-id=d41ed229-bad0-4e9f-9e6f-2746f1abd84f, invocation_id=2cd31efc-3259-4669-8a7d-22157f98ac07, invocation_timestamp=2021-04-15T13:41:52.964Z, origin=O=InvestorA, L=TestLand, C=US, session_id=2cd31efc-3259-4669-8a7d-22157f98ac07, session_timestamp=2021-04-15T13:41:52.964Z, thread-id=645, tx_id=B4B004E01B2B513C0F8DCF7F3837ACDDE62300E45BD080B467BF1FEA7D8A0BD6}
[INFO ] 2021-04-15T13:41:54,416Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {fiber-id=10000006, flow-id=d41ed229-bad0-4e9f-9e6f-2746f1abd84f, invocation_id=2cd31efc-3259-4669-8a7d-22157f98ac07, invocation_timestamp=2021-04-15T13:41:52.964Z, origin=O=InvestorA, L=TestLand, C=US, session_id=2cd31efc-3259-4669-8a7d-22157f98ac07, session_timestamp=2021-04-15T13:41:52.964Z, thread-id=645, tx_id=B4B004E01B2B513C0F8DCF7F3837ACDDE62300E45BD080B467BF1FEA7D8A0BD6}
net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.pollSessionMessages(StartedFlowTransition.kt:256) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.receiveFromSessionsTransition(StartedFlowTransition.kt:223) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.access$receiveFromSessionsTransition(StartedFlowTransition.kt:23) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition$receiveTransition$1.invoke(StartedFlowTransition.kt:206) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition$receiveTransition$1.invoke(StartedFlowTransition.kt:23) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.Transition$DefaultImpls.builder(Transition.kt:24) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.builder(StartedFlowTransition.kt:23) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.receiveTransition(StartedFlowTransition.kt:198) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.transition(StartedFlowTransition.kt:46) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.DoRemainingWorkTransition.cleanTransition(DoRemainingWorkTransition.kt:33) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.DoRemainingWorkTransition.transition(DoRemainingWorkTransition.kt:22) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.TopLevelTransition.transition(TopLevelTransition.kt:53) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StateMachine.transition(StateMachine.kt:13) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEvent(FlowStateMachineImpl.kt:182) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:220) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:574) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:277) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:109) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:79) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[INFO ] 2021-04-15T13:41:54,421Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {fiber-id=10000006, flow-id=d41ed229-bad0-4e9f-9e6f-2746f1abd84f, invocation_id=2cd31efc-3259-4669-8a7d-22157f98ac07, invocation_timestamp=2021-04-15T13:41:52.964Z, origin=O=InvestorA, L=TestLand, C=US, session_id=2cd31efc-3259-4669-8a7d-22157f98ac07, session_timestamp=2021-04-15T13:41:52.964Z, thread-id=645, tx_id=B4B004E01B2B513C0F8DCF7F3837ACDDE62300E45BD080B467BF1FEA7D8A0BD6}
net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.pollSessionMessages(StartedFlowTransition.kt:256) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.receiveFromSessionsTransition(StartedFlowTransition.kt:223) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.access$receiveFromSessionsTransition(StartedFlowTransition.kt:23) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition$receiveTransition$1.invoke(StartedFlowTransition.kt:206) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition$receiveTransition$1.invoke(StartedFlowTransition.kt:23) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.Transition$DefaultImpls.builder(Transition.kt:24) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.builder(StartedFlowTransition.kt:23) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.receiveTransition(StartedFlowTransition.kt:198) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.transition(StartedFlowTransition.kt:46) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.DoRemainingWorkTransition.cleanTransition(DoRemainingWorkTransition.kt:33) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.DoRemainingWorkTransition.transition(DoRemainingWorkTransition.kt:22) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.TopLevelTransition.transition(TopLevelTransition.kt:53) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StateMachine.transition(StateMachine.kt:13) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEvent(FlowStateMachineImpl.kt:182) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:220) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:574) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:277) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:109) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:79) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[WARN ] 2021-04-15T13:41:54,471Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] errored, dumping all transitions:

 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:52.978Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[d41ed229-bad0-4e9f-9e6f-2746f1abd84f], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Invocation, sessionId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=A3970FDEEF920A0181F5F9C060417BFED250C6A54F9B696371B8F383407598E3), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7af8c13b])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7af8c13b])
    SignalFlowHasStarted(flowId=[d41ed229-bad0-4e9f-9e6f-2746f1abd84f])
    SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=4822567871813323456), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-3605909448999398973), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-4822567871813323456--6883024731385932997-0-0), senderUUID=e4b37b97-8b25-41fc-94a9-ed676aaba876))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-3605909448999398973): 
    null
    Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=4822567871813323456), deduplicationSeed=D-4822567871813323456--6883024731385932997)
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7af8c13b]
    []
isAnyCheckpointPersisted: 
    false
    true


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:52.979Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:52.965Z
    2021-04-15T13:41:52.979Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:52.991Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))]), maySkipCheckpoint=false, fiber=0E9D03886094746D6997252F6A30B4FF67A837BDC14BCD0BE91C40E007A0F759, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[d41ed229-bad0-4e9f-9e6f-2746f1abd84f], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Invocation, sessionId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={SessionId(toLong=-3605909448999398973)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=4822567871813323456), deduplicationSeed=D-4822567871813323456--6883024731385932997)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))]), frozenFiber=0E9D03886094746D6997252F6A30B4FF67A837BDC14BCD0BE91C40E007A0F759), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    0
    2
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=A3970FDEEF920A0181F5F9C060417BFED250C6A54F9B696371B8F383407598E3)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))]), frozenFiber=0E9D03886094746D6997252F6A30B4FF67A837BDC14BCD0BE91C40E007A0F759)
checkpoint.timestamp: 
    2021-04-15T13:41:52.979Z
    2021-04-15T13:41:52.986Z
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.progressStep: 
    null
    Starting


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:52.992Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:41:52.986Z
    2021-04-15T13:41:52.992Z
checkpoint.checkpointState.sessions.SessionId(toLong=-3605909448999398973).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:52.994Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:52.992Z
    2021-04-15T13:41:52.994Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:52.994Z
    2021-04-15T13:41:53Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.010Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))]), maySkipCheckpoint=false, fiber=5BC3330CF26F84E42BA40F3366F33028DF7B85CE9C69E49ED4D912A4347F713F, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[d41ed229-bad0-4e9f-9e6f-2746f1abd84f], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Invocation, sessionId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={SessionId(toLong=-3605909448999398973)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=4822567871813323456), deduplicationSeed=D-4822567871813323456--6883024731385932997)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))]), frozenFiber=5BC3330CF26F84E42BA40F3366F33028DF7B85CE9C69E49ED4D912A4347F713F), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    2
    3
checkpoint.flowState.frozenFiber.hash: 
    0E9D03886094746D6997252F6A30B4FF67A837BDC14BCD0BE91C40E007A0F759
    5BC3330CF26F84E42BA40F3366F33028DF7B85CE9C69E49ED4D912A4347F713F
checkpoint.timestamp: 
    2021-04-15T13:41:53Z
    2021-04-15T13:41:53.007Z
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.011Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.401Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3605909448999398973), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5b7b4b92, sender=O=InvestorA, L=TestLand, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.011Z
    2021-04-15T13:41:53.401Z
checkpoint.checkpointState.sessions.SessionId(toLong=-3605909448999398973).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5b7b4b92]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.401Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-3605909448999398973).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.403Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.401Z
    2021-04-15T13:41:53.403Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.403Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.407Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.403Z
    2021-04-15T13:41:53.407Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.408Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.407Z
    2021-04-15T13:41:53.408Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.408Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.408Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.419Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=24DB1FB51A03DF3B3DEA1406D2D1103C324E2885CFA64B230BA29C85CB5EE4A9}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=DBE0BC1CFA0F25F8680135C7BACB162153C19615D864504B30F67AA953826680, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[d41ed229-bad0-4e9f-9e6f-2746f1abd84f], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Invocation, sessionId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={SessionId(toLong=-3605909448999398973)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=4822567871813323456), deduplicationSeed=D-4822567871813323456--6883024731385932997)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=24DB1FB51A03DF3B3DEA1406D2D1103C324E2885CFA64B230BA29C85CB5EE4A9}, shouldRetrySend=false), frozenFiber=DBE0BC1CFA0F25F8680135C7BACB162153C19615D864504B30F67AA953826680), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5b7b4b92])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5b7b4b92])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    3
    4
checkpoint.flowIoRequest: 
    Receive
    SendAndReceive
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))])
    SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=24DB1FB51A03DF3B3DEA1406D2D1103C324E2885CFA64B230BA29C85CB5EE4A9}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    5BC3330CF26F84E42BA40F3366F33028DF7B85CE9C69E49ED4D912A4347F713F
    DBE0BC1CFA0F25F8680135C7BACB162153C19615D864504B30F67AA953826680
checkpoint.timestamp: 
    2021-04-15T13:41:53.408Z
    2021-04-15T13:41:53.416Z
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5b7b4b92]
    []


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.420Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=4822567871813323456), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-4822567871813323456--6883024731385932997-3-0), senderUUID=e4b37b97-8b25-41fc-94a9-ed676aaba876))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=24DB1FB51A03DF3B3DEA1406D2D1103C324E2885CFA64B230BA29C85CB5EE4A9}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))])
checkpoint.timestamp: 
    2021-04-15T13:41:53.416Z
    2021-04-15T13:41:53.420Z


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.458Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3605909448999398973), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2cac83f, sender=O=InvestorA, L=TestLand, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.420Z
    2021-04-15T13:41:53.457Z
checkpoint.checkpointState.sessions.SessionId(toLong=-3605909448999398973).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2cac83f]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.458Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:41:53.457Z
    2021-04-15T13:41:53.458Z
checkpoint.checkpointState.sessions.SessionId(toLong=-3605909448999398973).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.459Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.458Z
    2021-04-15T13:41:53.459Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.462Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.459Z
    2021-04-15T13:41:53.462Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.462Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.462Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.462Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.470Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-04-15T13:41:53.462Z), maySkipCheckpoint=false, fiber=041B4E23AAB96D78CF0F5FB12D97A354A5C064130E180D0A2CF3F965F1702BAD, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[d41ed229-bad0-4e9f-9e6f-2746f1abd84f], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Invocation, sessionId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={SessionId(toLong=-3605909448999398973)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=4822567871813323456), deduplicationSeed=D-4822567871813323456--6883024731385932997)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-04-15T13:41:53.462Z), frozenFiber=041B4E23AAB96D78CF0F5FB12D97A354A5C064130E180D0A2CF3F965F1702BAD), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2cac83f])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2cac83f])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    4
    5
checkpoint.flowIoRequest: 
    SendAndReceive
    Sleep
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))])
    Sleep(wakeUpAfter=2021-04-15T13:41:53.462Z)
checkpoint.flowState.frozenFiber.hash: 
    DBE0BC1CFA0F25F8680135C7BACB162153C19615D864504B30F67AA953826680
    041B4E23AAB96D78CF0F5FB12D97A354A5C064130E180D0A2CF3F965F1702BAD
checkpoint.timestamp: 
    2021-04-15T13:41:53.462Z
    2021-04-15T13:41:53.467Z
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.checkpointState.numberOfCommits: 
    4
    5
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2cac83f]
    []


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.470Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Invocation, sessionId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={SessionId(toLong=-3605909448999398973)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=4822567871813323456), deduplicationSeed=D-4822567871813323456--6883024731385932997)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-04-15T13:41:53.462Z), frozenFiber=041B4E23AAB96D78CF0F5FB12D97A354A5C064130E180D0A2CF3F965F1702BAD), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@74c2210a, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@440e867b, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=e4b37b97-8b25-41fc-94a9-ed676aaba876, reloadCheckpointAfterSuspendCount=null, numberOfCommits=5, lock=java.util.concurrent.Semaphore@43f667dd[Permits = 0]), time=2021-04-15T13:41:53.462Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
isWaitingForFuture: 
    false
    true
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@440e867b


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.475Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@440e867b
    null


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.475Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.467Z
    2021-04-15T13:41:53.475Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.485Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=48672CCC6AADE4244B01F05547A5997CD8DA782DC8E168D2F56B9336D3CE9DF8}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=0E3AFA0A02090BF09EB7645FDF01CD3F348A1ED0E55E0DC7BDBDDA6099160B5B, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[d41ed229-bad0-4e9f-9e6f-2746f1abd84f], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Invocation, sessionId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={SessionId(toLong=-3605909448999398973)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=4822567871813323456), deduplicationSeed=D-4822567871813323456--6883024731385932997)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=48672CCC6AADE4244B01F05547A5997CD8DA782DC8E168D2F56B9336D3CE9DF8}, shouldRetrySend=false), frozenFiber=0E3AFA0A02090BF09EB7645FDF01CD3F348A1ED0E55E0DC7BDBDDA6099160B5B), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    5
    6
checkpoint.flowIoRequest: 
    Sleep
    SendAndReceive
checkpoint.flowState.flowIORequest: 
    Sleep(wakeUpAfter=2021-04-15T13:41:53.462Z)
    SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=48672CCC6AADE4244B01F05547A5997CD8DA782DC8E168D2F56B9336D3CE9DF8}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    041B4E23AAB96D78CF0F5FB12D97A354A5C064130E180D0A2CF3F965F1702BAD
    0E3AFA0A02090BF09EB7645FDF01CD3F348A1ED0E55E0DC7BDBDDA6099160B5B
checkpoint.timestamp: 
    2021-04-15T13:41:53.475Z
    2021-04-15T13:41:53.483Z
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.checkpointState.numberOfCommits: 
    5
    6


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.486Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=4822567871813323456), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-4822567871813323456--6883024731385932997-5-0), senderUUID=e4b37b97-8b25-41fc-94a9-ed676aaba876))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=48672CCC6AADE4244B01F05547A5997CD8DA782DC8E168D2F56B9336D3CE9DF8}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))])
checkpoint.timestamp: 
    2021-04-15T13:41:53.483Z
    2021-04-15T13:41:53.485Z


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.514Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3605909448999398973), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@29661c52, sender=O=InvestorA, L=TestLand, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.485Z
    2021-04-15T13:41:53.514Z
checkpoint.checkpointState.sessions.SessionId(toLong=-3605909448999398973).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@29661c52]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.514Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-3605909448999398973).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.516Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.514Z
    2021-04-15T13:41:53.516Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.518Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.516Z
    2021-04-15T13:41:53.518Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.518Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.518Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.518Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.527Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-04-15T13:41:53.518Z), maySkipCheckpoint=false, fiber=76926A5C4C46B7C81E2A8AF8583D717E5D7011A0B88A1AEEF817552A1C630590, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[d41ed229-bad0-4e9f-9e6f-2746f1abd84f], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Invocation, sessionId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={SessionId(toLong=-3605909448999398973)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=4822567871813323456), deduplicationSeed=D-4822567871813323456--6883024731385932997)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-04-15T13:41:53.518Z), frozenFiber=76926A5C4C46B7C81E2A8AF8583D717E5D7011A0B88A1AEEF817552A1C630590), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@29661c52])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@29661c52])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    6
    7
checkpoint.flowIoRequest: 
    SendAndReceive
    Sleep
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))])
    Sleep(wakeUpAfter=2021-04-15T13:41:53.518Z)
checkpoint.flowState.frozenFiber.hash: 
    0E3AFA0A02090BF09EB7645FDF01CD3F348A1ED0E55E0DC7BDBDDA6099160B5B
    76926A5C4C46B7C81E2A8AF8583D717E5D7011A0B88A1AEEF817552A1C630590
checkpoint.timestamp: 
    2021-04-15T13:41:53.518Z
    2021-04-15T13:41:53.523Z
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
checkpoint.checkpointState.numberOfCommits: 
    6
    7
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@29661c52]
    []


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.527Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Invocation, sessionId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={SessionId(toLong=-3605909448999398973)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=4822567871813323456), deduplicationSeed=D-4822567871813323456--6883024731385932997)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-04-15T13:41:53.518Z), frozenFiber=76926A5C4C46B7C81E2A8AF8583D717E5D7011A0B88A1AEEF817552A1C630590), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@74c2210a, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@41e6d67c, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=e4b37b97-8b25-41fc-94a9-ed676aaba876, reloadCheckpointAfterSuspendCount=null, numberOfCommits=7, lock=java.util.concurrent.Semaphore@43f667dd[Permits = 0]), time=2021-04-15T13:41:53.518Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
isWaitingForFuture: 
    false
    true
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@41e6d67c


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.532Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@41e6d67c
    null


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.539Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=B9C192046FC92218BE1F221CC5CAD79BA046A321643C2E2E8196BAA173F8FFA4, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[d41ed229-bad0-4e9f-9e6f-2746f1abd84f], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Invocation, sessionId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={SessionId(toLong=-3605909448999398973)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=4822567871813323456), deduplicationSeed=D-4822567871813323456--6883024731385932997)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=B9C192046FC92218BE1F221CC5CAD79BA046A321643C2E2E8196BAA173F8FFA4), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    7
    8
checkpoint.flowIoRequest: 
    Sleep
    Send
checkpoint.flowState.flowIORequest: 
    Sleep(wakeUpAfter=2021-04-15T13:41:53.518Z)
    Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    76926A5C4C46B7C81E2A8AF8583D717E5D7011A0B88A1AEEF817552A1C630590
    B9C192046FC92218BE1F221CC5CAD79BA046A321643C2E2E8196BAA173F8FFA4
checkpoint.timestamp: 
    2021-04-15T13:41:53.523Z
    2021-04-15T13:41:53.537Z
checkpoint.checkpointState.numberOfSuspends: 
    6
    7
checkpoint.checkpointState.numberOfCommits: 
    7
    8


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.540Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=4822567871813323456), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-4822567871813323456--6883024731385932997-7-0), senderUUID=e4b37b97-8b25-41fc-94a9-ed676aaba876))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.672Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.539Z
    2021-04-15T13:41:53.672Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.709Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.672Z
    2021-04-15T13:41:53.709Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.709Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.709Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.713Z
  Event: EnterSubFlow(subFlowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.709Z
    2021-04-15T13:41:53.713Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.713Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.723Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))]), maySkipCheckpoint=false, fiber=03976CF0306E3C8CD01BBCAE196212FADF4637D064AD69699640A599E89AC844, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[d41ed229-bad0-4e9f-9e6f-2746f1abd84f], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Invocation, sessionId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={SessionId(toLong=-3605909448999398973)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=4822567871813323456), deduplicationSeed=D-4822567871813323456--6883024731385932997)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=8, numberOfCommits=9), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))]), frozenFiber=03976CF0306E3C8CD01BBCAE196212FADF4637D064AD69699640A599E89AC844), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    8
    9
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))])
checkpoint.flowState.frozenFiber.hash: 
    B9C192046FC92218BE1F221CC5CAD79BA046A321643C2E2E8196BAA173F8FFA4
    03976CF0306E3C8CD01BBCAE196212FADF4637D064AD69699640A599E89AC844
checkpoint.timestamp: 
    2021-04-15T13:41:53.713Z
    2021-04-15T13:41:53.719Z
checkpoint.checkpointState.numberOfSuspends: 
    7
    8
checkpoint.checkpointState.numberOfCommits: 
    8
    9


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.724Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:54.407Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3605909448999398973), payload=net.corda.node.services.statemachine.EndSessionMessage@48bc26cb), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1d00ed67, sender=O=InvestorA, L=TestLand, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.723Z
    2021-04-15T13:41:54.407Z
checkpoint.checkpointState.sessionsToBeClosed: 
    []
    [SessionId(toLong=-3605909448999398973)]
checkpoint.checkpointState.sessions.SessionId(toLong=-3605909448999398973).receivedMessages: 
    []
    [net.corda.node.services.statemachine.EndSessionMessage@48bc26cb]
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1d00ed67]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:54.408Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-3605909448999398973)])
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:41:54.407Z
    2021-04-15T13:41:54.408Z
checkpoint.checkpointState.sessionsToBeClosed: 
    [SessionId(toLong=-3605909448999398973)]
    []
checkpoint.checkpointState.sessions.SessionId(toLong=-3605909448999398973): 
    Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[net.corda.node.services.statemachine.EndSessionMessage@48bc26cb], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=4822567871813323456), deduplicationSeed=D-4822567871813323456--6883024731385932997)
    null


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:54.408Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:54.408Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:54.423Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-5980419857015898426, exception=net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2021-04-15T13:41:54.408Z
    2021-04-15T13:41:54.412Z


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:54.427Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:54.429Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:41:54.412Z
    2021-04-15T13:41:54.428Z
 {fiber-id=10000006, flow-id=d41ed229-bad0-4e9f-9e6f-2746f1abd84f, invocation_id=2cd31efc-3259-4669-8a7d-22157f98ac07, invocation_timestamp=2021-04-15T13:41:52.964Z, origin=O=InvestorA, L=TestLand, C=US, session_id=2cd31efc-3259-4669-8a7d-22157f98ac07, session_timestamp=2021-04-15T13:41:52.964Z, thread-id=645, tx_id=B4B004E01B2B513C0F8DCF7F3837ACDDE62300E45BD080B467BF1FEA7D8A0BD6}
[WARN ] 2021-04-15T13:41:54,471Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] error {fiber-id=10000006, flow-id=d41ed229-bad0-4e9f-9e6f-2746f1abd84f, invocation_id=2cd31efc-3259-4669-8a7d-22157f98ac07, invocation_timestamp=2021-04-15T13:41:52.964Z, origin=O=InvestorA, L=TestLand, C=US, session_id=2cd31efc-3259-4669-8a7d-22157f98ac07, session_timestamp=2021-04-15T13:41:52.964Z, thread-id=645, tx_id=B4B004E01B2B513C0F8DCF7F3837ACDDE62300E45BD080B467BF1FEA7D8A0BD6}
net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.pollSessionMessages(StartedFlowTransition.kt:256) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.receiveFromSessionsTransition(StartedFlowTransition.kt:223) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.access$receiveFromSessionsTransition(StartedFlowTransition.kt:23) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition$receiveTransition$1.invoke(StartedFlowTransition.kt:206) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition$receiveTransition$1.invoke(StartedFlowTransition.kt:23) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.Transition$DefaultImpls.builder(Transition.kt:24) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.builder(StartedFlowTransition.kt:23) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.receiveTransition(StartedFlowTransition.kt:198) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.transition(StartedFlowTransition.kt:46) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.DoRemainingWorkTransition.cleanTransition(DoRemainingWorkTransition.kt:33) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.DoRemainingWorkTransition.transition(DoRemainingWorkTransition.kt:22) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.TopLevelTransition.transition(TopLevelTransition.kt:53) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StateMachine.transition(StateMachine.kt:13) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEvent(FlowStateMachineImpl.kt:182) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:220) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:574) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:277) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:109) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:79) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[WARN ] 2021-04-15T13:41:54,473Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {fiber-id=10000006, flow-id=d41ed229-bad0-4e9f-9e6f-2746f1abd84f, invocation_id=2cd31efc-3259-4669-8a7d-22157f98ac07, invocation_timestamp=2021-04-15T13:41:52.964Z, origin=O=InvestorA, L=TestLand, C=US, session_id=2cd31efc-3259-4669-8a7d-22157f98ac07, session_timestamp=2021-04-15T13:41:52.964Z, thread-id=645, tx_id=B4B004E01B2B513C0F8DCF7F3837ACDDE62300E45BD080B467BF1FEA7D8A0BD6}
[WARN ] 2021-04-15T13:41:54,503Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] errored, dumping all transitions:

 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:52.978Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[d41ed229-bad0-4e9f-9e6f-2746f1abd84f], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Invocation, sessionId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=A3970FDEEF920A0181F5F9C060417BFED250C6A54F9B696371B8F383407598E3), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7af8c13b])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7af8c13b])
    SignalFlowHasStarted(flowId=[d41ed229-bad0-4e9f-9e6f-2746f1abd84f])
    SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=4822567871813323456), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-3605909448999398973), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-4822567871813323456--6883024731385932997-0-0), senderUUID=e4b37b97-8b25-41fc-94a9-ed676aaba876))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-3605909448999398973): 
    null
    Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=4822567871813323456), deduplicationSeed=D-4822567871813323456--6883024731385932997)
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7af8c13b]
    []
isAnyCheckpointPersisted: 
    false
    true


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:52.979Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:52.965Z
    2021-04-15T13:41:52.979Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:52.991Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))]), maySkipCheckpoint=false, fiber=0E9D03886094746D6997252F6A30B4FF67A837BDC14BCD0BE91C40E007A0F759, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[d41ed229-bad0-4e9f-9e6f-2746f1abd84f], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Invocation, sessionId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={SessionId(toLong=-3605909448999398973)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=4822567871813323456), deduplicationSeed=D-4822567871813323456--6883024731385932997)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))]), frozenFiber=0E9D03886094746D6997252F6A30B4FF67A837BDC14BCD0BE91C40E007A0F759), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    0
    2
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=A3970FDEEF920A0181F5F9C060417BFED250C6A54F9B696371B8F383407598E3)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))]), frozenFiber=0E9D03886094746D6997252F6A30B4FF67A837BDC14BCD0BE91C40E007A0F759)
checkpoint.timestamp: 
    2021-04-15T13:41:52.979Z
    2021-04-15T13:41:52.986Z
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.progressStep: 
    null
    Starting


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:52.992Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:41:52.986Z
    2021-04-15T13:41:52.992Z
checkpoint.checkpointState.sessions.SessionId(toLong=-3605909448999398973).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:52.994Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:52.992Z
    2021-04-15T13:41:52.994Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:52.994Z
    2021-04-15T13:41:53Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.010Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))]), maySkipCheckpoint=false, fiber=5BC3330CF26F84E42BA40F3366F33028DF7B85CE9C69E49ED4D912A4347F713F, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[d41ed229-bad0-4e9f-9e6f-2746f1abd84f], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Invocation, sessionId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={SessionId(toLong=-3605909448999398973)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=4822567871813323456), deduplicationSeed=D-4822567871813323456--6883024731385932997)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))]), frozenFiber=5BC3330CF26F84E42BA40F3366F33028DF7B85CE9C69E49ED4D912A4347F713F), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    2
    3
checkpoint.flowState.frozenFiber.hash: 
    0E9D03886094746D6997252F6A30B4FF67A837BDC14BCD0BE91C40E007A0F759
    5BC3330CF26F84E42BA40F3366F33028DF7B85CE9C69E49ED4D912A4347F713F
checkpoint.timestamp: 
    2021-04-15T13:41:53Z
    2021-04-15T13:41:53.007Z
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.011Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.401Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3605909448999398973), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5b7b4b92, sender=O=InvestorA, L=TestLand, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.011Z
    2021-04-15T13:41:53.401Z
checkpoint.checkpointState.sessions.SessionId(toLong=-3605909448999398973).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5b7b4b92]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.401Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-3605909448999398973).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.403Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.401Z
    2021-04-15T13:41:53.403Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.403Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.407Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.403Z
    2021-04-15T13:41:53.407Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.408Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.407Z
    2021-04-15T13:41:53.408Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.408Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.408Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.419Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=24DB1FB51A03DF3B3DEA1406D2D1103C324E2885CFA64B230BA29C85CB5EE4A9}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=DBE0BC1CFA0F25F8680135C7BACB162153C19615D864504B30F67AA953826680, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[d41ed229-bad0-4e9f-9e6f-2746f1abd84f], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Invocation, sessionId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={SessionId(toLong=-3605909448999398973)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=4822567871813323456), deduplicationSeed=D-4822567871813323456--6883024731385932997)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=24DB1FB51A03DF3B3DEA1406D2D1103C324E2885CFA64B230BA29C85CB5EE4A9}, shouldRetrySend=false), frozenFiber=DBE0BC1CFA0F25F8680135C7BACB162153C19615D864504B30F67AA953826680), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5b7b4b92])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5b7b4b92])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    3
    4
checkpoint.flowIoRequest: 
    Receive
    SendAndReceive
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))])
    SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=24DB1FB51A03DF3B3DEA1406D2D1103C324E2885CFA64B230BA29C85CB5EE4A9}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    5BC3330CF26F84E42BA40F3366F33028DF7B85CE9C69E49ED4D912A4347F713F
    DBE0BC1CFA0F25F8680135C7BACB162153C19615D864504B30F67AA953826680
checkpoint.timestamp: 
    2021-04-15T13:41:53.408Z
    2021-04-15T13:41:53.416Z
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5b7b4b92]
    []


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.420Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=4822567871813323456), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-4822567871813323456--6883024731385932997-3-0), senderUUID=e4b37b97-8b25-41fc-94a9-ed676aaba876))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=24DB1FB51A03DF3B3DEA1406D2D1103C324E2885CFA64B230BA29C85CB5EE4A9}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))])
checkpoint.timestamp: 
    2021-04-15T13:41:53.416Z
    2021-04-15T13:41:53.420Z


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.458Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3605909448999398973), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2cac83f, sender=O=InvestorA, L=TestLand, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.420Z
    2021-04-15T13:41:53.457Z
checkpoint.checkpointState.sessions.SessionId(toLong=-3605909448999398973).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2cac83f]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.458Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:41:53.457Z
    2021-04-15T13:41:53.458Z
checkpoint.checkpointState.sessions.SessionId(toLong=-3605909448999398973).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.459Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.458Z
    2021-04-15T13:41:53.459Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.462Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.459Z
    2021-04-15T13:41:53.462Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.462Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.462Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.462Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.470Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-04-15T13:41:53.462Z), maySkipCheckpoint=false, fiber=041B4E23AAB96D78CF0F5FB12D97A354A5C064130E180D0A2CF3F965F1702BAD, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[d41ed229-bad0-4e9f-9e6f-2746f1abd84f], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Invocation, sessionId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={SessionId(toLong=-3605909448999398973)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=4822567871813323456), deduplicationSeed=D-4822567871813323456--6883024731385932997)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-04-15T13:41:53.462Z), frozenFiber=041B4E23AAB96D78CF0F5FB12D97A354A5C064130E180D0A2CF3F965F1702BAD), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2cac83f])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2cac83f])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    4
    5
checkpoint.flowIoRequest: 
    SendAndReceive
    Sleep
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))])
    Sleep(wakeUpAfter=2021-04-15T13:41:53.462Z)
checkpoint.flowState.frozenFiber.hash: 
    DBE0BC1CFA0F25F8680135C7BACB162153C19615D864504B30F67AA953826680
    041B4E23AAB96D78CF0F5FB12D97A354A5C064130E180D0A2CF3F965F1702BAD
checkpoint.timestamp: 
    2021-04-15T13:41:53.462Z
    2021-04-15T13:41:53.467Z
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.checkpointState.numberOfCommits: 
    4
    5
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2cac83f]
    []


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.470Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Invocation, sessionId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={SessionId(toLong=-3605909448999398973)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=4822567871813323456), deduplicationSeed=D-4822567871813323456--6883024731385932997)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-04-15T13:41:53.462Z), frozenFiber=041B4E23AAB96D78CF0F5FB12D97A354A5C064130E180D0A2CF3F965F1702BAD), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@74c2210a, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@440e867b, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=e4b37b97-8b25-41fc-94a9-ed676aaba876, reloadCheckpointAfterSuspendCount=null, numberOfCommits=5, lock=java.util.concurrent.Semaphore@43f667dd[Permits = 0]), time=2021-04-15T13:41:53.462Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
isWaitingForFuture: 
    false
    true
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@440e867b


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.475Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@440e867b
    null


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.475Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.467Z
    2021-04-15T13:41:53.475Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.485Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=48672CCC6AADE4244B01F05547A5997CD8DA782DC8E168D2F56B9336D3CE9DF8}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=0E3AFA0A02090BF09EB7645FDF01CD3F348A1ED0E55E0DC7BDBDDA6099160B5B, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[d41ed229-bad0-4e9f-9e6f-2746f1abd84f], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Invocation, sessionId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={SessionId(toLong=-3605909448999398973)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=4822567871813323456), deduplicationSeed=D-4822567871813323456--6883024731385932997)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=48672CCC6AADE4244B01F05547A5997CD8DA782DC8E168D2F56B9336D3CE9DF8}, shouldRetrySend=false), frozenFiber=0E3AFA0A02090BF09EB7645FDF01CD3F348A1ED0E55E0DC7BDBDDA6099160B5B), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    5
    6
checkpoint.flowIoRequest: 
    Sleep
    SendAndReceive
checkpoint.flowState.flowIORequest: 
    Sleep(wakeUpAfter=2021-04-15T13:41:53.462Z)
    SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=48672CCC6AADE4244B01F05547A5997CD8DA782DC8E168D2F56B9336D3CE9DF8}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    041B4E23AAB96D78CF0F5FB12D97A354A5C064130E180D0A2CF3F965F1702BAD
    0E3AFA0A02090BF09EB7645FDF01CD3F348A1ED0E55E0DC7BDBDDA6099160B5B
checkpoint.timestamp: 
    2021-04-15T13:41:53.475Z
    2021-04-15T13:41:53.483Z
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.checkpointState.numberOfCommits: 
    5
    6


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.486Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=4822567871813323456), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-4822567871813323456--6883024731385932997-5-0), senderUUID=e4b37b97-8b25-41fc-94a9-ed676aaba876))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=48672CCC6AADE4244B01F05547A5997CD8DA782DC8E168D2F56B9336D3CE9DF8}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))])
checkpoint.timestamp: 
    2021-04-15T13:41:53.483Z
    2021-04-15T13:41:53.485Z


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.514Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3605909448999398973), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@29661c52, sender=O=InvestorA, L=TestLand, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.485Z
    2021-04-15T13:41:53.514Z
checkpoint.checkpointState.sessions.SessionId(toLong=-3605909448999398973).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@29661c52]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.514Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-3605909448999398973).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.516Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.514Z
    2021-04-15T13:41:53.516Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.518Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.516Z
    2021-04-15T13:41:53.518Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.518Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.518Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.518Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.527Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-04-15T13:41:53.518Z), maySkipCheckpoint=false, fiber=76926A5C4C46B7C81E2A8AF8583D717E5D7011A0B88A1AEEF817552A1C630590, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[d41ed229-bad0-4e9f-9e6f-2746f1abd84f], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Invocation, sessionId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={SessionId(toLong=-3605909448999398973)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=4822567871813323456), deduplicationSeed=D-4822567871813323456--6883024731385932997)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-04-15T13:41:53.518Z), frozenFiber=76926A5C4C46B7C81E2A8AF8583D717E5D7011A0B88A1AEEF817552A1C630590), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@29661c52])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@29661c52])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    6
    7
checkpoint.flowIoRequest: 
    SendAndReceive
    Sleep
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))])
    Sleep(wakeUpAfter=2021-04-15T13:41:53.518Z)
checkpoint.flowState.frozenFiber.hash: 
    0E3AFA0A02090BF09EB7645FDF01CD3F348A1ED0E55E0DC7BDBDDA6099160B5B
    76926A5C4C46B7C81E2A8AF8583D717E5D7011A0B88A1AEEF817552A1C630590
checkpoint.timestamp: 
    2021-04-15T13:41:53.518Z
    2021-04-15T13:41:53.523Z
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
checkpoint.checkpointState.numberOfCommits: 
    6
    7
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@29661c52]
    []


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.527Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Invocation, sessionId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={SessionId(toLong=-3605909448999398973)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=4822567871813323456), deduplicationSeed=D-4822567871813323456--6883024731385932997)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-04-15T13:41:53.518Z), frozenFiber=76926A5C4C46B7C81E2A8AF8583D717E5D7011A0B88A1AEEF817552A1C630590), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@74c2210a, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@41e6d67c, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=e4b37b97-8b25-41fc-94a9-ed676aaba876, reloadCheckpointAfterSuspendCount=null, numberOfCommits=7, lock=java.util.concurrent.Semaphore@43f667dd[Permits = 0]), time=2021-04-15T13:41:53.518Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
isWaitingForFuture: 
    false
    true
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@41e6d67c


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.532Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@41e6d67c
    null


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.539Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=B9C192046FC92218BE1F221CC5CAD79BA046A321643C2E2E8196BAA173F8FFA4, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[d41ed229-bad0-4e9f-9e6f-2746f1abd84f], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Invocation, sessionId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={SessionId(toLong=-3605909448999398973)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=4822567871813323456), deduplicationSeed=D-4822567871813323456--6883024731385932997)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=B9C192046FC92218BE1F221CC5CAD79BA046A321643C2E2E8196BAA173F8FFA4), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    7
    8
checkpoint.flowIoRequest: 
    Sleep
    Send
checkpoint.flowState.flowIORequest: 
    Sleep(wakeUpAfter=2021-04-15T13:41:53.518Z)
    Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    76926A5C4C46B7C81E2A8AF8583D717E5D7011A0B88A1AEEF817552A1C630590
    B9C192046FC92218BE1F221CC5CAD79BA046A321643C2E2E8196BAA173F8FFA4
checkpoint.timestamp: 
    2021-04-15T13:41:53.523Z
    2021-04-15T13:41:53.537Z
checkpoint.checkpointState.numberOfSuspends: 
    6
    7
checkpoint.checkpointState.numberOfCommits: 
    7
    8


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.540Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=4822567871813323456), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-4822567871813323456--6883024731385932997-7-0), senderUUID=e4b37b97-8b25-41fc-94a9-ed676aaba876))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.672Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.539Z
    2021-04-15T13:41:53.672Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.709Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.672Z
    2021-04-15T13:41:53.709Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.709Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.709Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.713Z
  Event: EnterSubFlow(subFlowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.709Z
    2021-04-15T13:41:53.713Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.713Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.723Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))]), maySkipCheckpoint=false, fiber=03976CF0306E3C8CD01BBCAE196212FADF4637D064AD69699640A599E89AC844, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[d41ed229-bad0-4e9f-9e6f-2746f1abd84f], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Invocation, sessionId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={SessionId(toLong=-3605909448999398973)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=4822567871813323456), deduplicationSeed=D-4822567871813323456--6883024731385932997)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=8, numberOfCommits=9), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))]), frozenFiber=03976CF0306E3C8CD01BBCAE196212FADF4637D064AD69699640A599E89AC844), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    8
    9
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))])
checkpoint.flowState.frozenFiber.hash: 
    B9C192046FC92218BE1F221CC5CAD79BA046A321643C2E2E8196BAA173F8FFA4
    03976CF0306E3C8CD01BBCAE196212FADF4637D064AD69699640A599E89AC844
checkpoint.timestamp: 
    2021-04-15T13:41:53.713Z
    2021-04-15T13:41:53.719Z
checkpoint.checkpointState.numberOfSuspends: 
    7
    8
checkpoint.checkpointState.numberOfCommits: 
    8
    9


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:53.724Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:54.407Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3605909448999398973), payload=net.corda.node.services.statemachine.EndSessionMessage@48bc26cb), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1d00ed67, sender=O=InvestorA, L=TestLand, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.723Z
    2021-04-15T13:41:54.407Z
checkpoint.checkpointState.sessionsToBeClosed: 
    []
    [SessionId(toLong=-3605909448999398973)]
checkpoint.checkpointState.sessions.SessionId(toLong=-3605909448999398973).receivedMessages: 
    []
    [net.corda.node.services.statemachine.EndSessionMessage@48bc26cb]
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1d00ed67]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:54.408Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-3605909448999398973)])
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:41:54.407Z
    2021-04-15T13:41:54.408Z
checkpoint.checkpointState.sessionsToBeClosed: 
    [SessionId(toLong=-3605909448999398973)]
    []
checkpoint.checkpointState.sessions.SessionId(toLong=-3605909448999398973): 
    Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[net.corda.node.services.statemachine.EndSessionMessage@48bc26cb], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=4822567871813323456), deduplicationSeed=D-4822567871813323456--6883024731385932997)
    null


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:54.408Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:54.408Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false)]


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:54.423Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-5980419857015898426, exception=net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2021-04-15T13:41:54.408Z
    2021-04-15T13:41:54.412Z


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:54.427Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:54.429Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:41:54.412Z
    2021-04-15T13:41:54.428Z


 --- Transition of flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] ---
  Timestamp: 2021-04-15T13:41:54.482Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=-5980419857015898426)], sessions=[], senderUUID=e4b37b97-8b25-41fc-94a9-ed676aaba876)
    CreateTransaction
    RemoveCheckpoint(id=[d41ed229-bad0-4e9f-9e6f-2746f1abd84f], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1d00ed67])
    ReleaseSoftLocks(uuid=d41ed229-bad0-4e9f-9e6f-2746f1abd84f)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1d00ed67])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[d41ed229-bad0-4e9f-9e6f-2746f1abd84f], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-5980419857015898426, exception=net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Invocation, sessionId=2cd31efc-3259-4669-8a7d-22157f98ac07, timestamp: 2021-04-15T13:41:52.964Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false)], numberOfSuspends=8, numberOfCommits=10), flowState=net.corda.node.services.statemachine.FlowState$Finished@70579ad0, errorState=Errored(errors=[FlowError(errorId=-5980419857015898426, exception=net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@74c2210a, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, senderUUID=e4b37b97-8b25-41fc-94a9-ed676aaba876, reloadCheckpointAfterSuspendCount=null, numberOfCommits=10, lock=java.util.concurrent.Semaphore@43f667dd[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
numberOfCommits: 
    9
    10
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3605909448999398973))]), frozenFiber=03976CF0306E3C8CD01BBCAE196212FADF4637D064AD69699640A599E89AC844)
    net.corda.node.services.statemachine.FlowState$Finished@70579ad0
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.timestamp: 
    2021-04-15T13:41:54.428Z
    2021-04-15T13:41:54.471Z
checkpoint.checkpointState.numberOfCommits: 
    9
    10
isRemoved: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1d00ed67]
    []
 {fiber-id=10000006, flow-id=d41ed229-bad0-4e9f-9e6f-2746f1abd84f, invocation_id=2cd31efc-3259-4669-8a7d-22157f98ac07, invocation_timestamp=2021-04-15T13:41:52.964Z, origin=O=InvestorA, L=TestLand, C=US, session_id=2cd31efc-3259-4669-8a7d-22157f98ac07, session_timestamp=2021-04-15T13:41:52.964Z, thread-id=645, tx_id=B4B004E01B2B513C0F8DCF7F3837ACDDE62300E45BD080B467BF1FEA7D8A0BD6}
[WARN ] 2021-04-15T13:41:54,503Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [d41ed229-bad0-4e9f-9e6f-2746f1abd84f] error {fiber-id=10000006, flow-id=d41ed229-bad0-4e9f-9e6f-2746f1abd84f, invocation_id=2cd31efc-3259-4669-8a7d-22157f98ac07, invocation_timestamp=2021-04-15T13:41:52.964Z, origin=O=InvestorA, L=TestLand, C=US, session_id=2cd31efc-3259-4669-8a7d-22157f98ac07, session_timestamp=2021-04-15T13:41:52.964Z, thread-id=645, tx_id=B4B004E01B2B513C0F8DCF7F3837ACDDE62300E45BD080B467BF1FEA7D8A0BD6}
net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.pollSessionMessages(StartedFlowTransition.kt:256) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.receiveFromSessionsTransition(StartedFlowTransition.kt:223) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.access$receiveFromSessionsTransition(StartedFlowTransition.kt:23) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition$receiveTransition$1.invoke(StartedFlowTransition.kt:206) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition$receiveTransition$1.invoke(StartedFlowTransition.kt:23) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.Transition$DefaultImpls.builder(Transition.kt:24) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.builder(StartedFlowTransition.kt:23) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.receiveTransition(StartedFlowTransition.kt:198) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.transition(StartedFlowTransition.kt:46) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.DoRemainingWorkTransition.cleanTransition(DoRemainingWorkTransition.kt:33) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.DoRemainingWorkTransition.transition(DoRemainingWorkTransition.kt:22) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.TopLevelTransition.transition(TopLevelTransition.kt:53) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StateMachine.transition(StateMachine.kt:13) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEvent(FlowStateMachineImpl.kt:182) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:220) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:574) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:277) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:109) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:79) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[INFO ] 2021-04-15T13:41:54,513Z [Mock network] corda.flow. - Flow raised an error: Received session end message instead of a data session message. Mismatched send and receive?. Sending it to flow hospital to be triaged. {fiber-id=10000007, flow-id=87ec0e30-6cec-4459-9475-9db6b6a5caef, invocation_id=8b60a315-55bd-4a85-93e2-9f937a7c3c50, invocation_timestamp=2021-04-15T13:41:53.020Z, origin=O=InvestorA, L=TestLand, C=US, session_id=8b60a315-55bd-4a85-93e2-9f937a7c3c50, session_timestamp=2021-04-15T13:41:53.020Z, thread-id=645, tx_id=B4B004E01B2B513C0F8DCF7F3837ACDDE62300E45BD080B467BF1FEA7D8A0BD6}
[INFO ] 2021-04-15T13:41:54,514Z [Mock network] statemachine.StaffedFlowHospital. - Flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Invocation, sessionId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false)], numberOfSuspends=8, numberOfCommits=9), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))]), frozenFiber=67D3AF4DF4D78A09149E4BF0DB2E363D546F8F2584E333382D262503658216C2), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@5e99b08d, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7cd1172c], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=59ed445d-7ef5-4422-82b5-59bf77e0387a, reloadCheckpointAfterSuspendCount=null, numberOfCommits=9, lock=java.util.concurrent.Semaphore@3fc3cb8e[Permits = 0]) {fiber-id=10000007, flow-id=87ec0e30-6cec-4459-9475-9db6b6a5caef, invocation_id=8b60a315-55bd-4a85-93e2-9f937a7c3c50, invocation_timestamp=2021-04-15T13:41:53.020Z, origin=O=InvestorA, L=TestLand, C=US, session_id=8b60a315-55bd-4a85-93e2-9f937a7c3c50, session_timestamp=2021-04-15T13:41:53.020Z, thread-id=645, tx_id=B4B004E01B2B513C0F8DCF7F3837ACDDE62300E45BD080B467BF1FEA7D8A0BD6}
[INFO ] 2021-04-15T13:41:54,514Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {fiber-id=10000007, flow-id=87ec0e30-6cec-4459-9475-9db6b6a5caef, invocation_id=8b60a315-55bd-4a85-93e2-9f937a7c3c50, invocation_timestamp=2021-04-15T13:41:53.020Z, origin=O=InvestorA, L=TestLand, C=US, session_id=8b60a315-55bd-4a85-93e2-9f937a7c3c50, session_timestamp=2021-04-15T13:41:53.020Z, thread-id=645, tx_id=B4B004E01B2B513C0F8DCF7F3837ACDDE62300E45BD080B467BF1FEA7D8A0BD6}
net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.pollSessionMessages(StartedFlowTransition.kt:256) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.receiveFromSessionsTransition(StartedFlowTransition.kt:223) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.access$receiveFromSessionsTransition(StartedFlowTransition.kt:23) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition$receiveTransition$1.invoke(StartedFlowTransition.kt:206) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition$receiveTransition$1.invoke(StartedFlowTransition.kt:23) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.Transition$DefaultImpls.builder(Transition.kt:24) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.builder(StartedFlowTransition.kt:23) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.receiveTransition(StartedFlowTransition.kt:198) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.transition(StartedFlowTransition.kt:46) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.DoRemainingWorkTransition.cleanTransition(DoRemainingWorkTransition.kt:33) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.DoRemainingWorkTransition.transition(DoRemainingWorkTransition.kt:22) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.TopLevelTransition.transition(TopLevelTransition.kt:53) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StateMachine.transition(StateMachine.kt:13) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEvent(FlowStateMachineImpl.kt:182) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:220) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:574) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:277) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:109) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:79) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[INFO ] 2021-04-15T13:41:54,514Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {fiber-id=10000007, flow-id=87ec0e30-6cec-4459-9475-9db6b6a5caef, invocation_id=8b60a315-55bd-4a85-93e2-9f937a7c3c50, invocation_timestamp=2021-04-15T13:41:53.020Z, origin=O=InvestorA, L=TestLand, C=US, session_id=8b60a315-55bd-4a85-93e2-9f937a7c3c50, session_timestamp=2021-04-15T13:41:53.020Z, thread-id=645, tx_id=B4B004E01B2B513C0F8DCF7F3837ACDDE62300E45BD080B467BF1FEA7D8A0BD6}
net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.pollSessionMessages(StartedFlowTransition.kt:256) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.receiveFromSessionsTransition(StartedFlowTransition.kt:223) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.access$receiveFromSessionsTransition(StartedFlowTransition.kt:23) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition$receiveTransition$1.invoke(StartedFlowTransition.kt:206) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition$receiveTransition$1.invoke(StartedFlowTransition.kt:23) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.Transition$DefaultImpls.builder(Transition.kt:24) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.builder(StartedFlowTransition.kt:23) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.receiveTransition(StartedFlowTransition.kt:198) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.transition(StartedFlowTransition.kt:46) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.DoRemainingWorkTransition.cleanTransition(DoRemainingWorkTransition.kt:33) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.DoRemainingWorkTransition.transition(DoRemainingWorkTransition.kt:22) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.TopLevelTransition.transition(TopLevelTransition.kt:53) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StateMachine.transition(StateMachine.kt:13) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEvent(FlowStateMachineImpl.kt:182) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:220) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:574) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:277) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:109) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:79) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[WARN ] 2021-04-15T13:41:54,553Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] errored, dumping all transitions:

 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.032Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[87ec0e30-6cec-4459-9475-9db6b6a5caef], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Invocation, sessionId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=099C3FF28EA55785AF9B187498EBC88FCA1DBD2F212358609972FD781F525E40), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@60eb4d9d])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@60eb4d9d])
    SignalFlowHasStarted(flowId=[87ec0e30-6cec-4459-9475-9db6b6a5caef])
    SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=5289089500176922580), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=6501879759919889261), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-5289089500176922580-6328313649606075356-0-0), senderUUID=59ed445d-7ef5-4422-82b5-59bf77e0387a))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:41:53.020Z
    2021-04-15T13:41:53.021Z
checkpoint.checkpointState.sessions.SessionId(toLong=6501879759919889261): 
    null
    Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=5289089500176922580), deduplicationSeed=D-5289089500176922580-6328313649606075356)
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@60eb4d9d]
    []
isAnyCheckpointPersisted: 
    false
    true


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.032Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.021Z
    2021-04-15T13:41:53.032Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.039Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))]), maySkipCheckpoint=false, fiber=9C0BE75BB5A7BB07A944AEE8BEF84A2832D3908C546233A0648D1DE5D9E9C51C, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[87ec0e30-6cec-4459-9475-9db6b6a5caef], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Invocation, sessionId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=6501879759919889261)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=5289089500176922580), deduplicationSeed=D-5289089500176922580-6328313649606075356)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))]), frozenFiber=9C0BE75BB5A7BB07A944AEE8BEF84A2832D3908C546233A0648D1DE5D9E9C51C), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    0
    2
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=099C3FF28EA55785AF9B187498EBC88FCA1DBD2F212358609972FD781F525E40)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))]), frozenFiber=9C0BE75BB5A7BB07A944AEE8BEF84A2832D3908C546233A0648D1DE5D9E9C51C)
checkpoint.timestamp: 
    2021-04-15T13:41:53.032Z
    2021-04-15T13:41:53.036Z
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.progressStep: 
    null
    Starting


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.040Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:41:53.036Z
    2021-04-15T13:41:53.040Z
checkpoint.checkpointState.sessions.SessionId(toLong=6501879759919889261).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.040Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.041Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.040Z
    2021-04-15T13:41:53.041Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.049Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))]), maySkipCheckpoint=false, fiber=49D0A5070DF32AB7DFE9D5AB8E09938AE24B504BBE48475A5972A49BFD1FAF4C, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[87ec0e30-6cec-4459-9475-9db6b6a5caef], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Invocation, sessionId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=6501879759919889261)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=5289089500176922580), deduplicationSeed=D-5289089500176922580-6328313649606075356)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))]), frozenFiber=49D0A5070DF32AB7DFE9D5AB8E09938AE24B504BBE48475A5972A49BFD1FAF4C), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    2
    3
checkpoint.flowState.frozenFiber.hash: 
    9C0BE75BB5A7BB07A944AEE8BEF84A2832D3908C546233A0648D1DE5D9E9C51C
    49D0A5070DF32AB7DFE9D5AB8E09938AE24B504BBE48475A5972A49BFD1FAF4C
checkpoint.timestamp: 
    2021-04-15T13:41:53.041Z
    2021-04-15T13:41:53.046Z
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.049Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.750Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6501879759919889261), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@10d544d5, sender=O=InvestorA, L=TestLand, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.049Z
    2021-04-15T13:41:53.750Z
checkpoint.checkpointState.sessions.SessionId(toLong=6501879759919889261).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@10d544d5]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.750Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=6501879759919889261).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.751Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.750Z
    2021-04-15T13:41:53.751Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.752Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.751Z
    2021-04-15T13:41:53.752Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.755Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.752Z
    2021-04-15T13:41:53.755Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.755Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.755Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.756Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.755Z
    2021-04-15T13:41:53.756Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.766Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=24DB1FB51A03DF3B3DEA1406D2D1103C324E2885CFA64B230BA29C85CB5EE4A9}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=25A1887639ADE66FFE2823ADF890E2A6A3941EE3E194047339C07939B357E1A5, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[87ec0e30-6cec-4459-9475-9db6b6a5caef], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Invocation, sessionId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=6501879759919889261)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=5289089500176922580), deduplicationSeed=D-5289089500176922580-6328313649606075356)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=24DB1FB51A03DF3B3DEA1406D2D1103C324E2885CFA64B230BA29C85CB5EE4A9}, shouldRetrySend=false), frozenFiber=25A1887639ADE66FFE2823ADF890E2A6A3941EE3E194047339C07939B357E1A5), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@10d544d5])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@10d544d5])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    3
    4
checkpoint.flowIoRequest: 
    Receive
    SendAndReceive
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))])
    SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=24DB1FB51A03DF3B3DEA1406D2D1103C324E2885CFA64B230BA29C85CB5EE4A9}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    49D0A5070DF32AB7DFE9D5AB8E09938AE24B504BBE48475A5972A49BFD1FAF4C
    25A1887639ADE66FFE2823ADF890E2A6A3941EE3E194047339C07939B357E1A5
checkpoint.timestamp: 
    2021-04-15T13:41:53.756Z
    2021-04-15T13:41:53.764Z
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@10d544d5]
    []


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.768Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=5289089500176922580), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-5289089500176922580-6328313649606075356-3-0), senderUUID=59ed445d-7ef5-4422-82b5-59bf77e0387a))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=24DB1FB51A03DF3B3DEA1406D2D1103C324E2885CFA64B230BA29C85CB5EE4A9}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))])
checkpoint.timestamp: 
    2021-04-15T13:41:53.764Z
    2021-04-15T13:41:53.767Z


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.802Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6501879759919889261), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@64494994, sender=O=InvestorA, L=TestLand, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.767Z
    2021-04-15T13:41:53.802Z
checkpoint.checkpointState.sessions.SessionId(toLong=6501879759919889261).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@64494994]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.802Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=6501879759919889261).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.804Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.802Z
    2021-04-15T13:41:53.804Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.807Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.804Z
    2021-04-15T13:41:53.807Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.807Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.807Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.807Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.815Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-04-15T13:41:53.807Z), maySkipCheckpoint=false, fiber=57DC290E64F26E66B0DF533632FD82974351D789DF0D43F692D79035AA326BFC, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[87ec0e30-6cec-4459-9475-9db6b6a5caef], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Invocation, sessionId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=6501879759919889261)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=5289089500176922580), deduplicationSeed=D-5289089500176922580-6328313649606075356)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-04-15T13:41:53.807Z), frozenFiber=57DC290E64F26E66B0DF533632FD82974351D789DF0D43F692D79035AA326BFC), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@64494994])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@64494994])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    4
    5
checkpoint.flowIoRequest: 
    SendAndReceive
    Sleep
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))])
    Sleep(wakeUpAfter=2021-04-15T13:41:53.807Z)
checkpoint.flowState.frozenFiber.hash: 
    25A1887639ADE66FFE2823ADF890E2A6A3941EE3E194047339C07939B357E1A5
    57DC290E64F26E66B0DF533632FD82974351D789DF0D43F692D79035AA326BFC
checkpoint.timestamp: 
    2021-04-15T13:41:53.807Z
    2021-04-15T13:41:53.813Z
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.checkpointState.numberOfCommits: 
    4
    5
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@64494994]
    []


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.815Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Invocation, sessionId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=6501879759919889261)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=5289089500176922580), deduplicationSeed=D-5289089500176922580-6328313649606075356)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-04-15T13:41:53.807Z), frozenFiber=57DC290E64F26E66B0DF533632FD82974351D789DF0D43F692D79035AA326BFC), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@5e99b08d, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@45f76128, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=59ed445d-7ef5-4422-82b5-59bf77e0387a, reloadCheckpointAfterSuspendCount=null, numberOfCommits=5, lock=java.util.concurrent.Semaphore@3fc3cb8e[Permits = 0]), time=2021-04-15T13:41:53.807Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
isWaitingForFuture: 
    false
    true
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@45f76128


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.820Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@45f76128
    null


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.820Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.813Z
    2021-04-15T13:41:53.820Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.830Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=48672CCC6AADE4244B01F05547A5997CD8DA782DC8E168D2F56B9336D3CE9DF8}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=3E0BB736C25650A6868F5008A824DA318A774E9C66B232A17A5E477F4C20C13E, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[87ec0e30-6cec-4459-9475-9db6b6a5caef], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Invocation, sessionId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=6501879759919889261)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=5289089500176922580), deduplicationSeed=D-5289089500176922580-6328313649606075356)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=48672CCC6AADE4244B01F05547A5997CD8DA782DC8E168D2F56B9336D3CE9DF8}, shouldRetrySend=false), frozenFiber=3E0BB736C25650A6868F5008A824DA318A774E9C66B232A17A5E477F4C20C13E), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    5
    6
checkpoint.flowIoRequest: 
    Sleep
    SendAndReceive
checkpoint.flowState.flowIORequest: 
    Sleep(wakeUpAfter=2021-04-15T13:41:53.807Z)
    SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=48672CCC6AADE4244B01F05547A5997CD8DA782DC8E168D2F56B9336D3CE9DF8}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    57DC290E64F26E66B0DF533632FD82974351D789DF0D43F692D79035AA326BFC
    3E0BB736C25650A6868F5008A824DA318A774E9C66B232A17A5E477F4C20C13E
checkpoint.timestamp: 
    2021-04-15T13:41:53.820Z
    2021-04-15T13:41:53.828Z
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.checkpointState.numberOfCommits: 
    5
    6


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.831Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=5289089500176922580), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-5289089500176922580-6328313649606075356-5-0), senderUUID=59ed445d-7ef5-4422-82b5-59bf77e0387a))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=48672CCC6AADE4244B01F05547A5997CD8DA782DC8E168D2F56B9336D3CE9DF8}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))])
checkpoint.timestamp: 
    2021-04-15T13:41:53.828Z
    2021-04-15T13:41:53.830Z


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.857Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6501879759919889261), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7fca4bae, sender=O=InvestorA, L=TestLand, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.830Z
    2021-04-15T13:41:53.857Z
checkpoint.checkpointState.sessions.SessionId(toLong=6501879759919889261).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7fca4bae]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.857Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=6501879759919889261).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.858Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.857Z
    2021-04-15T13:41:53.858Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.860Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.858Z
    2021-04-15T13:41:53.860Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.860Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.860Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.860Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.867Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-04-15T13:41:53.860Z), maySkipCheckpoint=false, fiber=E6A1D4E7C1AFDAB5361E130DD5AD0E67943396B49DCE8D31130152E12EBFE232, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[87ec0e30-6cec-4459-9475-9db6b6a5caef], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Invocation, sessionId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=6501879759919889261)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=5289089500176922580), deduplicationSeed=D-5289089500176922580-6328313649606075356)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-04-15T13:41:53.860Z), frozenFiber=E6A1D4E7C1AFDAB5361E130DD5AD0E67943396B49DCE8D31130152E12EBFE232), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7fca4bae])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7fca4bae])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    6
    7
checkpoint.flowIoRequest: 
    SendAndReceive
    Sleep
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))])
    Sleep(wakeUpAfter=2021-04-15T13:41:53.860Z)
checkpoint.flowState.frozenFiber.hash: 
    3E0BB736C25650A6868F5008A824DA318A774E9C66B232A17A5E477F4C20C13E
    E6A1D4E7C1AFDAB5361E130DD5AD0E67943396B49DCE8D31130152E12EBFE232
checkpoint.timestamp: 
    2021-04-15T13:41:53.860Z
    2021-04-15T13:41:53.865Z
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
checkpoint.checkpointState.numberOfCommits: 
    6
    7
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7fca4bae]
    []


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.868Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Invocation, sessionId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=6501879759919889261)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=5289089500176922580), deduplicationSeed=D-5289089500176922580-6328313649606075356)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-04-15T13:41:53.860Z), frozenFiber=E6A1D4E7C1AFDAB5361E130DD5AD0E67943396B49DCE8D31130152E12EBFE232), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@5e99b08d, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@45034b6e, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=59ed445d-7ef5-4422-82b5-59bf77e0387a, reloadCheckpointAfterSuspendCount=null, numberOfCommits=7, lock=java.util.concurrent.Semaphore@3fc3cb8e[Permits = 0]), time=2021-04-15T13:41:53.860Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
isWaitingForFuture: 
    false
    true
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@45034b6e


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.873Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@45034b6e
    null


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.880Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=811D155F134DBF9A8C21273804C104EEB59F91162D38A3B84F4DEF2B0CABE71E, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[87ec0e30-6cec-4459-9475-9db6b6a5caef], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Invocation, sessionId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=6501879759919889261)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=5289089500176922580), deduplicationSeed=D-5289089500176922580-6328313649606075356)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=811D155F134DBF9A8C21273804C104EEB59F91162D38A3B84F4DEF2B0CABE71E), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    7
    8
checkpoint.flowIoRequest: 
    Sleep
    Send
checkpoint.flowState.flowIORequest: 
    Sleep(wakeUpAfter=2021-04-15T13:41:53.860Z)
    Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    E6A1D4E7C1AFDAB5361E130DD5AD0E67943396B49DCE8D31130152E12EBFE232
    811D155F134DBF9A8C21273804C104EEB59F91162D38A3B84F4DEF2B0CABE71E
checkpoint.timestamp: 
    2021-04-15T13:41:53.865Z
    2021-04-15T13:41:53.878Z
checkpoint.checkpointState.numberOfSuspends: 
    6
    7
checkpoint.checkpointState.numberOfCommits: 
    7
    8


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.880Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=5289089500176922580), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-5289089500176922580-6328313649606075356-7-0), senderUUID=59ed445d-7ef5-4422-82b5-59bf77e0387a))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:54.232Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.880Z
    2021-04-15T13:41:54.232Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:54.270Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:54.232Z
    2021-04-15T13:41:54.270Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:54.270Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:54.270Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:54.270Z
  Event: EnterSubFlow(subFlowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:54.271Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:54.270Z
    2021-04-15T13:41:54.271Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:54.284Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))]), maySkipCheckpoint=false, fiber=67D3AF4DF4D78A09149E4BF0DB2E363D546F8F2584E333382D262503658216C2, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[87ec0e30-6cec-4459-9475-9db6b6a5caef], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Invocation, sessionId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=6501879759919889261)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=5289089500176922580), deduplicationSeed=D-5289089500176922580-6328313649606075356)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=8, numberOfCommits=9), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))]), frozenFiber=67D3AF4DF4D78A09149E4BF0DB2E363D546F8F2584E333382D262503658216C2), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    8
    9
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))])
checkpoint.flowState.frozenFiber.hash: 
    811D155F134DBF9A8C21273804C104EEB59F91162D38A3B84F4DEF2B0CABE71E
    67D3AF4DF4D78A09149E4BF0DB2E363D546F8F2584E333382D262503658216C2
checkpoint.timestamp: 
    2021-04-15T13:41:54.271Z
    2021-04-15T13:41:54.278Z
checkpoint.checkpointState.numberOfSuspends: 
    7
    8
checkpoint.checkpointState.numberOfCommits: 
    8
    9


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:54.284Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:54.512Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6501879759919889261), payload=net.corda.node.services.statemachine.EndSessionMessage@48bc26cb), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7cd1172c, sender=O=InvestorA, L=TestLand, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:54.284Z
    2021-04-15T13:41:54.512Z
checkpoint.checkpointState.sessionsToBeClosed: 
    []
    [SessionId(toLong=6501879759919889261)]
checkpoint.checkpointState.sessions.SessionId(toLong=6501879759919889261).receivedMessages: 
    []
    [net.corda.node.services.statemachine.EndSessionMessage@48bc26cb]
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7cd1172c]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:54.512Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    RemoveSessionBindings(sessionIds=[SessionId(toLong=6501879759919889261)])
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessionsToBeClosed: 
    [SessionId(toLong=6501879759919889261)]
    []
checkpoint.checkpointState.sessions.SessionId(toLong=6501879759919889261): 
    Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[net.corda.node.services.statemachine.EndSessionMessage@48bc26cb], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=5289089500176922580), deduplicationSeed=D-5289089500176922580-6328313649606075356)
    null


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:54.513Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:54.512Z
    2021-04-15T13:41:54.513Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:54.513Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:54.514Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=7625287790146749198, exception=net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?)], propagatedIndex=0, propagating=false)


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:54.514Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:54.514Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:41:54.513Z
    2021-04-15T13:41:54.514Z
 {fiber-id=10000007, flow-id=87ec0e30-6cec-4459-9475-9db6b6a5caef, invocation_id=8b60a315-55bd-4a85-93e2-9f937a7c3c50, invocation_timestamp=2021-04-15T13:41:53.020Z, origin=O=InvestorA, L=TestLand, C=US, session_id=8b60a315-55bd-4a85-93e2-9f937a7c3c50, session_timestamp=2021-04-15T13:41:53.020Z, thread-id=645, tx_id=B4B004E01B2B513C0F8DCF7F3837ACDDE62300E45BD080B467BF1FEA7D8A0BD6}
[WARN ] 2021-04-15T13:41:54,553Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] error {fiber-id=10000007, flow-id=87ec0e30-6cec-4459-9475-9db6b6a5caef, invocation_id=8b60a315-55bd-4a85-93e2-9f937a7c3c50, invocation_timestamp=2021-04-15T13:41:53.020Z, origin=O=InvestorA, L=TestLand, C=US, session_id=8b60a315-55bd-4a85-93e2-9f937a7c3c50, session_timestamp=2021-04-15T13:41:53.020Z, thread-id=645, tx_id=B4B004E01B2B513C0F8DCF7F3837ACDDE62300E45BD080B467BF1FEA7D8A0BD6}
net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.pollSessionMessages(StartedFlowTransition.kt:256) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.receiveFromSessionsTransition(StartedFlowTransition.kt:223) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.access$receiveFromSessionsTransition(StartedFlowTransition.kt:23) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition$receiveTransition$1.invoke(StartedFlowTransition.kt:206) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition$receiveTransition$1.invoke(StartedFlowTransition.kt:23) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.Transition$DefaultImpls.builder(Transition.kt:24) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.builder(StartedFlowTransition.kt:23) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.receiveTransition(StartedFlowTransition.kt:198) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.transition(StartedFlowTransition.kt:46) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.DoRemainingWorkTransition.cleanTransition(DoRemainingWorkTransition.kt:33) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.DoRemainingWorkTransition.transition(DoRemainingWorkTransition.kt:22) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.TopLevelTransition.transition(TopLevelTransition.kt:53) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StateMachine.transition(StateMachine.kt:13) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEvent(FlowStateMachineImpl.kt:182) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:220) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:574) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:277) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:109) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:79) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[WARN ] 2021-04-15T13:41:54,554Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {fiber-id=10000007, flow-id=87ec0e30-6cec-4459-9475-9db6b6a5caef, invocation_id=8b60a315-55bd-4a85-93e2-9f937a7c3c50, invocation_timestamp=2021-04-15T13:41:53.020Z, origin=O=InvestorA, L=TestLand, C=US, session_id=8b60a315-55bd-4a85-93e2-9f937a7c3c50, session_timestamp=2021-04-15T13:41:53.020Z, thread-id=645, tx_id=B4B004E01B2B513C0F8DCF7F3837ACDDE62300E45BD080B467BF1FEA7D8A0BD6}
[WARN ] 2021-04-15T13:41:54,588Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] errored, dumping all transitions:

 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.032Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[87ec0e30-6cec-4459-9475-9db6b6a5caef], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Invocation, sessionId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=099C3FF28EA55785AF9B187498EBC88FCA1DBD2F212358609972FD781F525E40), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@60eb4d9d])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@60eb4d9d])
    SignalFlowHasStarted(flowId=[87ec0e30-6cec-4459-9475-9db6b6a5caef])
    SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=5289089500176922580), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=6501879759919889261), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-5289089500176922580-6328313649606075356-0-0), senderUUID=59ed445d-7ef5-4422-82b5-59bf77e0387a))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:41:53.020Z
    2021-04-15T13:41:53.021Z
checkpoint.checkpointState.sessions.SessionId(toLong=6501879759919889261): 
    null
    Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=5289089500176922580), deduplicationSeed=D-5289089500176922580-6328313649606075356)
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@60eb4d9d]
    []
isAnyCheckpointPersisted: 
    false
    true


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.032Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.021Z
    2021-04-15T13:41:53.032Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.039Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))]), maySkipCheckpoint=false, fiber=9C0BE75BB5A7BB07A944AEE8BEF84A2832D3908C546233A0648D1DE5D9E9C51C, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[87ec0e30-6cec-4459-9475-9db6b6a5caef], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Invocation, sessionId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=6501879759919889261)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=5289089500176922580), deduplicationSeed=D-5289089500176922580-6328313649606075356)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))]), frozenFiber=9C0BE75BB5A7BB07A944AEE8BEF84A2832D3908C546233A0648D1DE5D9E9C51C), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    0
    2
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=099C3FF28EA55785AF9B187498EBC88FCA1DBD2F212358609972FD781F525E40)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))]), frozenFiber=9C0BE75BB5A7BB07A944AEE8BEF84A2832D3908C546233A0648D1DE5D9E9C51C)
checkpoint.timestamp: 
    2021-04-15T13:41:53.032Z
    2021-04-15T13:41:53.036Z
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.progressStep: 
    null
    Starting


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.040Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:41:53.036Z
    2021-04-15T13:41:53.040Z
checkpoint.checkpointState.sessions.SessionId(toLong=6501879759919889261).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.040Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.041Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.040Z
    2021-04-15T13:41:53.041Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.049Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))]), maySkipCheckpoint=false, fiber=49D0A5070DF32AB7DFE9D5AB8E09938AE24B504BBE48475A5972A49BFD1FAF4C, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[87ec0e30-6cec-4459-9475-9db6b6a5caef], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Invocation, sessionId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=6501879759919889261)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=5289089500176922580), deduplicationSeed=D-5289089500176922580-6328313649606075356)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))]), frozenFiber=49D0A5070DF32AB7DFE9D5AB8E09938AE24B504BBE48475A5972A49BFD1FAF4C), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    2
    3
checkpoint.flowState.frozenFiber.hash: 
    9C0BE75BB5A7BB07A944AEE8BEF84A2832D3908C546233A0648D1DE5D9E9C51C
    49D0A5070DF32AB7DFE9D5AB8E09938AE24B504BBE48475A5972A49BFD1FAF4C
checkpoint.timestamp: 
    2021-04-15T13:41:53.041Z
    2021-04-15T13:41:53.046Z
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.049Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.750Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6501879759919889261), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@10d544d5, sender=O=InvestorA, L=TestLand, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.049Z
    2021-04-15T13:41:53.750Z
checkpoint.checkpointState.sessions.SessionId(toLong=6501879759919889261).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@10d544d5]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.750Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=6501879759919889261).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.751Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.750Z
    2021-04-15T13:41:53.751Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.752Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.751Z
    2021-04-15T13:41:53.752Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.755Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.752Z
    2021-04-15T13:41:53.755Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.755Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.755Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.756Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.755Z
    2021-04-15T13:41:53.756Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.766Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=24DB1FB51A03DF3B3DEA1406D2D1103C324E2885CFA64B230BA29C85CB5EE4A9}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=25A1887639ADE66FFE2823ADF890E2A6A3941EE3E194047339C07939B357E1A5, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[87ec0e30-6cec-4459-9475-9db6b6a5caef], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Invocation, sessionId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=6501879759919889261)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=5289089500176922580), deduplicationSeed=D-5289089500176922580-6328313649606075356)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=24DB1FB51A03DF3B3DEA1406D2D1103C324E2885CFA64B230BA29C85CB5EE4A9}, shouldRetrySend=false), frozenFiber=25A1887639ADE66FFE2823ADF890E2A6A3941EE3E194047339C07939B357E1A5), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@10d544d5])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@10d544d5])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    3
    4
checkpoint.flowIoRequest: 
    Receive
    SendAndReceive
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))])
    SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=24DB1FB51A03DF3B3DEA1406D2D1103C324E2885CFA64B230BA29C85CB5EE4A9}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    49D0A5070DF32AB7DFE9D5AB8E09938AE24B504BBE48475A5972A49BFD1FAF4C
    25A1887639ADE66FFE2823ADF890E2A6A3941EE3E194047339C07939B357E1A5
checkpoint.timestamp: 
    2021-04-15T13:41:53.756Z
    2021-04-15T13:41:53.764Z
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@10d544d5]
    []


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.768Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=5289089500176922580), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-5289089500176922580-6328313649606075356-3-0), senderUUID=59ed445d-7ef5-4422-82b5-59bf77e0387a))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=24DB1FB51A03DF3B3DEA1406D2D1103C324E2885CFA64B230BA29C85CB5EE4A9}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))])
checkpoint.timestamp: 
    2021-04-15T13:41:53.764Z
    2021-04-15T13:41:53.767Z


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.802Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6501879759919889261), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@64494994, sender=O=InvestorA, L=TestLand, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.767Z
    2021-04-15T13:41:53.802Z
checkpoint.checkpointState.sessions.SessionId(toLong=6501879759919889261).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@64494994]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.802Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=6501879759919889261).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.804Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.802Z
    2021-04-15T13:41:53.804Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.807Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.804Z
    2021-04-15T13:41:53.807Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.807Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.807Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.807Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.815Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-04-15T13:41:53.807Z), maySkipCheckpoint=false, fiber=57DC290E64F26E66B0DF533632FD82974351D789DF0D43F692D79035AA326BFC, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[87ec0e30-6cec-4459-9475-9db6b6a5caef], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Invocation, sessionId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=6501879759919889261)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=5289089500176922580), deduplicationSeed=D-5289089500176922580-6328313649606075356)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-04-15T13:41:53.807Z), frozenFiber=57DC290E64F26E66B0DF533632FD82974351D789DF0D43F692D79035AA326BFC), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@64494994])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@64494994])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    4
    5
checkpoint.flowIoRequest: 
    SendAndReceive
    Sleep
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))])
    Sleep(wakeUpAfter=2021-04-15T13:41:53.807Z)
checkpoint.flowState.frozenFiber.hash: 
    25A1887639ADE66FFE2823ADF890E2A6A3941EE3E194047339C07939B357E1A5
    57DC290E64F26E66B0DF533632FD82974351D789DF0D43F692D79035AA326BFC
checkpoint.timestamp: 
    2021-04-15T13:41:53.807Z
    2021-04-15T13:41:53.813Z
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.checkpointState.numberOfCommits: 
    4
    5
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@64494994]
    []


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.815Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Invocation, sessionId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=6501879759919889261)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=5289089500176922580), deduplicationSeed=D-5289089500176922580-6328313649606075356)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-04-15T13:41:53.807Z), frozenFiber=57DC290E64F26E66B0DF533632FD82974351D789DF0D43F692D79035AA326BFC), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@5e99b08d, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@45f76128, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=59ed445d-7ef5-4422-82b5-59bf77e0387a, reloadCheckpointAfterSuspendCount=null, numberOfCommits=5, lock=java.util.concurrent.Semaphore@3fc3cb8e[Permits = 0]), time=2021-04-15T13:41:53.807Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
isWaitingForFuture: 
    false
    true
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@45f76128


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.820Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@45f76128
    null


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.820Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.813Z
    2021-04-15T13:41:53.820Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.830Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=48672CCC6AADE4244B01F05547A5997CD8DA782DC8E168D2F56B9336D3CE9DF8}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=3E0BB736C25650A6868F5008A824DA318A774E9C66B232A17A5E477F4C20C13E, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[87ec0e30-6cec-4459-9475-9db6b6a5caef], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Invocation, sessionId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=6501879759919889261)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=5289089500176922580), deduplicationSeed=D-5289089500176922580-6328313649606075356)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=48672CCC6AADE4244B01F05547A5997CD8DA782DC8E168D2F56B9336D3CE9DF8}, shouldRetrySend=false), frozenFiber=3E0BB736C25650A6868F5008A824DA318A774E9C66B232A17A5E477F4C20C13E), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    5
    6
checkpoint.flowIoRequest: 
    Sleep
    SendAndReceive
checkpoint.flowState.flowIORequest: 
    Sleep(wakeUpAfter=2021-04-15T13:41:53.807Z)
    SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=48672CCC6AADE4244B01F05547A5997CD8DA782DC8E168D2F56B9336D3CE9DF8}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    57DC290E64F26E66B0DF533632FD82974351D789DF0D43F692D79035AA326BFC
    3E0BB736C25650A6868F5008A824DA318A774E9C66B232A17A5E477F4C20C13E
checkpoint.timestamp: 
    2021-04-15T13:41:53.820Z
    2021-04-15T13:41:53.828Z
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.checkpointState.numberOfCommits: 
    5
    6


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.831Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=5289089500176922580), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-5289089500176922580-6328313649606075356-5-0), senderUUID=59ed445d-7ef5-4422-82b5-59bf77e0387a))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=48672CCC6AADE4244B01F05547A5997CD8DA782DC8E168D2F56B9336D3CE9DF8}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))])
checkpoint.timestamp: 
    2021-04-15T13:41:53.828Z
    2021-04-15T13:41:53.830Z


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.857Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6501879759919889261), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7fca4bae, sender=O=InvestorA, L=TestLand, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.830Z
    2021-04-15T13:41:53.857Z
checkpoint.checkpointState.sessions.SessionId(toLong=6501879759919889261).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7fca4bae]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.857Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=6501879759919889261).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.858Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.857Z
    2021-04-15T13:41:53.858Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.860Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.858Z
    2021-04-15T13:41:53.860Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.860Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.860Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.860Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.867Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-04-15T13:41:53.860Z), maySkipCheckpoint=false, fiber=E6A1D4E7C1AFDAB5361E130DD5AD0E67943396B49DCE8D31130152E12EBFE232, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[87ec0e30-6cec-4459-9475-9db6b6a5caef], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Invocation, sessionId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=6501879759919889261)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=5289089500176922580), deduplicationSeed=D-5289089500176922580-6328313649606075356)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-04-15T13:41:53.860Z), frozenFiber=E6A1D4E7C1AFDAB5361E130DD5AD0E67943396B49DCE8D31130152E12EBFE232), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7fca4bae])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7fca4bae])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    6
    7
checkpoint.flowIoRequest: 
    SendAndReceive
    Sleep
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))])
    Sleep(wakeUpAfter=2021-04-15T13:41:53.860Z)
checkpoint.flowState.frozenFiber.hash: 
    3E0BB736C25650A6868F5008A824DA318A774E9C66B232A17A5E477F4C20C13E
    E6A1D4E7C1AFDAB5361E130DD5AD0E67943396B49DCE8D31130152E12EBFE232
checkpoint.timestamp: 
    2021-04-15T13:41:53.860Z
    2021-04-15T13:41:53.865Z
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
checkpoint.checkpointState.numberOfCommits: 
    6
    7
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7fca4bae]
    []


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.868Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Invocation, sessionId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=6501879759919889261)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=5289089500176922580), deduplicationSeed=D-5289089500176922580-6328313649606075356)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-04-15T13:41:53.860Z), frozenFiber=E6A1D4E7C1AFDAB5361E130DD5AD0E67943396B49DCE8D31130152E12EBFE232), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@5e99b08d, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@45034b6e, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=59ed445d-7ef5-4422-82b5-59bf77e0387a, reloadCheckpointAfterSuspendCount=null, numberOfCommits=7, lock=java.util.concurrent.Semaphore@3fc3cb8e[Permits = 0]), time=2021-04-15T13:41:53.860Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
isWaitingForFuture: 
    false
    true
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@45034b6e


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.873Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@45034b6e
    null


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.880Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=811D155F134DBF9A8C21273804C104EEB59F91162D38A3B84F4DEF2B0CABE71E, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[87ec0e30-6cec-4459-9475-9db6b6a5caef], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Invocation, sessionId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=6501879759919889261)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=5289089500176922580), deduplicationSeed=D-5289089500176922580-6328313649606075356)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=811D155F134DBF9A8C21273804C104EEB59F91162D38A3B84F4DEF2B0CABE71E), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    7
    8
checkpoint.flowIoRequest: 
    Sleep
    Send
checkpoint.flowState.flowIORequest: 
    Sleep(wakeUpAfter=2021-04-15T13:41:53.860Z)
    Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    E6A1D4E7C1AFDAB5361E130DD5AD0E67943396B49DCE8D31130152E12EBFE232
    811D155F134DBF9A8C21273804C104EEB59F91162D38A3B84F4DEF2B0CABE71E
checkpoint.timestamp: 
    2021-04-15T13:41:53.865Z
    2021-04-15T13:41:53.878Z
checkpoint.checkpointState.numberOfSuspends: 
    6
    7
checkpoint.checkpointState.numberOfCommits: 
    7
    8


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:53.880Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=5289089500176922580), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-5289089500176922580-6328313649606075356-7-0), senderUUID=59ed445d-7ef5-4422-82b5-59bf77e0387a))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:54.232Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:53.880Z
    2021-04-15T13:41:54.232Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:54.270Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:54.232Z
    2021-04-15T13:41:54.270Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:54.270Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:54.270Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlowHandler, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:54.270Z
  Event: EnterSubFlow(subFlowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:54.271Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:54.270Z
    2021-04-15T13:41:54.271Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:54.284Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))]), maySkipCheckpoint=false, fiber=67D3AF4DF4D78A09149E4BF0DB2E363D546F8F2584E333382D262503658216C2, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[87ec0e30-6cec-4459-9475-9db6b6a5caef], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Invocation, sessionId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=6501879759919889261)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=5289089500176922580), deduplicationSeed=D-5289089500176922580-6328313649606075356)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=8, numberOfCommits=9), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))]), frozenFiber=67D3AF4DF4D78A09149E4BF0DB2E363D546F8F2584E333382D262503658216C2), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    8
    9
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))])
checkpoint.flowState.frozenFiber.hash: 
    811D155F134DBF9A8C21273804C104EEB59F91162D38A3B84F4DEF2B0CABE71E
    67D3AF4DF4D78A09149E4BF0DB2E363D546F8F2584E333382D262503658216C2
checkpoint.timestamp: 
    2021-04-15T13:41:54.271Z
    2021-04-15T13:41:54.278Z
checkpoint.checkpointState.numberOfSuspends: 
    7
    8
checkpoint.checkpointState.numberOfCommits: 
    8
    9


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:54.284Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:54.512Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6501879759919889261), payload=net.corda.node.services.statemachine.EndSessionMessage@48bc26cb), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7cd1172c, sender=O=InvestorA, L=TestLand, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:54.284Z
    2021-04-15T13:41:54.512Z
checkpoint.checkpointState.sessionsToBeClosed: 
    []
    [SessionId(toLong=6501879759919889261)]
checkpoint.checkpointState.sessions.SessionId(toLong=6501879759919889261).receivedMessages: 
    []
    [net.corda.node.services.statemachine.EndSessionMessage@48bc26cb]
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7cd1172c]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:54.512Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    RemoveSessionBindings(sessionIds=[SessionId(toLong=6501879759919889261)])
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessionsToBeClosed: 
    [SessionId(toLong=6501879759919889261)]
    []
checkpoint.checkpointState.sessions.SessionId(toLong=6501879759919889261): 
    Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[net.corda.node.services.statemachine.EndSessionMessage@48bc26cb], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=5289089500176922580), deduplicationSeed=D-5289089500176922580-6328313649606075356)
    null


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:54.513Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:41:54.512Z
    2021-04-15T13:41:54.513Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:54.513Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false)]


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:54.514Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=7625287790146749198, exception=net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?)], propagatedIndex=0, propagating=false)


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:54.514Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:54.514Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:41:54.513Z
    2021-04-15T13:41:54.514Z


 --- Transition of flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] ---
  Timestamp: 2021-04-15T13:41:54.563Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=7625287790146749198)], sessions=[], senderUUID=59ed445d-7ef5-4422-82b5-59bf77e0387a)
    CreateTransaction
    RemoveCheckpoint(id=[87ec0e30-6cec-4459-9475-9db6b6a5caef], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7cd1172c])
    ReleaseSoftLocks(uuid=87ec0e30-6cec-4459-9475-9db6b6a5caef)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7cd1172c])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[87ec0e30-6cec-4459-9475-9db6b6a5caef], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=7625287790146749198, exception=net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Invocation, sessionId=8b60a315-55bd-4a85-93e2-9f937a7c3c50, timestamp: 2021-04-15T13:41:53.020Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=40159D4C7A03E300F0F84E1A5907B5159533837BE009419FAF26447CDD5D1982), isEnabledTimedFlow=false)], numberOfSuspends=8, numberOfCommits=10), flowState=net.corda.node.services.statemachine.FlowState$Finished@70579ad0, errorState=Errored(errors=[FlowError(errorId=7625287790146749198, exception=net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@5e99b08d, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, senderUUID=59ed445d-7ef5-4422-82b5-59bf77e0387a, reloadCheckpointAfterSuspendCount=null, numberOfCommits=10, lock=java.util.concurrent.Semaphore@3fc3cb8e[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
numberOfCommits: 
    9
    10
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=6501879759919889261))]), frozenFiber=67D3AF4DF4D78A09149E4BF0DB2E363D546F8F2584E333382D262503658216C2)
    net.corda.node.services.statemachine.FlowState$Finished@70579ad0
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.timestamp: 
    2021-04-15T13:41:54.514Z
    2021-04-15T13:41:54.554Z
checkpoint.checkpointState.numberOfCommits: 
    9
    10
isRemoved: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7cd1172c]
    []
 {fiber-id=10000007, flow-id=87ec0e30-6cec-4459-9475-9db6b6a5caef, invocation_id=8b60a315-55bd-4a85-93e2-9f937a7c3c50, invocation_timestamp=2021-04-15T13:41:53.020Z, origin=O=InvestorA, L=TestLand, C=US, session_id=8b60a315-55bd-4a85-93e2-9f937a7c3c50, session_timestamp=2021-04-15T13:41:53.020Z, thread-id=645, tx_id=B4B004E01B2B513C0F8DCF7F3837ACDDE62300E45BD080B467BF1FEA7D8A0BD6}
[WARN ] 2021-04-15T13:41:54,588Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [87ec0e30-6cec-4459-9475-9db6b6a5caef] error {fiber-id=10000007, flow-id=87ec0e30-6cec-4459-9475-9db6b6a5caef, invocation_id=8b60a315-55bd-4a85-93e2-9f937a7c3c50, invocation_timestamp=2021-04-15T13:41:53.020Z, origin=O=InvestorA, L=TestLand, C=US, session_id=8b60a315-55bd-4a85-93e2-9f937a7c3c50, session_timestamp=2021-04-15T13:41:53.020Z, thread-id=645, tx_id=B4B004E01B2B513C0F8DCF7F3837ACDDE62300E45BD080B467BF1FEA7D8A0BD6}
net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.pollSessionMessages(StartedFlowTransition.kt:256) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.receiveFromSessionsTransition(StartedFlowTransition.kt:223) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.access$receiveFromSessionsTransition(StartedFlowTransition.kt:23) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition$receiveTransition$1.invoke(StartedFlowTransition.kt:206) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition$receiveTransition$1.invoke(StartedFlowTransition.kt:23) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.Transition$DefaultImpls.builder(Transition.kt:24) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.builder(StartedFlowTransition.kt:23) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.receiveTransition(StartedFlowTransition.kt:198) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.transition(StartedFlowTransition.kt:46) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.DoRemainingWorkTransition.cleanTransition(DoRemainingWorkTransition.kt:33) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.DoRemainingWorkTransition.transition(DoRemainingWorkTransition.kt:22) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.TopLevelTransition.transition(TopLevelTransition.kt:53) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.transitions.StateMachine.transition(StateMachine.kt:13) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEvent(FlowStateMachineImpl.kt:182) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:220) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:574) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:277) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:109) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:79) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[INFO ] 2021-04-15T13:41:54,631Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2021-04-15T13:41:54,659Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:41:54,659Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:41:54,664Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2021-04-15T13:41:54,688Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:41:54,688Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:41:54,689Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2021-04-15T13:41:54,702Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:41:54,702Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:41:54,705Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2021-04-15T13:41:54,719Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:41:54,719Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:43:36,970Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/peterli/Desktop/tokenTest/workflows ... {}
[INFO ] 2021-04-15T13:43:37,175Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:43:38,576Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2021-04-15T13:43:39,588Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2021-04-15T13:43:39,604Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2021-04-15T13:43:39,605Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:43:40,280Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:43:40,313Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2021-04-15T13:43:40,878Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:43:40,878Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:43:40,879Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2021-04-15T13:43:41,083Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:43:41,094Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:43:41,697Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2021-04-15T13:43:42,600Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:43:42,612Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2021-04-15T13:43:42,634Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:43:42,634Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2021-04-15T13:43:42,634Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:43:43,519Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:43:43,519Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2021-04-15T13:43:43,647Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:43:43,647Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2021-04-15T13:43:43,678Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:43:43,678Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2021-04-15T13:43:43,808Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:43:43,808Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:43:43,949Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:43:43,980Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:43:44,064Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2021-04-15T13:43:44,355Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:43:44,356Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2021-04-15T13:43:44,356Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:43:44,380Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2021-04-15T13:43:44,380Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:43:44,443Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:43:44,443Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2021-04-15T13:43:44,443Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:43:44,444Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2021-04-15T13:43:44,454Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:43:44,454Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:43:44,464Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2021-04-15T13:43:44,558Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:43:44,558Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:43:44,571Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:43:44,571Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:43:44,571Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:43:44,571Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:43:44,571Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:43:44,571Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:43:44,571Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:43:44,584Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:43:44,584Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2021-04-15T13:43:44,595Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:43:44,610Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:43:44,630Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2021-04-15T13:43:44,673Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:43:44,673Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2021-04-15T13:43:44,673Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:43:44,685Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2021-04-15T13:43:44,685Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:43:44,685Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:43:44,685Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2021-04-15T13:43:44,707Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:43:44,707Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2021-04-15T13:43:44,708Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:43:44,708Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:43:44,708Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2021-04-15T13:43:44,749Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:43:44,749Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:43:44,749Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:43:44,749Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:43:44,749Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:43:44,760Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:43:44,761Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:43:44,761Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:43:44,761Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:43:44,761Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:43:44,761Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:43:44,761Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:43:44,761Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2021-04-15T13:43:46,495Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:43:46,495Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:43:46,495Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2021-04-15T13:43:46,495Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:43:46,507Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:43:46,519Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/peterli/Desktop/tokenTest/.gradle {}
[INFO ] 2021-04-15T13:43:46,519Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:43:46,544Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2021-04-15T13:43:51,887Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/0/cordapps] {}
[INFO ] 2021-04-15T13:43:51,897Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:43:51,913Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:43:52,045Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:43:52,068Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:43:52,132Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:43:53,812Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:43:54,118Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:43:54,193Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:43:54,216Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:43:54,220Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLDDysCf3fHkQRAv8AgtirpSAvE5oqTDPTywRsfMJMkXoM, alias: identity-private-key {}
[INFO ] 2021-04-15T13:43:54,397Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:43:54,398Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:43:54,402Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:43:54,403Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:43:54,404Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:43:54,404Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:43:54,405Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:43:54,406Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:43:54,406Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:43:54,407Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:43:54,408Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:43:54,409Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:43:54,409Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:43:54,410Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:43:54,411Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:43:54,453Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:43:54,569Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:43:32.300Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:44:00,884Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:44:00,979Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-04-15T13:44:00,984Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-04-15T13:44:03,994Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-04-15T13:44:04,439Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:44:04,446Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494244439), owningKey=DLDDysCf3fHkQRAv8AgtirpSAvE5oqTDPTywRsfMJMkXoM {}
[INFO ] 2021-04-15T13:44:04,446Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:44:04,623Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494244439) {}
[INFO ] 2021-04-15T13:44:04,705Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:44:04,734Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:44:04,736Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:44:04,778Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494244439), owningKey=DLDDysCf3fHkQRAv8AgtirpSAvE5oqTDPTywRsfMJMkXoM {}
[INFO ] 2021-04-15T13:44:04,778Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:44:04,908Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:44:04,940Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:44:04,957Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:44:04,972Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:44:05,073Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:44:05,170Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:44:05,170Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-04-15T13:44:06,046Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494244439) {}
[INFO ] 2021-04-15T13:44:06,057Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494244439), owningKey=DLDDysCf3fHkQRAv8AgtirpSAvE5oqTDPTywRsfMJMkXoM {}
[INFO ] 2021-04-15T13:44:06,057Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:44:06,057Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494244439), owningKey=DLDDysCf3fHkQRAv8AgtirpSAvE5oqTDPTywRsfMJMkXoM {}
[INFO ] 2021-04-15T13:44:06,057Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:44:06,072Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/1/cordapps] {}
[INFO ] 2021-04-15T13:44:06,072Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:44:06,072Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:44:06,081Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:44:06,090Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:44:06,100Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:44:06,154Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:44:06,155Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:44:06,157Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:44:06,213Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:44:06,213Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLDVHM8jZ77z2pCMBQ2hedyAQFhbnX2s7x69gEfyAUf19g, alias: identity-private-key {}
[INFO ] 2021-04-15T13:44:06,224Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:44:06,224Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:44:06,224Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:44:06,224Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:44:06,224Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:44:06,224Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:44:06,224Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:44:06,224Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:44:06,225Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:44:06,225Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:44:06,225Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:44:06,225Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:44:06,225Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:44:06,225Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:44:06,225Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:44:06,225Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:44:06,231Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:43:32.300Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:44:07,015Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:44:07,016Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:44:07,017Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:44:07,228Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:44:07,235Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:44:07,240Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494247235), owningKey=DLDVHM8jZ77z2pCMBQ2hedyAQFhbnX2s7x69gEfyAUf19g {}
[INFO ] 2021-04-15T13:44:07,240Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:44:07,252Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494247235) {}
[INFO ] 2021-04-15T13:44:07,261Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:44:07,261Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:44:07,261Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:44:07,274Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494247235), owningKey=DLDVHM8jZ77z2pCMBQ2hedyAQFhbnX2s7x69gEfyAUf19g {}
[INFO ] 2021-04-15T13:44:07,274Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:44:07,315Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:44:07,344Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:44:07,348Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:44:07,348Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:44:07,349Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:44:07,357Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:44:07,389Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494247235) {}
[INFO ] 2021-04-15T13:44:07,392Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494244439), owningKey=DLDDysCf3fHkQRAv8AgtirpSAvE5oqTDPTywRsfMJMkXoM {}
[INFO ] 2021-04-15T13:44:07,392Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:44:07,412Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494247235), owningKey=DLDVHM8jZ77z2pCMBQ2hedyAQFhbnX2s7x69gEfyAUf19g {}
[INFO ] 2021-04-15T13:44:07,412Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:44:07,428Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494247235), owningKey=DLDVHM8jZ77z2pCMBQ2hedyAQFhbnX2s7x69gEfyAUf19g {}
[INFO ] 2021-04-15T13:44:07,428Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:44:07,428Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494247235), owningKey=DLDVHM8jZ77z2pCMBQ2hedyAQFhbnX2s7x69gEfyAUf19g {}
[INFO ] 2021-04-15T13:44:07,428Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:44:07,441Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/2/cordapps] {}
[INFO ] 2021-04-15T13:44:07,442Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:44:07,442Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:44:07,450Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:44:07,457Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:44:07,468Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:44:07,517Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:44:07,518Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:44:07,520Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:44:07,560Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:44:07,561Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLCM5sxQavwr3k5JMH1e7B5Vnb1hoejYdSSyCNLDTcPL2S, alias: identity-private-key {}
[INFO ] 2021-04-15T13:44:07,569Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:44:07,569Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:44:07,570Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:44:07,570Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:44:07,570Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:44:07,570Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:44:07,570Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:44:07,570Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:44:07,570Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:44:07,570Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:44:07,570Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:44:07,570Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:44:07,570Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:44:07,570Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:44:07,570Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:44:07,570Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:44:07,575Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:43:32.300Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:44:08,266Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:44:08,268Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:44:08,268Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:44:08,431Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:44:08,438Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:44:08,442Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494248438), owningKey=DLCM5sxQavwr3k5JMH1e7B5Vnb1hoejYdSSyCNLDTcPL2S {}
[INFO ] 2021-04-15T13:44:08,442Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:44:08,452Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494248438) {}
[INFO ] 2021-04-15T13:44:08,461Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:44:08,461Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:44:08,461Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:44:08,471Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494248438), owningKey=DLCM5sxQavwr3k5JMH1e7B5Vnb1hoejYdSSyCNLDTcPL2S {}
[INFO ] 2021-04-15T13:44:08,471Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:44:08,503Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:44:08,536Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:44:08,538Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:44:08,539Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:44:08,539Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:44:08,545Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:44:08,573Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494248438) {}
[INFO ] 2021-04-15T13:44:08,576Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494244439), owningKey=DLDDysCf3fHkQRAv8AgtirpSAvE5oqTDPTywRsfMJMkXoM {}
[INFO ] 2021-04-15T13:44:08,576Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:44:08,592Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494248438), owningKey=DLCM5sxQavwr3k5JMH1e7B5Vnb1hoejYdSSyCNLDTcPL2S {}
[INFO ] 2021-04-15T13:44:08,592Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:44:08,608Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494247235), owningKey=DLDVHM8jZ77z2pCMBQ2hedyAQFhbnX2s7x69gEfyAUf19g {}
[INFO ] 2021-04-15T13:44:08,608Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:44:08,624Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494248438), owningKey=DLCM5sxQavwr3k5JMH1e7B5Vnb1hoejYdSSyCNLDTcPL2S {}
[INFO ] 2021-04-15T13:44:08,624Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:44:08,636Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494248438), owningKey=DLCM5sxQavwr3k5JMH1e7B5Vnb1hoejYdSSyCNLDTcPL2S {}
[INFO ] 2021-04-15T13:44:08,636Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:44:08,636Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494248438), owningKey=DLCM5sxQavwr3k5JMH1e7B5Vnb1hoejYdSSyCNLDTcPL2S {}
[INFO ] 2021-04-15T13:44:08,636Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:44:08,647Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/3/cordapps] {}
[INFO ] 2021-04-15T13:44:08,648Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/3/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/3/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/3/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/3/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:44:08,648Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/3/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:44:08,657Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/3/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:44:08,663Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/3/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:44:08,673Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/3/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:44:08,727Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:44:08,731Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:44:08,732Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:44:08,780Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:44:08,780Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL9VEthcfhsvc3giW8gPTyzSozYLaLuHcj1qhcb5pxgeRw, alias: identity-private-key {}
[INFO ] 2021-04-15T13:44:08,791Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:44:08,791Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:44:08,791Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:44:08,791Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:44:08,791Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:44:08,791Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:44:08,791Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:44:08,791Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:44:08,791Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:44:08,791Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:44:08,792Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:44:08,792Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:44:08,792Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:44:08,792Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:44:08,792Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:44:08,792Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:44:08,796Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:43:32.300Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:44:09,449Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:44:09,450Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:44:09,451Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:44:09,606Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:44:09,614Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:44:09,618Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494249614), owningKey=DL9VEthcfhsvc3giW8gPTyzSozYLaLuHcj1qhcb5pxgeRw {}
[INFO ] 2021-04-15T13:44:09,618Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:44:09,628Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494249614) {}
[INFO ] 2021-04-15T13:44:09,634Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:44:09,635Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:44:09,635Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:44:09,645Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494249614), owningKey=DL9VEthcfhsvc3giW8gPTyzSozYLaLuHcj1qhcb5pxgeRw {}
[INFO ] 2021-04-15T13:44:09,645Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:44:09,674Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:44:09,701Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:44:09,704Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:44:09,704Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-134335.571-B60CC61476DD1F7F/nodes/3/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:44:09,705Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:44:09,712Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:44:09,738Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494249614) {}
[INFO ] 2021-04-15T13:44:09,741Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494244439), owningKey=DLDDysCf3fHkQRAv8AgtirpSAvE5oqTDPTywRsfMJMkXoM {}
[INFO ] 2021-04-15T13:44:09,741Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:44:09,757Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494249614), owningKey=DL9VEthcfhsvc3giW8gPTyzSozYLaLuHcj1qhcb5pxgeRw {}
[INFO ] 2021-04-15T13:44:09,757Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:44:09,776Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494247235), owningKey=DLDVHM8jZ77z2pCMBQ2hedyAQFhbnX2s7x69gEfyAUf19g {}
[INFO ] 2021-04-15T13:44:09,776Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:44:09,791Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494249614), owningKey=DL9VEthcfhsvc3giW8gPTyzSozYLaLuHcj1qhcb5pxgeRw {}
[INFO ] 2021-04-15T13:44:09,791Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:44:09,802Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494248438), owningKey=DLCM5sxQavwr3k5JMH1e7B5Vnb1hoejYdSSyCNLDTcPL2S {}
[INFO ] 2021-04-15T13:44:09,802Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:44:09,816Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494249614), owningKey=DL9VEthcfhsvc3giW8gPTyzSozYLaLuHcj1qhcb5pxgeRw {}
[INFO ] 2021-04-15T13:44:09,816Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:44:09,830Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494249614), owningKey=DL9VEthcfhsvc3giW8gPTyzSozYLaLuHcj1qhcb5pxgeRw {}
[INFO ] 2021-04-15T13:44:09,830Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:44:09,830Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494249614), owningKey=DL9VEthcfhsvc3giW8gPTyzSozYLaLuHcj1qhcb5pxgeRw {}
[INFO ] 2021-04-15T13:44:09,830Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:44:10,610Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=f070bc1a-5e21-4d16-9908-f7c7264e705b, invocation_id=2e1aeb6c-1cfb-40c4-b799-3f28d7b6e6e5, invocation_timestamp=2021-04-15T13:44:09.874Z, origin=Only For Testing, session_id=2e1aeb6c-1cfb-40c4-b799-3f28d7b6e6e5, session_timestamp=2021-04-15T13:44:09.874Z, thread-id=645, tx_id=A5E7E36503DB5D0E240291083195D8E56B8BE12CB7A3E84E16D939C76C91CC96}
[INFO ] 2021-04-15T13:44:10,610Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=f070bc1a-5e21-4d16-9908-f7c7264e705b, invocation_id=2e1aeb6c-1cfb-40c4-b799-3f28d7b6e6e5, invocation_timestamp=2021-04-15T13:44:09.874Z, origin=Only For Testing, session_id=2e1aeb6c-1cfb-40c4-b799-3f28d7b6e6e5, session_timestamp=2021-04-15T13:44:09.874Z, thread-id=645, tx_id=A5E7E36503DB5D0E240291083195D8E56B8BE12CB7A3E84E16D939C76C91CC96}
[INFO ] 2021-04-15T13:44:10,740Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=f070bc1a-5e21-4d16-9908-f7c7264e705b, invocation_id=2e1aeb6c-1cfb-40c4-b799-3f28d7b6e6e5, invocation_timestamp=2021-04-15T13:44:09.874Z, origin=Only For Testing, session_id=2e1aeb6c-1cfb-40c4-b799-3f28d7b6e6e5, session_timestamp=2021-04-15T13:44:09.874Z, thread-id=645, tx_id=A5E7E36503DB5D0E240291083195D8E56B8BE12CB7A3E84E16D939C76C91CC96}
[INFO ] 2021-04-15T13:44:10,740Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=f070bc1a-5e21-4d16-9908-f7c7264e705b, invocation_id=2e1aeb6c-1cfb-40c4-b799-3f28d7b6e6e5, invocation_timestamp=2021-04-15T13:44:09.874Z, origin=Only For Testing, session_id=2e1aeb6c-1cfb-40c4-b799-3f28d7b6e6e5, session_timestamp=2021-04-15T13:44:09.874Z, thread-id=645, tx_id=A5E7E36503DB5D0E240291083195D8E56B8BE12CB7A3E84E16D939C76C91CC96}
[INFO ] 2021-04-15T13:44:11,190Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary, L=London, C=GB. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=f5e81ef5-fe0b-44d4-b6af-c420118bed80, invocation_id=b40b2b69-cb95-4af5-a970-2234444933ee, invocation_timestamp=2021-04-15T13:44:10.835Z, origin=Only For Testing, session_id=b40b2b69-cb95-4af5-a970-2234444933ee, session_timestamp=2021-04-15T13:44:10.835Z, thread-id=645, tx_id=8794ADBB85C39E596E118E25ACCE73E7E2DC6185E0BA520ADFDFB99F152A5DCA}
[INFO ] 2021-04-15T13:44:11,330Z [Mock network] corda.flow. - Received a notarisation request for Tx [8794ADBB85C39E596E118E25ACCE73E7E2DC6185E0BA520ADFDFB99F152A5DCA] from [O=InvestorA, L=TestLand, C=US] {fiber-id=10000003, flow-id=884b33b4-499f-44b0-a6c2-888fe8b1c626, invocation_id=2ccbc5b6-a84e-4cb3-9dcb-71ba8f10e1d4, invocation_timestamp=2021-04-15T13:44:11.292Z, origin=O=InvestorA, L=TestLand, C=US, session_id=2ccbc5b6-a84e-4cb3-9dcb-71ba8f10e1d4, session_timestamp=2021-04-15T13:44:11.292Z, thread-id=645}
[INFO ] 2021-04-15T13:44:12,057Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 0 input states and 1 references {}
[INFO ] 2021-04-15T13:44:12,097Z [Mock network] corda.flow. - Transaction [8794ADBB85C39E596E118E25ACCE73E7E2DC6185E0BA520ADFDFB99F152A5DCA] successfully notarised, sending signature back to [O=InvestorA, L=TestLand, C=US] {fiber-id=10000003, flow-id=884b33b4-499f-44b0-a6c2-888fe8b1c626, invocation_id=2ccbc5b6-a84e-4cb3-9dcb-71ba8f10e1d4, invocation_timestamp=2021-04-15T13:44:11.292Z, origin=O=InvestorA, L=TestLand, C=US, session_id=2ccbc5b6-a84e-4cb3-9dcb-71ba8f10e1d4, session_timestamp=2021-04-15T13:44:11.292Z, thread-id=645}
[INFO ] 2021-04-15T13:44:12,158Z [Mock network] corda.flow. - Notary responded (O=Notary, L=London, C=GB). {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=f5e81ef5-fe0b-44d4-b6af-c420118bed80, invocation_id=b40b2b69-cb95-4af5-a970-2234444933ee, invocation_timestamp=2021-04-15T13:44:10.835Z, origin=Only For Testing, session_id=b40b2b69-cb95-4af5-a970-2234444933ee, session_timestamp=2021-04-15T13:44:10.835Z, thread-id=645, tx_id=8794ADBB85C39E596E118E25ACCE73E7E2DC6185E0BA520ADFDFB99F152A5DCA}
[INFO ] 2021-04-15T13:44:12,159Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=f5e81ef5-fe0b-44d4-b6af-c420118bed80, invocation_id=b40b2b69-cb95-4af5-a970-2234444933ee, invocation_timestamp=2021-04-15T13:44:10.835Z, origin=Only For Testing, session_id=b40b2b69-cb95-4af5-a970-2234444933ee, session_timestamp=2021-04-15T13:44:10.835Z, thread-id=645, tx_id=8794ADBB85C39E596E118E25ACCE73E7E2DC6185E0BA520ADFDFB99F152A5DCA}
[INFO ] 2021-04-15T13:44:12,205Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=f5e81ef5-fe0b-44d4-b6af-c420118bed80, invocation_id=b40b2b69-cb95-4af5-a970-2234444933ee, invocation_timestamp=2021-04-15T13:44:10.835Z, origin=Only For Testing, session_id=b40b2b69-cb95-4af5-a970-2234444933ee, session_timestamp=2021-04-15T13:44:10.835Z, thread-id=645, tx_id=8794ADBB85C39E596E118E25ACCE73E7E2DC6185E0BA520ADFDFB99F152A5DCA}
[INFO ] 2021-04-15T13:44:12,205Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=f5e81ef5-fe0b-44d4-b6af-c420118bed80, invocation_id=b40b2b69-cb95-4af5-a970-2234444933ee, invocation_timestamp=2021-04-15T13:44:10.835Z, origin=Only For Testing, session_id=b40b2b69-cb95-4af5-a970-2234444933ee, session_timestamp=2021-04-15T13:44:10.835Z, thread-id=645, tx_id=8794ADBB85C39E596E118E25ACCE73E7E2DC6185E0BA520ADFDFB99F152A5DCA}
[INFO ] 2021-04-15T13:44:12,475Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary, L=London, C=GB. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=d33a521d-9c95-4ebf-a856-458deed62dab, invocation_id=360db872-1b11-4e26-b92a-1a6f351a1163, invocation_timestamp=2021-04-15T13:44:12.293Z, origin=Only For Testing, session_id=360db872-1b11-4e26-b92a-1a6f351a1163, session_timestamp=2021-04-15T13:44:12.293Z, thread-id=645, tx_id=538649FC39BD418557067148E053158A82BBEE2B4BF2A0A3C3CFE8DA53446AE4}
[INFO ] 2021-04-15T13:44:12,507Z [Mock network] corda.flow. - Received a notarisation request for Tx [538649FC39BD418557067148E053158A82BBEE2B4BF2A0A3C3CFE8DA53446AE4] from [O=InvestorA, L=TestLand, C=US] {fiber-id=10000005, flow-id=f3fb9886-6c7b-4126-b172-a642d39a9210, invocation_id=1fa7e266-9180-409b-b5a7-5a0bd799b062, invocation_timestamp=2021-04-15T13:44:12.495Z, origin=O=InvestorA, L=TestLand, C=US, session_id=1fa7e266-9180-409b-b5a7-5a0bd799b062, session_timestamp=2021-04-15T13:44:12.495Z, thread-id=645}
[ERROR] 2021-04-15T13:44:12,567Z [Mock network] amqp.DeserializationInput. - Serialization failed direction="Deserialize", type="net.corda.core.transactions.SignedTransaction", msg="Described type with descriptor net.corda:vlc3i8lJnO7K1i2g0g0+aA== was expected to be of type class net.corda.core.transactions.SignedTransaction but was class com.r3.corda.lib.tokens.workflows.internal.flows.finality.TransactionRole", ClassChain="net.corda.core.transactions.SignedTransaction" {fiber-id=10000006, flow-id=fc19928c-93f1-49d3-9ff9-c05aa9b01267, invocation_id=c3b007fb-7a33-4e35-b1ff-6781a3414e26, invocation_timestamp=2021-04-15T13:44:12.533Z, origin=O=InvestorA, L=TestLand, C=US, session_id=c3b007fb-7a33-4e35-b1ff-6781a3414e26, session_timestamp=2021-04-15T13:44:12.533Z, thread-id=645}
[INFO ] 2021-04-15T13:44:12,568Z [Mock network] corda.flow. - Flow raised an error: Payload invalid. Sending it to flow hospital to be triaged. {fiber-id=10000006, flow-id=fc19928c-93f1-49d3-9ff9-c05aa9b01267, invocation_id=c3b007fb-7a33-4e35-b1ff-6781a3414e26, invocation_timestamp=2021-04-15T13:44:12.533Z, origin=O=InvestorA, L=TestLand, C=US, session_id=c3b007fb-7a33-4e35-b1ff-6781a3414e26, session_timestamp=2021-04-15T13:44:12.533Z, thread-id=645}
[INFO ] 2021-04-15T13:44:12,571Z [Mock network] statemachine.StaffedFlowHospital. - Flow [fc19928c-93f1-49d3-9ff9-c05aa9b01267] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=c3b007fb-7a33-4e35-b1ff-6781a3414e26, timestamp: 2021-04-15T13:44:12.533Z, entityType: Invocation, sessionId=c3b007fb-7a33-4e35-b1ff-6781a3414e26, timestamp: 2021-04-15T13:44:12.533Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={SessionId(toLong=-3736130853497696017)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-4137246367760135856), deduplicationSeed=D--4137246367760135856--8476702942571381045)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3736130853497696017))]), frozenFiber=0DA2234549A306A28C7CED1B67FFD706C2D2E21378E33F54AEE99CB73AE44010), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@f8a4c87, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=f835650e-d28d-4ace-a2b7-a9b497026a03, reloadCheckpointAfterSuspendCount=null, numberOfCommits=2, lock=java.util.concurrent.Semaphore@1990c8be[Permits = 0]) {fiber-id=10000006, flow-id=fc19928c-93f1-49d3-9ff9-c05aa9b01267, invocation_id=c3b007fb-7a33-4e35-b1ff-6781a3414e26, invocation_timestamp=2021-04-15T13:44:12.533Z, origin=O=InvestorA, L=TestLand, C=US, session_id=c3b007fb-7a33-4e35-b1ff-6781a3414e26, session_timestamp=2021-04-15T13:44:12.533Z, thread-id=645}
[INFO ] 2021-04-15T13:44:12,574Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {fiber-id=10000006, flow-id=fc19928c-93f1-49d3-9ff9-c05aa9b01267, invocation_id=c3b007fb-7a33-4e35-b1ff-6781a3414e26, invocation_timestamp=2021-04-15T13:44:12.533Z, origin=O=InvestorA, L=TestLand, C=US, session_id=c3b007fb-7a33-4e35-b1ff-6781a3414e26, session_timestamp=2021-04-15T13:44:12.533Z, thread-id=645}
java.lang.IllegalArgumentException: Payload invalid
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:568) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:277) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:107) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:83) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
Caused by: java.io.NotSerializableException: Described type with descriptor net.corda:vlc3i8lJnO7K1i2g0g0+aA== was expected to be of type class net.corda.core.transactions.SignedTransaction but was class com.r3.corda.lib.tokens.workflows.internal.flows.finality.TransactionRole
	at net.corda.serialization.internal.amqp.DeserializationInput.des(DeserializationInput.kt:103) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.DeserializationInput.deserialize(DeserializationInput.kt:120) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.AbstractAMQPSerializationScheme.deserialize(AMQPSerializationScheme.kt:151) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.withCurrentContext(SerializationAPI.kt:71) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:80) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.asCurrent(SerializationAPI.kt:85) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl.deserialize(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:566) ~[corda-core-4.7.jar:?]
	... 25 more
[INFO ] 2021-04-15T13:44:12,578Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {fiber-id=10000006, flow-id=fc19928c-93f1-49d3-9ff9-c05aa9b01267, invocation_id=c3b007fb-7a33-4e35-b1ff-6781a3414e26, invocation_timestamp=2021-04-15T13:44:12.533Z, origin=O=InvestorA, L=TestLand, C=US, session_id=c3b007fb-7a33-4e35-b1ff-6781a3414e26, session_timestamp=2021-04-15T13:44:12.533Z, thread-id=645}
java.lang.IllegalArgumentException: Payload invalid
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:568) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:277) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:107) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:83) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
Caused by: java.io.NotSerializableException: Described type with descriptor net.corda:vlc3i8lJnO7K1i2g0g0+aA== was expected to be of type class net.corda.core.transactions.SignedTransaction but was class com.r3.corda.lib.tokens.workflows.internal.flows.finality.TransactionRole
	at net.corda.serialization.internal.amqp.DeserializationInput.des(DeserializationInput.kt:103) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.DeserializationInput.deserialize(DeserializationInput.kt:120) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.AbstractAMQPSerializationScheme.deserialize(AMQPSerializationScheme.kt:151) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.withCurrentContext(SerializationAPI.kt:71) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:80) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.asCurrent(SerializationAPI.kt:85) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl.deserialize(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:566) ~[corda-core-4.7.jar:?]
	... 25 more
[WARN ] 2021-04-15T13:44:12,604Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [fc19928c-93f1-49d3-9ff9-c05aa9b01267] errored, dumping all transitions:

 --- Transition of flow [fc19928c-93f1-49d3-9ff9-c05aa9b01267] ---
  Timestamp: 2021-04-15T13:44:12.544Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[fc19928c-93f1-49d3-9ff9-c05aa9b01267], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=c3b007fb-7a33-4e35-b1ff-6781a3414e26, timestamp: 2021-04-15T13:44:12.533Z, entityType: Invocation, sessionId=c3b007fb-7a33-4e35-b1ff-6781a3414e26, timestamp: 2021-04-15T13:44:12.533Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=397D96B3653DE9C0283BC638BBBE77F2C92ACF5EC0D75AD09A1E70E03454956F), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@77303027])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@77303027])
    SignalFlowHasStarted(flowId=[fc19928c-93f1-49d3-9ff9-c05aa9b01267])
    SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4137246367760135856), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-3736130853497696017), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--4137246367760135856--8476702942571381045-0-0), senderUUID=f835650e-d28d-4ace-a2b7-a9b497026a03))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-3736130853497696017): 
    null
    Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-4137246367760135856), deduplicationSeed=D--4137246367760135856--8476702942571381045)
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@77303027]
    []


 --- Transition of flow [fc19928c-93f1-49d3-9ff9-c05aa9b01267] ---
  Timestamp: 2021-04-15T13:44:12.549Z
  Event: EnterSubFlow(subFlowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.534Z
    2021-04-15T13:44:12.549Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [fc19928c-93f1-49d3-9ff9-c05aa9b01267] ---
  Timestamp: 2021-04-15T13:44:12.552Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.549Z
    2021-04-15T13:44:12.552Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [fc19928c-93f1-49d3-9ff9-c05aa9b01267] ---
  Timestamp: 2021-04-15T13:44:12.564Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3736130853497696017))]), maySkipCheckpoint=false, fiber=0DA2234549A306A28C7CED1B67FFD706C2D2E21378E33F54AEE99CB73AE44010, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[fc19928c-93f1-49d3-9ff9-c05aa9b01267], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=c3b007fb-7a33-4e35-b1ff-6781a3414e26, timestamp: 2021-04-15T13:44:12.533Z, entityType: Invocation, sessionId=c3b007fb-7a33-4e35-b1ff-6781a3414e26, timestamp: 2021-04-15T13:44:12.533Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={SessionId(toLong=-3736130853497696017)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-4137246367760135856), deduplicationSeed=D--4137246367760135856--8476702942571381045)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3736130853497696017))]), frozenFiber=0DA2234549A306A28C7CED1B67FFD706C2D2E21378E33F54AEE99CB73AE44010), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=397D96B3653DE9C0283BC638BBBE77F2C92ACF5EC0D75AD09A1E70E03454956F)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3736130853497696017))]), frozenFiber=0DA2234549A306A28C7CED1B67FFD706C2D2E21378E33F54AEE99CB73AE44010)
checkpoint.timestamp: 
    2021-04-15T13:44:12.552Z
    2021-04-15T13:44:12.561Z
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.progressStep: 
    null
    Starting
numberOfCommits: 
    0
    2


 --- Transition of flow [fc19928c-93f1-49d3-9ff9-c05aa9b01267] ---
  Timestamp: 2021-04-15T13:44:12.565Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:44:12.561Z
    2021-04-15T13:44:12.564Z
checkpoint.checkpointState.sessions.SessionId(toLong=-3736130853497696017).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [fc19928c-93f1-49d3-9ff9-c05aa9b01267] ---
  Timestamp: 2021-04-15T13:44:12.568Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.564Z
    2021-04-15T13:44:12.568Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [fc19928c-93f1-49d3-9ff9-c05aa9b01267] ---
  Timestamp: 2021-04-15T13:44:12.568Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false)]


 --- Transition of flow [fc19928c-93f1-49d3-9ff9-c05aa9b01267] ---
  Timestamp: 2021-04-15T13:44:12.580Z
  Event: Error(exception=java.lang.IllegalArgumentException: Payload invalid, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2021-04-15T13:44:12.568Z
    2021-04-15T13:44:12.570Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=4663309976884980997, exception=java.lang.IllegalArgumentException: Payload invalid)], propagatedIndex=0, propagating=false)


 --- Transition of flow [fc19928c-93f1-49d3-9ff9-c05aa9b01267] ---
  Timestamp: 2021-04-15T13:44:12.583Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [fc19928c-93f1-49d3-9ff9-c05aa9b01267] ---
  Timestamp: 2021-04-15T13:44:12.585Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.570Z
    2021-04-15T13:44:12.585Z
checkpoint.errorState.propagating: 
    false
    true
 {fiber-id=10000006, flow-id=fc19928c-93f1-49d3-9ff9-c05aa9b01267, invocation_id=c3b007fb-7a33-4e35-b1ff-6781a3414e26, invocation_timestamp=2021-04-15T13:44:12.533Z, origin=O=InvestorA, L=TestLand, C=US, session_id=c3b007fb-7a33-4e35-b1ff-6781a3414e26, session_timestamp=2021-04-15T13:44:12.533Z, thread-id=645}
[WARN ] 2021-04-15T13:44:12,604Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [fc19928c-93f1-49d3-9ff9-c05aa9b01267] error {fiber-id=10000006, flow-id=fc19928c-93f1-49d3-9ff9-c05aa9b01267, invocation_id=c3b007fb-7a33-4e35-b1ff-6781a3414e26, invocation_timestamp=2021-04-15T13:44:12.533Z, origin=O=InvestorA, L=TestLand, C=US, session_id=c3b007fb-7a33-4e35-b1ff-6781a3414e26, session_timestamp=2021-04-15T13:44:12.533Z, thread-id=645}
java.lang.IllegalArgumentException: Payload invalid
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:568) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:277) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:107) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:83) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
Caused by: java.io.NotSerializableException: Described type with descriptor net.corda:vlc3i8lJnO7K1i2g0g0+aA== was expected to be of type class net.corda.core.transactions.SignedTransaction but was class com.r3.corda.lib.tokens.workflows.internal.flows.finality.TransactionRole
	at net.corda.serialization.internal.amqp.DeserializationInput.des(DeserializationInput.kt:103) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.DeserializationInput.deserialize(DeserializationInput.kt:120) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.AbstractAMQPSerializationScheme.deserialize(AMQPSerializationScheme.kt:151) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.withCurrentContext(SerializationAPI.kt:71) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:80) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.asCurrent(SerializationAPI.kt:85) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl.deserialize(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:566) ~[corda-core-4.7.jar:?]
	... 25 more
[WARN ] 2021-04-15T13:44:12,606Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {fiber-id=10000006, flow-id=fc19928c-93f1-49d3-9ff9-c05aa9b01267, invocation_id=c3b007fb-7a33-4e35-b1ff-6781a3414e26, invocation_timestamp=2021-04-15T13:44:12.533Z, origin=O=InvestorA, L=TestLand, C=US, session_id=c3b007fb-7a33-4e35-b1ff-6781a3414e26, session_timestamp=2021-04-15T13:44:12.533Z, thread-id=645}
[WARN ] 2021-04-15T13:44:12,681Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [fc19928c-93f1-49d3-9ff9-c05aa9b01267] errored, dumping all transitions:

 --- Transition of flow [fc19928c-93f1-49d3-9ff9-c05aa9b01267] ---
  Timestamp: 2021-04-15T13:44:12.544Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[fc19928c-93f1-49d3-9ff9-c05aa9b01267], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=c3b007fb-7a33-4e35-b1ff-6781a3414e26, timestamp: 2021-04-15T13:44:12.533Z, entityType: Invocation, sessionId=c3b007fb-7a33-4e35-b1ff-6781a3414e26, timestamp: 2021-04-15T13:44:12.533Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=397D96B3653DE9C0283BC638BBBE77F2C92ACF5EC0D75AD09A1E70E03454956F), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@77303027])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@77303027])
    SignalFlowHasStarted(flowId=[fc19928c-93f1-49d3-9ff9-c05aa9b01267])
    SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4137246367760135856), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-3736130853497696017), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--4137246367760135856--8476702942571381045-0-0), senderUUID=f835650e-d28d-4ace-a2b7-a9b497026a03))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-3736130853497696017): 
    null
    Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-4137246367760135856), deduplicationSeed=D--4137246367760135856--8476702942571381045)
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@77303027]
    []


 --- Transition of flow [fc19928c-93f1-49d3-9ff9-c05aa9b01267] ---
  Timestamp: 2021-04-15T13:44:12.549Z
  Event: EnterSubFlow(subFlowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.534Z
    2021-04-15T13:44:12.549Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [fc19928c-93f1-49d3-9ff9-c05aa9b01267] ---
  Timestamp: 2021-04-15T13:44:12.552Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.549Z
    2021-04-15T13:44:12.552Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [fc19928c-93f1-49d3-9ff9-c05aa9b01267] ---
  Timestamp: 2021-04-15T13:44:12.564Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3736130853497696017))]), maySkipCheckpoint=false, fiber=0DA2234549A306A28C7CED1B67FFD706C2D2E21378E33F54AEE99CB73AE44010, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[fc19928c-93f1-49d3-9ff9-c05aa9b01267], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=c3b007fb-7a33-4e35-b1ff-6781a3414e26, timestamp: 2021-04-15T13:44:12.533Z, entityType: Invocation, sessionId=c3b007fb-7a33-4e35-b1ff-6781a3414e26, timestamp: 2021-04-15T13:44:12.533Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={SessionId(toLong=-3736130853497696017)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-4137246367760135856), deduplicationSeed=D--4137246367760135856--8476702942571381045)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3736130853497696017))]), frozenFiber=0DA2234549A306A28C7CED1B67FFD706C2D2E21378E33F54AEE99CB73AE44010), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=397D96B3653DE9C0283BC638BBBE77F2C92ACF5EC0D75AD09A1E70E03454956F)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3736130853497696017))]), frozenFiber=0DA2234549A306A28C7CED1B67FFD706C2D2E21378E33F54AEE99CB73AE44010)
checkpoint.timestamp: 
    2021-04-15T13:44:12.552Z
    2021-04-15T13:44:12.561Z
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.progressStep: 
    null
    Starting
numberOfCommits: 
    0
    2


 --- Transition of flow [fc19928c-93f1-49d3-9ff9-c05aa9b01267] ---
  Timestamp: 2021-04-15T13:44:12.565Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:44:12.561Z
    2021-04-15T13:44:12.564Z
checkpoint.checkpointState.sessions.SessionId(toLong=-3736130853497696017).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [fc19928c-93f1-49d3-9ff9-c05aa9b01267] ---
  Timestamp: 2021-04-15T13:44:12.568Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.564Z
    2021-04-15T13:44:12.568Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [fc19928c-93f1-49d3-9ff9-c05aa9b01267] ---
  Timestamp: 2021-04-15T13:44:12.568Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false)]


 --- Transition of flow [fc19928c-93f1-49d3-9ff9-c05aa9b01267] ---
  Timestamp: 2021-04-15T13:44:12.580Z
  Event: Error(exception=java.lang.IllegalArgumentException: Payload invalid, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2021-04-15T13:44:12.568Z
    2021-04-15T13:44:12.570Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=4663309976884980997, exception=java.lang.IllegalArgumentException: Payload invalid)], propagatedIndex=0, propagating=false)


 --- Transition of flow [fc19928c-93f1-49d3-9ff9-c05aa9b01267] ---
  Timestamp: 2021-04-15T13:44:12.583Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [fc19928c-93f1-49d3-9ff9-c05aa9b01267] ---
  Timestamp: 2021-04-15T13:44:12.585Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.570Z
    2021-04-15T13:44:12.585Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [fc19928c-93f1-49d3-9ff9-c05aa9b01267] ---
  Timestamp: 2021-04-15T13:44:12.677Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=4663309976884980997)], sessions=[Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-4137246367760135856), deduplicationSeed=D--4137246367760135856--8476702942571381045)], senderUUID=f835650e-d28d-4ace-a2b7-a9b497026a03)
    CreateTransaction
    RemoveCheckpoint(id=[fc19928c-93f1-49d3-9ff9-c05aa9b01267], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=fc19928c-93f1-49d3-9ff9-c05aa9b01267)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-3736130853497696017)])
    RemoveFlow(flowId=[fc19928c-93f1-49d3-9ff9-c05aa9b01267], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=4663309976884980997, exception=java.lang.IllegalArgumentException: Payload invalid)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=c3b007fb-7a33-4e35-b1ff-6781a3414e26, timestamp: 2021-04-15T13:44:12.533Z, entityType: Invocation, sessionId=c3b007fb-7a33-4e35-b1ff-6781a3414e26, timestamp: 2021-04-15T13:44:12.533Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorB, L=TestCity, C=US, sessions={SessionId(toLong=-3736130853497696017)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-4137246367760135856), deduplicationSeed=D--4137246367760135856--8476702942571381045)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=3), flowState=net.corda.node.services.statemachine.FlowState$Finished@2408123c, errorState=Errored(errors=[FlowError(errorId=4663309976884980997, exception=java.lang.IllegalArgumentException: Payload invalid)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@f8a4c87, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, senderUUID=f835650e-d28d-4ace-a2b7-a9b497026a03, reloadCheckpointAfterSuspendCount=null, numberOfCommits=3, lock=java.util.concurrent.Semaphore@1990c8be[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-3736130853497696017))]), frozenFiber=0DA2234549A306A28C7CED1B67FFD706C2D2E21378E33F54AEE99CB73AE44010)
    net.corda.node.services.statemachine.FlowState$Finished@2408123c
checkpoint.timestamp: 
    2021-04-15T13:44:12.585Z
    2021-04-15T13:44:12.605Z
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3
isRemoved: 
    false
    true
 {fiber-id=10000006, flow-id=fc19928c-93f1-49d3-9ff9-c05aa9b01267, invocation_id=c3b007fb-7a33-4e35-b1ff-6781a3414e26, invocation_timestamp=2021-04-15T13:44:12.533Z, origin=O=InvestorA, L=TestLand, C=US, session_id=c3b007fb-7a33-4e35-b1ff-6781a3414e26, session_timestamp=2021-04-15T13:44:12.533Z, thread-id=645}
[WARN ] 2021-04-15T13:44:12,681Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [fc19928c-93f1-49d3-9ff9-c05aa9b01267] error {fiber-id=10000006, flow-id=fc19928c-93f1-49d3-9ff9-c05aa9b01267, invocation_id=c3b007fb-7a33-4e35-b1ff-6781a3414e26, invocation_timestamp=2021-04-15T13:44:12.533Z, origin=O=InvestorA, L=TestLand, C=US, session_id=c3b007fb-7a33-4e35-b1ff-6781a3414e26, session_timestamp=2021-04-15T13:44:12.533Z, thread-id=645}
java.lang.IllegalArgumentException: Payload invalid
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:568) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:277) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:107) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:83) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
Caused by: java.io.NotSerializableException: Described type with descriptor net.corda:vlc3i8lJnO7K1i2g0g0+aA== was expected to be of type class net.corda.core.transactions.SignedTransaction but was class com.r3.corda.lib.tokens.workflows.internal.flows.finality.TransactionRole
	at net.corda.serialization.internal.amqp.DeserializationInput.des(DeserializationInput.kt:103) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.DeserializationInput.deserialize(DeserializationInput.kt:120) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.AbstractAMQPSerializationScheme.deserialize(AMQPSerializationScheme.kt:151) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.withCurrentContext(SerializationAPI.kt:71) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:80) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.asCurrent(SerializationAPI.kt:85) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl.deserialize(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:566) ~[corda-core-4.7.jar:?]
	... 25 more
[ERROR] 2021-04-15T13:44:12,711Z [Mock network] amqp.DeserializationInput. - Serialization failed direction="Deserialize", type="net.corda.core.transactions.SignedTransaction", msg="Described type with descriptor net.corda:vlc3i8lJnO7K1i2g0g0+aA== was expected to be of type class net.corda.core.transactions.SignedTransaction but was class com.r3.corda.lib.tokens.workflows.internal.flows.finality.TransactionRole", ClassChain="net.corda.core.transactions.SignedTransaction" {fiber-id=10000007, flow-id=3c3772b9-fa27-4cb7-ad94-b975d41dcd06, invocation_id=6c1fbc48-d6d7-40c7-bbb6-34d87638d29d, invocation_timestamp=2021-04-15T13:44:12.688Z, origin=O=InvestorA, L=TestLand, C=US, session_id=6c1fbc48-d6d7-40c7-bbb6-34d87638d29d, session_timestamp=2021-04-15T13:44:12.688Z, thread-id=645}
[INFO ] 2021-04-15T13:44:12,711Z [Mock network] corda.flow. - Flow raised an error: Payload invalid. Sending it to flow hospital to be triaged. {fiber-id=10000007, flow-id=3c3772b9-fa27-4cb7-ad94-b975d41dcd06, invocation_id=6c1fbc48-d6d7-40c7-bbb6-34d87638d29d, invocation_timestamp=2021-04-15T13:44:12.688Z, origin=O=InvestorA, L=TestLand, C=US, session_id=6c1fbc48-d6d7-40c7-bbb6-34d87638d29d, session_timestamp=2021-04-15T13:44:12.688Z, thread-id=645}
[INFO ] 2021-04-15T13:44:12,713Z [Mock network] statemachine.StaffedFlowHospital. - Flow [3c3772b9-fa27-4cb7-ad94-b975d41dcd06] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=6c1fbc48-d6d7-40c7-bbb6-34d87638d29d, timestamp: 2021-04-15T13:44:12.688Z, entityType: Invocation, sessionId=6c1fbc48-d6d7-40c7-bbb6-34d87638d29d, timestamp: 2021-04-15T13:44:12.688Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=-6707497761927365348)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=1290716911297466213), deduplicationSeed=D-1290716911297466213-6379030058213384628)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-6707497761927365348))]), frozenFiber=B4656AEBA4DBDA7201BFE092A14090DC8B8B0D4DBAC44BC51E40E142374ED12F), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@27dcc20e, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=dadca847-340a-4664-85e5-112b5af9af8d, reloadCheckpointAfterSuspendCount=null, numberOfCommits=2, lock=java.util.concurrent.Semaphore@6d3a9033[Permits = 0]) {fiber-id=10000007, flow-id=3c3772b9-fa27-4cb7-ad94-b975d41dcd06, invocation_id=6c1fbc48-d6d7-40c7-bbb6-34d87638d29d, invocation_timestamp=2021-04-15T13:44:12.688Z, origin=O=InvestorA, L=TestLand, C=US, session_id=6c1fbc48-d6d7-40c7-bbb6-34d87638d29d, session_timestamp=2021-04-15T13:44:12.688Z, thread-id=645}
[INFO ] 2021-04-15T13:44:12,713Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {fiber-id=10000007, flow-id=3c3772b9-fa27-4cb7-ad94-b975d41dcd06, invocation_id=6c1fbc48-d6d7-40c7-bbb6-34d87638d29d, invocation_timestamp=2021-04-15T13:44:12.688Z, origin=O=InvestorA, L=TestLand, C=US, session_id=6c1fbc48-d6d7-40c7-bbb6-34d87638d29d, session_timestamp=2021-04-15T13:44:12.688Z, thread-id=645}
java.lang.IllegalArgumentException: Payload invalid
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:568) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:277) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:107) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:83) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
Caused by: java.io.NotSerializableException: Described type with descriptor net.corda:vlc3i8lJnO7K1i2g0g0+aA== was expected to be of type class net.corda.core.transactions.SignedTransaction but was class com.r3.corda.lib.tokens.workflows.internal.flows.finality.TransactionRole
	at net.corda.serialization.internal.amqp.DeserializationInput.des(DeserializationInput.kt:103) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.DeserializationInput.deserialize(DeserializationInput.kt:120) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.AbstractAMQPSerializationScheme.deserialize(AMQPSerializationScheme.kt:151) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.withCurrentContext(SerializationAPI.kt:71) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:80) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.asCurrent(SerializationAPI.kt:85) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl.deserialize(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:566) ~[corda-core-4.7.jar:?]
	... 25 more
[INFO ] 2021-04-15T13:44:12,713Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {fiber-id=10000007, flow-id=3c3772b9-fa27-4cb7-ad94-b975d41dcd06, invocation_id=6c1fbc48-d6d7-40c7-bbb6-34d87638d29d, invocation_timestamp=2021-04-15T13:44:12.688Z, origin=O=InvestorA, L=TestLand, C=US, session_id=6c1fbc48-d6d7-40c7-bbb6-34d87638d29d, session_timestamp=2021-04-15T13:44:12.688Z, thread-id=645}
java.lang.IllegalArgumentException: Payload invalid
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:568) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:277) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:107) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:83) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
Caused by: java.io.NotSerializableException: Described type with descriptor net.corda:vlc3i8lJnO7K1i2g0g0+aA== was expected to be of type class net.corda.core.transactions.SignedTransaction but was class com.r3.corda.lib.tokens.workflows.internal.flows.finality.TransactionRole
	at net.corda.serialization.internal.amqp.DeserializationInput.des(DeserializationInput.kt:103) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.DeserializationInput.deserialize(DeserializationInput.kt:120) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.AbstractAMQPSerializationScheme.deserialize(AMQPSerializationScheme.kt:151) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.withCurrentContext(SerializationAPI.kt:71) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:80) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.asCurrent(SerializationAPI.kt:85) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl.deserialize(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:566) ~[corda-core-4.7.jar:?]
	... 25 more
[WARN ] 2021-04-15T13:44:12,716Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [3c3772b9-fa27-4cb7-ad94-b975d41dcd06] errored, dumping all transitions:

 --- Transition of flow [3c3772b9-fa27-4cb7-ad94-b975d41dcd06] ---
  Timestamp: 2021-04-15T13:44:12.701Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[3c3772b9-fa27-4cb7-ad94-b975d41dcd06], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=6c1fbc48-d6d7-40c7-bbb6-34d87638d29d, timestamp: 2021-04-15T13:44:12.688Z, entityType: Invocation, sessionId=6c1fbc48-d6d7-40c7-bbb6-34d87638d29d, timestamp: 2021-04-15T13:44:12.688Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=A636EC2925D3AEBA73086647A0E687D0F7B3AE351EFEBAEE32AE2B5D7BDADBE4), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4cb1a97f])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4cb1a97f])
    SignalFlowHasStarted(flowId=[3c3772b9-fa27-4cb7-ad94-b975d41dcd06])
    SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1290716911297466213), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-6707497761927365348), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-1290716911297466213-6379030058213384628-0-0), senderUUID=dadca847-340a-4664-85e5-112b5af9af8d))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:44:12.688Z
    2021-04-15T13:44:12.689Z
checkpoint.checkpointState.sessions.SessionId(toLong=-6707497761927365348): 
    null
    Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=1290716911297466213), deduplicationSeed=D-1290716911297466213-6379030058213384628)
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4cb1a97f]
    []


 --- Transition of flow [3c3772b9-fa27-4cb7-ad94-b975d41dcd06] ---
  Timestamp: 2021-04-15T13:44:12.701Z
  Event: EnterSubFlow(subFlowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.689Z
    2021-04-15T13:44:12.701Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [3c3772b9-fa27-4cb7-ad94-b975d41dcd06] ---
  Timestamp: 2021-04-15T13:44:12.701Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [3c3772b9-fa27-4cb7-ad94-b975d41dcd06] ---
  Timestamp: 2021-04-15T13:44:12.710Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-6707497761927365348))]), maySkipCheckpoint=false, fiber=B4656AEBA4DBDA7201BFE092A14090DC8B8B0D4DBAC44BC51E40E142374ED12F, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[3c3772b9-fa27-4cb7-ad94-b975d41dcd06], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=6c1fbc48-d6d7-40c7-bbb6-34d87638d29d, timestamp: 2021-04-15T13:44:12.688Z, entityType: Invocation, sessionId=6c1fbc48-d6d7-40c7-bbb6-34d87638d29d, timestamp: 2021-04-15T13:44:12.688Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=-6707497761927365348)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=1290716911297466213), deduplicationSeed=D-1290716911297466213-6379030058213384628)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-6707497761927365348))]), frozenFiber=B4656AEBA4DBDA7201BFE092A14090DC8B8B0D4DBAC44BC51E40E142374ED12F), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=A636EC2925D3AEBA73086647A0E687D0F7B3AE351EFEBAEE32AE2B5D7BDADBE4)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-6707497761927365348))]), frozenFiber=B4656AEBA4DBDA7201BFE092A14090DC8B8B0D4DBAC44BC51E40E142374ED12F)
checkpoint.timestamp: 
    2021-04-15T13:44:12.701Z
    2021-04-15T13:44:12.706Z
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.progressStep: 
    null
    Starting
numberOfCommits: 
    0
    2


 --- Transition of flow [3c3772b9-fa27-4cb7-ad94-b975d41dcd06] ---
  Timestamp: 2021-04-15T13:44:12.711Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:44:12.706Z
    2021-04-15T13:44:12.710Z
checkpoint.checkpointState.sessions.SessionId(toLong=-6707497761927365348).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [3c3772b9-fa27-4cb7-ad94-b975d41dcd06] ---
  Timestamp: 2021-04-15T13:44:12.711Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.710Z
    2021-04-15T13:44:12.711Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [3c3772b9-fa27-4cb7-ad94-b975d41dcd06] ---
  Timestamp: 2021-04-15T13:44:12.711Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false)]


 --- Transition of flow [3c3772b9-fa27-4cb7-ad94-b975d41dcd06] ---
  Timestamp: 2021-04-15T13:44:12.713Z
  Event: Error(exception=java.lang.IllegalArgumentException: Payload invalid, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2021-04-15T13:44:12.711Z
    2021-04-15T13:44:12.712Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=5345065742358477752, exception=java.lang.IllegalArgumentException: Payload invalid)], propagatedIndex=0, propagating=false)


 --- Transition of flow [3c3772b9-fa27-4cb7-ad94-b975d41dcd06] ---
  Timestamp: 2021-04-15T13:44:12.713Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [3c3772b9-fa27-4cb7-ad94-b975d41dcd06] ---
  Timestamp: 2021-04-15T13:44:12.713Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.712Z
    2021-04-15T13:44:12.713Z
checkpoint.errorState.propagating: 
    false
    true
 {fiber-id=10000007, flow-id=3c3772b9-fa27-4cb7-ad94-b975d41dcd06, invocation_id=6c1fbc48-d6d7-40c7-bbb6-34d87638d29d, invocation_timestamp=2021-04-15T13:44:12.688Z, origin=O=InvestorA, L=TestLand, C=US, session_id=6c1fbc48-d6d7-40c7-bbb6-34d87638d29d, session_timestamp=2021-04-15T13:44:12.688Z, thread-id=645}
[WARN ] 2021-04-15T13:44:12,716Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [3c3772b9-fa27-4cb7-ad94-b975d41dcd06] error {fiber-id=10000007, flow-id=3c3772b9-fa27-4cb7-ad94-b975d41dcd06, invocation_id=6c1fbc48-d6d7-40c7-bbb6-34d87638d29d, invocation_timestamp=2021-04-15T13:44:12.688Z, origin=O=InvestorA, L=TestLand, C=US, session_id=6c1fbc48-d6d7-40c7-bbb6-34d87638d29d, session_timestamp=2021-04-15T13:44:12.688Z, thread-id=645}
java.lang.IllegalArgumentException: Payload invalid
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:568) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:277) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:107) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:83) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
Caused by: java.io.NotSerializableException: Described type with descriptor net.corda:vlc3i8lJnO7K1i2g0g0+aA== was expected to be of type class net.corda.core.transactions.SignedTransaction but was class com.r3.corda.lib.tokens.workflows.internal.flows.finality.TransactionRole
	at net.corda.serialization.internal.amqp.DeserializationInput.des(DeserializationInput.kt:103) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.DeserializationInput.deserialize(DeserializationInput.kt:120) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.AbstractAMQPSerializationScheme.deserialize(AMQPSerializationScheme.kt:151) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.withCurrentContext(SerializationAPI.kt:71) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:80) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.asCurrent(SerializationAPI.kt:85) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl.deserialize(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:566) ~[corda-core-4.7.jar:?]
	... 25 more
[WARN ] 2021-04-15T13:44:12,716Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {fiber-id=10000007, flow-id=3c3772b9-fa27-4cb7-ad94-b975d41dcd06, invocation_id=6c1fbc48-d6d7-40c7-bbb6-34d87638d29d, invocation_timestamp=2021-04-15T13:44:12.688Z, origin=O=InvestorA, L=TestLand, C=US, session_id=6c1fbc48-d6d7-40c7-bbb6-34d87638d29d, session_timestamp=2021-04-15T13:44:12.688Z, thread-id=645}
[WARN ] 2021-04-15T13:44:12,734Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [3c3772b9-fa27-4cb7-ad94-b975d41dcd06] errored, dumping all transitions:

 --- Transition of flow [3c3772b9-fa27-4cb7-ad94-b975d41dcd06] ---
  Timestamp: 2021-04-15T13:44:12.701Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[3c3772b9-fa27-4cb7-ad94-b975d41dcd06], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=6c1fbc48-d6d7-40c7-bbb6-34d87638d29d, timestamp: 2021-04-15T13:44:12.688Z, entityType: Invocation, sessionId=6c1fbc48-d6d7-40c7-bbb6-34d87638d29d, timestamp: 2021-04-15T13:44:12.688Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=A636EC2925D3AEBA73086647A0E687D0F7B3AE351EFEBAEE32AE2B5D7BDADBE4), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4cb1a97f])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4cb1a97f])
    SignalFlowHasStarted(flowId=[3c3772b9-fa27-4cb7-ad94-b975d41dcd06])
    SendExisting(peerParty=O=InvestorA, L=TestLand, C=US, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1290716911297466213), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-6707497761927365348), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-1290716911297466213-6379030058213384628-0-0), senderUUID=dadca847-340a-4664-85e5-112b5af9af8d))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:44:12.688Z
    2021-04-15T13:44:12.689Z
checkpoint.checkpointState.sessions.SessionId(toLong=-6707497761927365348): 
    null
    Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=1290716911297466213), deduplicationSeed=D-1290716911297466213-6379030058213384628)
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4cb1a97f]
    []


 --- Transition of flow [3c3772b9-fa27-4cb7-ad94-b975d41dcd06] ---
  Timestamp: 2021-04-15T13:44:12.701Z
  Event: EnterSubFlow(subFlowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.689Z
    2021-04-15T13:44:12.701Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [3c3772b9-fa27-4cb7-ad94-b975d41dcd06] ---
  Timestamp: 2021-04-15T13:44:12.701Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [3c3772b9-fa27-4cb7-ad94-b975d41dcd06] ---
  Timestamp: 2021-04-15T13:44:12.710Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-6707497761927365348))]), maySkipCheckpoint=false, fiber=B4656AEBA4DBDA7201BFE092A14090DC8B8B0D4DBAC44BC51E40E142374ED12F, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[3c3772b9-fa27-4cb7-ad94-b975d41dcd06], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=6c1fbc48-d6d7-40c7-bbb6-34d87638d29d, timestamp: 2021-04-15T13:44:12.688Z, entityType: Invocation, sessionId=6c1fbc48-d6d7-40c7-bbb6-34d87638d29d, timestamp: 2021-04-15T13:44:12.688Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=-6707497761927365348)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=1290716911297466213), deduplicationSeed=D-1290716911297466213-6379030058213384628)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-6707497761927365348))]), frozenFiber=B4656AEBA4DBDA7201BFE092A14090DC8B8B0D4DBAC44BC51E40E142374ED12F), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=A636EC2925D3AEBA73086647A0E687D0F7B3AE351EFEBAEE32AE2B5D7BDADBE4)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-6707497761927365348))]), frozenFiber=B4656AEBA4DBDA7201BFE092A14090DC8B8B0D4DBAC44BC51E40E142374ED12F)
checkpoint.timestamp: 
    2021-04-15T13:44:12.701Z
    2021-04-15T13:44:12.706Z
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.progressStep: 
    null
    Starting
numberOfCommits: 
    0
    2


 --- Transition of flow [3c3772b9-fa27-4cb7-ad94-b975d41dcd06] ---
  Timestamp: 2021-04-15T13:44:12.711Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:44:12.706Z
    2021-04-15T13:44:12.710Z
checkpoint.checkpointState.sessions.SessionId(toLong=-6707497761927365348).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [3c3772b9-fa27-4cb7-ad94-b975d41dcd06] ---
  Timestamp: 2021-04-15T13:44:12.711Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.710Z
    2021-04-15T13:44:12.711Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [3c3772b9-fa27-4cb7-ad94-b975d41dcd06] ---
  Timestamp: 2021-04-15T13:44:12.711Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder$1, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false)]


 --- Transition of flow [3c3772b9-fa27-4cb7-ad94-b975d41dcd06] ---
  Timestamp: 2021-04-15T13:44:12.713Z
  Event: Error(exception=java.lang.IllegalArgumentException: Payload invalid, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2021-04-15T13:44:12.711Z
    2021-04-15T13:44:12.712Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=5345065742358477752, exception=java.lang.IllegalArgumentException: Payload invalid)], propagatedIndex=0, propagating=false)


 --- Transition of flow [3c3772b9-fa27-4cb7-ad94-b975d41dcd06] ---
  Timestamp: 2021-04-15T13:44:12.713Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [3c3772b9-fa27-4cb7-ad94-b975d41dcd06] ---
  Timestamp: 2021-04-15T13:44:12.713Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.712Z
    2021-04-15T13:44:12.713Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [3c3772b9-fa27-4cb7-ad94-b975d41dcd06] ---
  Timestamp: 2021-04-15T13:44:12.727Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=5345065742358477752)], sessions=[Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=1290716911297466213), deduplicationSeed=D-1290716911297466213-6379030058213384628)], senderUUID=dadca847-340a-4664-85e5-112b5af9af8d)
    CreateTransaction
    RemoveCheckpoint(id=[3c3772b9-fa27-4cb7-ad94-b975d41dcd06], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=3c3772b9-fa27-4cb7-ad94-b975d41dcd06)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-6707497761927365348)])
    RemoveFlow(flowId=[3c3772b9-fa27-4cb7-ad94-b975d41dcd06], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=5345065742358477752, exception=java.lang.IllegalArgumentException: Payload invalid)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=InvestorA, L=TestLand, C=US), trace=Trace(invocationId=6c1fbc48-d6d7-40c7-bbb6-34d87638d29d, timestamp: 2021-04-15T13:44:12.688Z, entityType: Invocation, sessionId=6c1fbc48-d6d7-40c7-bbb6-34d87638d29d, timestamp: 2021-04-15T13:44:12.688Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=TIE, L=TestVillage, C=US, sessions={SessionId(toLong=-6707497761927365348)=Initiated(peerParty=O=InvestorA, L=TestLand, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=1290716911297466213), deduplicationSeed=D-1290716911297466213-6379030058213384628)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=3), flowState=net.corda.node.services.statemachine.FlowState$Finished@2408123c, errorState=Errored(errors=[FlowError(errorId=5345065742358477752, exception=java.lang.IllegalArgumentException: Payload invalid)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder@27dcc20e, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, senderUUID=dadca847-340a-4664-85e5-112b5af9af8d, reloadCheckpointAfterSuspendCount=null, numberOfCommits=3, lock=java.util.concurrent.Semaphore@6d3a9033[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=InvestorA, L=TestLand, C=US, sourceSessionId=SessionId(toLong=-6707497761927365348))]), frozenFiber=B4656AEBA4DBDA7201BFE092A14090DC8B8B0D4DBAC44BC51E40E142374ED12F)
    net.corda.node.services.statemachine.FlowState$Finished@2408123c
checkpoint.timestamp: 
    2021-04-15T13:44:12.713Z
    2021-04-15T13:44:12.716Z
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3
isRemoved: 
    false
    true
 {fiber-id=10000007, flow-id=3c3772b9-fa27-4cb7-ad94-b975d41dcd06, invocation_id=6c1fbc48-d6d7-40c7-bbb6-34d87638d29d, invocation_timestamp=2021-04-15T13:44:12.688Z, origin=O=InvestorA, L=TestLand, C=US, session_id=6c1fbc48-d6d7-40c7-bbb6-34d87638d29d, session_timestamp=2021-04-15T13:44:12.688Z, thread-id=645}
[WARN ] 2021-04-15T13:44:12,734Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [3c3772b9-fa27-4cb7-ad94-b975d41dcd06] error {fiber-id=10000007, flow-id=3c3772b9-fa27-4cb7-ad94-b975d41dcd06, invocation_id=6c1fbc48-d6d7-40c7-bbb6-34d87638d29d, invocation_timestamp=2021-04-15T13:44:12.688Z, origin=O=InvestorA, L=TestLand, C=US, session_id=6c1fbc48-d6d7-40c7-bbb6-34d87638d29d, session_timestamp=2021-04-15T13:44:12.688Z, thread-id=645}
java.lang.IllegalArgumentException: Payload invalid
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:568) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:277) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:107) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder.call(TransferFungEvoToken.java:83) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
Caused by: java.io.NotSerializableException: Described type with descriptor net.corda:vlc3i8lJnO7K1i2g0g0+aA== was expected to be of type class net.corda.core.transactions.SignedTransaction but was class com.r3.corda.lib.tokens.workflows.internal.flows.finality.TransactionRole
	at net.corda.serialization.internal.amqp.DeserializationInput.des(DeserializationInput.kt:103) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.DeserializationInput.deserialize(DeserializationInput.kt:120) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.amqp.AbstractAMQPSerializationScheme.deserialize(AMQPSerializationScheme.kt:151) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.withCurrentContext(SerializationAPI.kt:71) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl$deserialize$1.invoke(SerializationScheme.kt:80) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.serialization.SerializationFactory.asCurrent(SerializationAPI.kt:85) ~[corda-core-4.7.jar:?]
	at net.corda.serialization.internal.SerializationFactoryImpl.deserialize(SerializationScheme.kt:115) ~[corda-serialization-4.7.jar:?]
	at net.corda.core.internal.InternalUtils.checkPayloadIs(InternalUtils.kt:566) ~[corda-core-4.7.jar:?]
	... 25 more
[INFO ] 2021-04-15T13:44:12,913Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 1 references {}
[INFO ] 2021-04-15T13:44:12,920Z [Mock network] corda.flow. - Transaction [538649FC39BD418557067148E053158A82BBEE2B4BF2A0A3C3CFE8DA53446AE4] successfully notarised, sending signature back to [O=InvestorA, L=TestLand, C=US] {fiber-id=10000005, flow-id=f3fb9886-6c7b-4126-b172-a642d39a9210, invocation_id=1fa7e266-9180-409b-b5a7-5a0bd799b062, invocation_timestamp=2021-04-15T13:44:12.495Z, origin=O=InvestorA, L=TestLand, C=US, session_id=1fa7e266-9180-409b-b5a7-5a0bd799b062, session_timestamp=2021-04-15T13:44:12.495Z, thread-id=645}
[INFO ] 2021-04-15T13:44:13,002Z [Mock network] corda.flow. - Notary responded (O=Notary, L=London, C=GB). {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=d33a521d-9c95-4ebf-a856-458deed62dab, invocation_id=360db872-1b11-4e26-b92a-1a6f351a1163, invocation_timestamp=2021-04-15T13:44:12.293Z, origin=Only For Testing, session_id=360db872-1b11-4e26-b92a-1a6f351a1163, session_timestamp=2021-04-15T13:44:12.293Z, thread-id=645, tx_id=538649FC39BD418557067148E053158A82BBEE2B4BF2A0A3C3CFE8DA53446AE4}
[INFO ] 2021-04-15T13:44:13,004Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=d33a521d-9c95-4ebf-a856-458deed62dab, invocation_id=360db872-1b11-4e26-b92a-1a6f351a1163, invocation_timestamp=2021-04-15T13:44:12.293Z, origin=Only For Testing, session_id=360db872-1b11-4e26-b92a-1a6f351a1163, session_timestamp=2021-04-15T13:44:12.293Z, thread-id=645, tx_id=538649FC39BD418557067148E053158A82BBEE2B4BF2A0A3C3CFE8DA53446AE4}
[INFO ] 2021-04-15T13:44:13,032Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=d33a521d-9c95-4ebf-a856-458deed62dab, invocation_id=360db872-1b11-4e26-b92a-1a6f351a1163, invocation_timestamp=2021-04-15T13:44:12.293Z, origin=Only For Testing, session_id=360db872-1b11-4e26-b92a-1a6f351a1163, session_timestamp=2021-04-15T13:44:12.293Z, thread-id=645, tx_id=538649FC39BD418557067148E053158A82BBEE2B4BF2A0A3C3CFE8DA53446AE4}
[INFO ] 2021-04-15T13:44:13,072Z [Mock network] corda.flow. - Flow raised an error: O=InvestorB, L=TestCity, C=US has finished prematurely and we're trying to send them the finalised transaction. Did they forget to call ReceiveFinalityFlow? (Counter-flow errored). Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=d33a521d-9c95-4ebf-a856-458deed62dab, invocation_id=360db872-1b11-4e26-b92a-1a6f351a1163, invocation_timestamp=2021-04-15T13:44:12.293Z, origin=Only For Testing, session_id=360db872-1b11-4e26-b92a-1a6f351a1163, session_timestamp=2021-04-15T13:44:12.293Z, thread-id=645, tx_id=538649FC39BD418557067148E053158A82BBEE2B4BF2A0A3C3CFE8DA53446AE4}
[INFO ] 2021-04-15T13:44:13,075Z [Mock network] statemachine.StaffedFlowHospital. - Flow [d33a521d-9c95-4ebf-a856-458deed62dab] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=360db872-1b11-4e26-b92a-1a6f351a1163, timestamp: 2021-04-15T13:44:12.293Z, entityType: Invocation, sessionId=360db872-1b11-4e26-b92a-1a6f351a1163, timestamp: 2021-04-15T13:44:12.293Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=-4137246367760135856)=Initiated(peerParty=O=InvestorB, L=TestCity, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=-3736130853497696017), deduplicationSeed=R--4137246367760135856--8476702942571381045), SessionId(toLong=1290716911297466213)=Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[ErrorSessionMessage(flowException=null, errorId=5345065742358477752)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6707497761927365348), deduplicationSeed=R-1290716911297466213-6379030058213384628), SessionId(toLong=-2253000584376473934)=Initiated(peerParty=O=Notary, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=9, appName=corda), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-8163831896739840730), deduplicationSeed=R--2253000584376473934--6061101730935234772)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-4137246367760135856))=FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-4137246367760135856))=B574A333AF8755C723CCCBE70238698430C43E4980A91F3687879A1060D582AA}, shouldRetrySend=false), frozenFiber=EB9014C8FDCF7E7E656FE8BAAB90C43169A1B7B93CB2F6A226CDDBB8790AFB63), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator@7fb46b3d, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=57a65b9b-65bd-4131-a74c-1bd8b3e9bbe2, reloadCheckpointAfterSuspendCount=null, numberOfCommits=8, lock=java.util.concurrent.Semaphore@4fcdfc0f[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=d33a521d-9c95-4ebf-a856-458deed62dab, invocation_id=360db872-1b11-4e26-b92a-1a6f351a1163, invocation_timestamp=2021-04-15T13:44:12.293Z, origin=Only For Testing, session_id=360db872-1b11-4e26-b92a-1a6f351a1163, session_timestamp=2021-04-15T13:44:12.293Z, thread-id=645, tx_id=538649FC39BD418557067148E053158A82BBEE2B4BF2A0A3C3CFE8DA53446AE4}
[INFO ] 2021-04-15T13:44:13,075Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=d33a521d-9c95-4ebf-a856-458deed62dab, invocation_id=360db872-1b11-4e26-b92a-1a6f351a1163, invocation_timestamp=2021-04-15T13:44:12.293Z, origin=Only For Testing, session_id=360db872-1b11-4e26-b92a-1a6f351a1163, session_timestamp=2021-04-15T13:44:12.293Z, thread-id=645, tx_id=538649FC39BD418557067148E053158A82BBEE2B4BF2A0A3C3CFE8DA53446AE4}
net.corda.core.flows.UnexpectedFlowEndException: O=InvestorB, L=TestCity, C=US has finished prematurely and we're trying to send them the finalised transaction. Did they forget to call ReceiveFinalityFlow? (Counter-flow errored)
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:186) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:43) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow.call(ObserverAwareFinalityFlow.kt:75) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow.call(ObserverAwareFinalityFlow.kt:35) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:72) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:29) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[INFO ] 2021-04-15T13:44:13,075Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=d33a521d-9c95-4ebf-a856-458deed62dab, invocation_id=360db872-1b11-4e26-b92a-1a6f351a1163, invocation_timestamp=2021-04-15T13:44:12.293Z, origin=Only For Testing, session_id=360db872-1b11-4e26-b92a-1a6f351a1163, session_timestamp=2021-04-15T13:44:12.293Z, thread-id=645, tx_id=538649FC39BD418557067148E053158A82BBEE2B4BF2A0A3C3CFE8DA53446AE4}
net.corda.core.flows.UnexpectedFlowEndException: O=InvestorB, L=TestCity, C=US has finished prematurely and we're trying to send them the finalised transaction. Did they forget to call ReceiveFinalityFlow? (Counter-flow errored)
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:186) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:43) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow.call(ObserverAwareFinalityFlow.kt:75) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow.call(ObserverAwareFinalityFlow.kt:35) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:72) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:29) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[WARN ] 2021-04-15T13:44:13,101Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [d33a521d-9c95-4ebf-a856-458deed62dab] errored, dumping all transitions:

 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.297Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[d33a521d-9c95-4ebf-a856-458deed62dab], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=360db872-1b11-4e26-b92a-1a6f351a1163, timestamp: 2021-04-15T13:44:12.293Z, entityType: Invocation, sessionId=360db872-1b11-4e26-b92a-1a6f351a1163, timestamp: 2021-04-15T13:44:12.293Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=7C89CBCE0C667538847093353B74E829030967C608992ED505150D7A8D230993), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@22de383b])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@22de383b])
    SignalFlowHasStarted(flowId=[d33a521d-9c95-4ebf-a856-458deed62dab])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@22de383b]
    []


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.392Z
  Event: InitiateFlow(destination=O=InvestorB, L=TestCity, C=US, wellKnownParty=O=InvestorB, L=TestCity, C=US)
  Actions: 
    AddSessionBinding(flowId=[d33a521d-9c95-4ebf-a856-458deed62dab], sessionId=SessionId(toLong=-4137246367760135856))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.294Z
    2021-04-15T13:44:12.392Z
checkpoint.checkpointState.sessions.SessionId(toLong=-4137246367760135856): 
    null
    Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-4137246367760135856), additionalEntropy=-8476702942571381045)


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.392Z
  Event: InitiateFlow(destination=O=TIE, L=TestVillage, C=US, wellKnownParty=O=TIE, L=TestVillage, C=US)
  Actions: 
    AddSessionBinding(flowId=[d33a521d-9c95-4ebf-a856-458deed62dab], sessionId=SessionId(toLong=1290716911297466213))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=1290716911297466213): 
    null
    Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=1290716911297466213), additionalEntropy=6379030058213384628)


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.393Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.392Z
    2021-04-15T13:44:12.393Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.401Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.393Z
    2021-04-15T13:44:12.401Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false)]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.401Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.424Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-4137246367760135856))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), maySkipCheckpoint=false, fiber=BF6262D3DDF4D70BC1FF05EF67A338D9129799C0E3B2AB7740B01E3855B91B7E, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[d33a521d-9c95-4ebf-a856-458deed62dab], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=360db872-1b11-4e26-b92a-1a6f351a1163, timestamp: 2021-04-15T13:44:12.293Z, entityType: Invocation, sessionId=360db872-1b11-4e26-b92a-1a6f351a1163, timestamp: 2021-04-15T13:44:12.293Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=-4137246367760135856)=Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-4137246367760135856), additionalEntropy=-8476702942571381045), SessionId(toLong=1290716911297466213)=Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=1290716911297466213), additionalEntropy=6379030058213384628)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-4137246367760135856))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), frozenFiber=BF6262D3DDF4D70BC1FF05EF67A338D9129799C0E3B2AB7740B01E3855B91B7E), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=7C89CBCE0C667538847093353B74E829030967C608992ED505150D7A8D230993)
    Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-4137246367760135856))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), frozenFiber=BF6262D3DDF4D70BC1FF05EF67A338D9129799C0E3B2AB7740B01E3855B91B7E)
checkpoint.timestamp: 
    2021-04-15T13:44:12.401Z
    2021-04-15T13:44:12.420Z
checkpoint.flowIoRequest: 
    null
    Send
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.progressStep: 
    null
    Starting
numberOfCommits: 
    0
    2


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.429Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=InvestorB, L=TestCity, C=US, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-4137246367760135856), initiationEntropy=-8476702942571381045, initiatorFlowClassName=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--4137246367760135856--8476702942571381045-1-0), senderUUID=57a65b9b-65bd-4131-a74c-1bd8b3e9bbe2))], sendExisting=[])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:44:12.420Z
    2021-04-15T13:44:12.424Z
checkpoint.checkpointState.sessions.SessionId(toLong=-4137246367760135856): 
    Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-4137246367760135856), additionalEntropy=-8476702942571381045)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--4137246367760135856--8476702942571381045)


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.440Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=1290716911297466213))=0B9A9651C5E9F17665E1C7470E70C465EF497D6E0B91CA6ECCA58BDFE3E53298}), maySkipCheckpoint=false, fiber=FAB9C72356555B35652F689CC591CD6810E4489926FEE303A88CAAD008D72739, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[d33a521d-9c95-4ebf-a856-458deed62dab], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=360db872-1b11-4e26-b92a-1a6f351a1163, timestamp: 2021-04-15T13:44:12.293Z, entityType: Invocation, sessionId=360db872-1b11-4e26-b92a-1a6f351a1163, timestamp: 2021-04-15T13:44:12.293Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=-4137246367760135856)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--4137246367760135856--8476702942571381045), SessionId(toLong=1290716911297466213)=Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=1290716911297466213), additionalEntropy=6379030058213384628)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=1290716911297466213))=0B9A9651C5E9F17665E1C7470E70C465EF497D6E0B91CA6ECCA58BDFE3E53298}), frozenFiber=FAB9C72356555B35652F689CC591CD6810E4489926FEE303A88CAAD008D72739), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState.flowIORequest.sessionToMessage.FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-4137246367760135856)): 
    [636F7264610100000080C562000000000001D0000001240000000300A3226E65742E636F7264613A766C633369386C4A6E4F374B316932673067302B61413D3DC01002A10B5041525449434950414E5454000080C562000000000002C0D001C0CD010080C562000000000006C0C006A149636F6D2E72332E636F7264612E6C69622E746F6B656E732E776F726B666C6F77732E696E7465726E616C2E666C6F77732E66696E616C6974792E5472616E73616374696F6E526F6C654045A1046C6973740080C562000000000003C02602A3226E65742E636F7264613A766C633369386C4A6E4F374B316932673067302B61413D3D40C038020080C562000000000007C01102A10B5041525449434950414E54A101300080C562000000000007C00E02A1084F42534552564552A101310080C562000000000009C10100]
    null
checkpoint.flowState.flowIORequest.sessionToMessage.FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=1290716911297466213)): 
    null

checkpoint.flowState.frozenFiber.hash: 
    BF6262D3DDF4D70BC1FF05EF67A338D9129799C0E3B2AB7740B01E3855B91B7E
    FAB9C72356555B35652F689CC591CD6810E4489926FEE303A88CAAD008D72739
checkpoint.timestamp: 
    2021-04-15T13:44:12.424Z
    2021-04-15T13:44:12.435Z
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.446Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=TIE, L=TestVillage, C=US, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=1290716911297466213), initiationEntropy=6379030058213384628, initiatorFlowClassName=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-1290716911297466213-6379030058213384628-2-0), senderUUID=57a65b9b-65bd-4131-a74c-1bd8b3e9bbe2))], sendExisting=[])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:44:12.435Z
    2021-04-15T13:44:12.441Z
checkpoint.checkpointState.sessions.SessionId(toLong=1290716911297466213): 
    Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=1290716911297466213), additionalEntropy=6379030058213384628)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-1290716911297466213-6379030058213384628)


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.446Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.FinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.441Z
    2021-04-15T13:44:12.446Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.470Z
  Event: Suspend(ioRequest=net.corda.core.internal.FlowIORequest$ForceCheckpoint@31f67670, maySkipCheckpoint=false, fiber=582D0C64B0F33AD9646157516F4A59E427E9A0784603E4C9E310E91B7E0B5F58, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[d33a521d-9c95-4ebf-a856-458deed62dab], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=360db872-1b11-4e26-b92a-1a6f351a1163, timestamp: 2021-04-15T13:44:12.293Z, entityType: Invocation, sessionId=360db872-1b11-4e26-b92a-1a6f351a1163, timestamp: 2021-04-15T13:44:12.293Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=-4137246367760135856)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--4137246367760135856--8476702942571381045), SessionId(toLong=1290716911297466213)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-1290716911297466213-6379030058213384628)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=net.corda.core.internal.FlowIORequest$ForceCheckpoint@31f67670, frozenFiber=582D0C64B0F33AD9646157516F4A59E427E9A0784603E4C9E310E91B7E0B5F58), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=ForceCheckpoint, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=1290716911297466213))=0B9A9651C5E9F17665E1C7470E70C465EF497D6E0B91CA6ECCA58BDFE3E53298})
    net.corda.core.internal.FlowIORequest$ForceCheckpoint@31f67670
checkpoint.flowState.frozenFiber.hash: 
    FAB9C72356555B35652F689CC591CD6810E4489926FEE303A88CAAD008D72739
    582D0C64B0F33AD9646157516F4A59E427E9A0784603E4C9E310E91B7E0B5F58
checkpoint.timestamp: 
    2021-04-15T13:44:12.446Z
    2021-04-15T13:44:12.466Z
checkpoint.flowIoRequest: 
    Send
    ForceCheckpoint
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
numberOfCommits: 
    3
    4


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.470Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.470Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.NotaryFlow$Client, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.466Z
    2021-04-15T13:44:12.470Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.NotaryFlow$Client, classToInitiateWith=class net.corda.core.flows.NotaryFlow$Client, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.475Z
  Event: InitiateFlow(destination=O=Notary, L=London, C=GB, wellKnownParty=O=Notary, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[d33a521d-9c95-4ebf-a856-458deed62dab], sessionId=SessionId(toLong=-2253000584376473934))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.470Z
    2021-04-15T13:44:12.475Z
checkpoint.checkpointState.sessions.SessionId(toLong=-2253000584376473934): 
    null
    Uninitiated(destination=O=Notary, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.core.flows.NotaryFlow$Client, classToInitiateWith=class net.corda.core.flows.NotaryFlow$Client, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2253000584376473934), additionalEntropy=-6061101730935234772)


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.477Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.NotaryFlow$Client$NotarySendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.475Z
    2021-04-15T13:44:12.477Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.NotaryFlow$Client, classToInitiateWith=class net.corda.core.flows.NotaryFlow$Client, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.NotaryFlow$Client, classToInitiateWith=class net.corda.core.flows.NotaryFlow$Client, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.NotaryFlow$Client$NotarySendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.487Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-2253000584376473934))=FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-2253000584376473934))=7A6FA86E22CCA083FD095725D488885BF1D96CC2AA00668D2EADBB9C5CF75432}, shouldRetrySend=true), maySkipCheckpoint=true, fiber=C73B985224DE31F6AD0FA01EDA6C19BE8799526798F19649D514D3E090B4D400, currentStep=Starting)
  Actions: 
    CommitTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState.flowIORequest: 
    net.corda.core.internal.FlowIORequest$ForceCheckpoint@31f67670
    SendAndReceive({FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-2253000584376473934))=FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-2253000584376473934))=7A6FA86E22CCA083FD095725D488885BF1D96CC2AA00668D2EADBB9C5CF75432}, shouldRetrySend=true)
checkpoint.flowState.frozenFiber.hash: 
    582D0C64B0F33AD9646157516F4A59E427E9A0784603E4C9E310E91B7E0B5F58
    C73B985224DE31F6AD0FA01EDA6C19BE8799526798F19649D514D3E090B4D400
checkpoint.timestamp: 
    2021-04-15T13:44:12.477Z
    2021-04-15T13:44:12.487Z
checkpoint.flowIoRequest: 
    ForceCheckpoint
    SendAndReceive
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.checkpointState.numberOfCommits: 
    4
    5
numberOfCommits: 
    4
    5


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.488Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Notary, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-2253000584376473934), initiationEntropy=-6061101730935234772, initiatorFlowClassName=net.corda.core.flows.NotaryFlow$Client, appName=corda-core-4.7, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--2253000584376473934--6061101730935234772-4-0), senderUUID=57a65b9b-65bd-4131-a74c-1bd8b3e9bbe2))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-2253000584376473934))=FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-2253000584376473934))=7A6FA86E22CCA083FD095725D488885BF1D96CC2AA00668D2EADBB9C5CF75432}, shouldRetrySend=true)
    Receive(sessions=[FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-2253000584376473934))])
checkpoint.checkpointState.sessions.SessionId(toLong=-2253000584376473934): 
    Uninitiated(destination=O=Notary, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.core.flows.NotaryFlow$Client, classToInitiateWith=class net.corda.core.flows.NotaryFlow$Client, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2253000584376473934), additionalEntropy=-6061101730935234772)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--2253000584376473934--6061101730935234772)


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.524Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-2253000584376473934), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-8163831896739840730), initiatedFlowInfo=FlowInfo(flowVersion=9, appName=corda))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85, sender=O=Notary, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.487Z
    2021-04-15T13:44:12.524Z
checkpoint.checkpointState.sessions.SessionId(toLong=-2253000584376473934): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--2253000584376473934--6061101730935234772)
    Initiated(peerParty=O=Notary, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=9, appName=corda), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-8163831896739840730), deduplicationSeed=R--2253000584376473934--6061101730935234772)
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.524Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.738Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-2253000584376473934), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ff85bd8, sender=O=Notary, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.524Z
    2021-04-15T13:44:12.738Z
checkpoint.checkpointState.sessions.SessionId(toLong=-2253000584376473934).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ff85bd8]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.739Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-2253000584376473934).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.758Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-2253000584376473934))=FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-2253000584376473934))=FDDA565FDDE1DB404307660F2FDDEB5EF2095D01336CFECBB8DFE0C62C316695}, shouldRetrySend=true), maySkipCheckpoint=true, fiber=70198D89D145538E7EFC94B74BF293272DCD75A2F62ADD78C2DD292465C8A765, currentStep=Starting)
  Actions: 
    CommitTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-2253000584376473934))])
    SendAndReceive({FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-2253000584376473934))=FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-2253000584376473934))=FDDA565FDDE1DB404307660F2FDDEB5EF2095D01336CFECBB8DFE0C62C316695}, shouldRetrySend=true)
checkpoint.flowState.frozenFiber.hash: 
    C73B985224DE31F6AD0FA01EDA6C19BE8799526798F19649D514D3E090B4D400
    70198D89D145538E7EFC94B74BF293272DCD75A2F62ADD78C2DD292465C8A765
checkpoint.timestamp: 
    2021-04-15T13:44:12.738Z
    2021-04-15T13:44:12.758Z
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.checkpointState.numberOfCommits: 
    5
    6
numberOfCommits: 
    5
    6


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.760Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Notary, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-8163831896739840730), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--2253000584376473934--6061101730935234772-5-0), senderUUID=57a65b9b-65bd-4131-a74c-1bd8b3e9bbe2))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-2253000584376473934))=FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-2253000584376473934))=FDDA565FDDE1DB404307660F2FDDEB5EF2095D01336CFECBB8DFE0C62C316695}, shouldRetrySend=true)
    Receive(sessions=[FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-2253000584376473934))])
checkpoint.timestamp: 
    2021-04-15T13:44:12.758Z
    2021-04-15T13:44:12.759Z


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.883Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4137246367760135856), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-3736130853497696017), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@741b75b5, sender=O=InvestorB, L=TestCity, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.759Z
    2021-04-15T13:44:12.883Z
checkpoint.checkpointState.sessions.SessionId(toLong=-4137246367760135856): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--4137246367760135856--8476702942571381045)
    Initiated(peerParty=O=InvestorB, L=TestCity, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3736130853497696017), deduplicationSeed=R--4137246367760135856--8476702942571381045)
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ff85bd8]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ff85bd8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@741b75b5]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.883Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.946Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4137246367760135856), payload=ErrorSessionMessage(flowException=null, errorId=4663309976884980997)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2daa0020, sender=O=InvestorB, L=TestCity, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.883Z
    2021-04-15T13:44:12.945Z
checkpoint.checkpointState.sessions.SessionId(toLong=-4137246367760135856).receivedMessages: 
    []
    [ErrorSessionMessage(flowException=null, errorId=4663309976884980997)]
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ff85bd8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@741b75b5]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ff85bd8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@741b75b5, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2daa0020]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.946Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.957Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1290716911297466213), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-6707497761927365348), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4061b8d6, sender=O=TIE, L=TestVillage, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.946Z
    2021-04-15T13:44:12.957Z
checkpoint.checkpointState.sessions.SessionId(toLong=1290716911297466213): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-1290716911297466213-6379030058213384628)
    Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6707497761927365348), deduplicationSeed=R-1290716911297466213-6379030058213384628)
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ff85bd8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@741b75b5, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2daa0020]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ff85bd8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@741b75b5, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2daa0020, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4061b8d6]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.957Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.970Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1290716911297466213), payload=ErrorSessionMessage(flowException=null, errorId=5345065742358477752)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@72c26c75, sender=O=TIE, L=TestVillage, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.957Z
    2021-04-15T13:44:12.970Z
checkpoint.checkpointState.sessions.SessionId(toLong=1290716911297466213).receivedMessages: 
    []
    [ErrorSessionMessage(flowException=null, errorId=5345065742358477752)]
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ff85bd8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@741b75b5, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2daa0020, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4061b8d6]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ff85bd8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@741b75b5, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2daa0020, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4061b8d6, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@72c26c75]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.970Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.981Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-2253000584376473934), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ddb0945, sender=O=Notary, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.970Z
    2021-04-15T13:44:12.981Z
checkpoint.checkpointState.sessions.SessionId(toLong=-2253000584376473934).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ff85bd8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@741b75b5, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2daa0020, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4061b8d6, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@72c26c75]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ff85bd8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@741b75b5, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2daa0020, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4061b8d6, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@72c26c75, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ddb0945]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.981Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-2253000584376473934).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.982Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.981Z
    2021-04-15T13:44:12.982Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.NotaryFlow$Client, classToInitiateWith=class net.corda.core.flows.NotaryFlow$Client, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.NotaryFlow$Client$NotarySendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.NotaryFlow$Client, classToInitiateWith=class net.corda.core.flows.NotaryFlow$Client, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.991Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-2253000584376473934))]), maySkipCheckpoint=true, fiber=EC6B153FAB7ABB9C440A778545794A75E0F645ECB07C44FE5F90570754B6E49C, currentStep=Starting)
  Actions: 
    CommitTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState.frozenFiber.hash: 
    70198D89D145538E7EFC94B74BF293272DCD75A2F62ADD78C2DD292465C8A765
    EC6B153FAB7ABB9C440A778545794A75E0F645ECB07C44FE5F90570754B6E49C
checkpoint.timestamp: 
    2021-04-15T13:44:12.982Z
    2021-04-15T13:44:12.991Z
checkpoint.flowIoRequest: 
    SendAndReceive
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
checkpoint.checkpointState.numberOfCommits: 
    6
    7
numberOfCommits: 
    6
    7


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.992Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:13.001Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-2253000584376473934), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@200db9de, sender=O=Notary, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.992Z
    2021-04-15T13:44:13.001Z
checkpoint.checkpointState.sessions.SessionId(toLong=-2253000584376473934).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ff85bd8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@741b75b5, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2daa0020, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4061b8d6, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@72c26c75, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ddb0945]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ff85bd8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@741b75b5, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2daa0020, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4061b8d6, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@72c26c75, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ddb0945, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@200db9de]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:13.001Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-2253000584376473934).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:13.004Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:13.001Z
    2021-04-15T13:44:13.004Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.NotaryFlow$Client, classToInitiateWith=class net.corda.core.flows.NotaryFlow$Client, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:13.034Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:13.004Z
    2021-04-15T13:44:13.034Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:13.069Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-4137246367760135856))=FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-4137246367760135856))=B574A333AF8755C723CCCBE70238698430C43E4980A91F3687879A1060D582AA}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=EB9014C8FDCF7E7E656FE8BAAB90C43169A1B7B93CB2F6A226CDDBB8790AFB63, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[d33a521d-9c95-4ebf-a856-458deed62dab], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=360db872-1b11-4e26-b92a-1a6f351a1163, timestamp: 2021-04-15T13:44:12.293Z, entityType: Invocation, sessionId=360db872-1b11-4e26-b92a-1a6f351a1163, timestamp: 2021-04-15T13:44:12.293Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=-4137246367760135856)=Initiated(peerParty=O=InvestorB, L=TestCity, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[ErrorSessionMessage(flowException=null, errorId=4663309976884980997)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3736130853497696017), deduplicationSeed=R--4137246367760135856--8476702942571381045), SessionId(toLong=1290716911297466213)=Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[ErrorSessionMessage(flowException=null, errorId=5345065742358477752)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6707497761927365348), deduplicationSeed=R-1290716911297466213-6379030058213384628), SessionId(toLong=-2253000584376473934)=Initiated(peerParty=O=Notary, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=9, appName=corda), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-8163831896739840730), deduplicationSeed=R--2253000584376473934--6061101730935234772)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-4137246367760135856))=FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-4137246367760135856))=B574A333AF8755C723CCCBE70238698430C43E4980A91F3687879A1060D582AA}, shouldRetrySend=false), frozenFiber=EB9014C8FDCF7E7E656FE8BAAB90C43169A1B7B93CB2F6A226CDDBB8790AFB63), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ff85bd8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@741b75b5, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2daa0020, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4061b8d6, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@72c26c75, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ddb0945, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@200db9de])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ff85bd8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@741b75b5, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2daa0020, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4061b8d6, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@72c26c75, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ddb0945, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@200db9de])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-2253000584376473934))])
    SendAndReceive({FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-4137246367760135856))=FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-4137246367760135856))=B574A333AF8755C723CCCBE70238698430C43E4980A91F3687879A1060D582AA}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    EC6B153FAB7ABB9C440A778545794A75E0F645ECB07C44FE5F90570754B6E49C
    EB9014C8FDCF7E7E656FE8BAAB90C43169A1B7B93CB2F6A226CDDBB8790AFB63
checkpoint.timestamp: 
    2021-04-15T13:44:13.034Z
    2021-04-15T13:44:13.047Z
checkpoint.flowIoRequest: 
    Receive
    SendAndReceive
checkpoint.checkpointState.numberOfSuspends: 
    6
    7
checkpoint.checkpointState.numberOfCommits: 
    7
    8
numberOfCommits: 
    7
    8
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ff85bd8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@741b75b5, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2daa0020, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4061b8d6, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@72c26c75, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ddb0945, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@200db9de]
    []


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:13.070Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:44:13.047Z
    2021-04-15T13:44:13.070Z
checkpoint.checkpointState.sessions.SessionId(toLong=-4137246367760135856).otherSideErrored: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-4137246367760135856).receivedMessages: 
    [ErrorSessionMessage(flowException=null, errorId=4663309976884980997)]
    []


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:13.071Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:13.070Z
    2021-04-15T13:44:13.071Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:13.071Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:13.072Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:13.071Z
    2021-04-15T13:44:13.072Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false)]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:13.075Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: O=InvestorB, L=TestCity, C=US has finished prematurely and we're trying to send them the finalised transaction. Did they forget to call ReceiveFinalityFlow? (Counter-flow errored), rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=4663309976884980997, exception=net.corda.core.flows.UnexpectedFlowEndException: O=InvestorB, L=TestCity, C=US has finished prematurely and we're trying to send them the finalised transaction. Did they forget to call ReceiveFinalityFlow? (Counter-flow errored))], propagatedIndex=0, propagating=false)


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:13.075Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:13.075Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:13.072Z
    2021-04-15T13:44:13.075Z
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=d33a521d-9c95-4ebf-a856-458deed62dab, invocation_id=360db872-1b11-4e26-b92a-1a6f351a1163, invocation_timestamp=2021-04-15T13:44:12.293Z, origin=Only For Testing, session_id=360db872-1b11-4e26-b92a-1a6f351a1163, session_timestamp=2021-04-15T13:44:12.293Z, thread-id=645, tx_id=538649FC39BD418557067148E053158A82BBEE2B4BF2A0A3C3CFE8DA53446AE4}
[WARN ] 2021-04-15T13:44:13,101Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [d33a521d-9c95-4ebf-a856-458deed62dab] error {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=d33a521d-9c95-4ebf-a856-458deed62dab, invocation_id=360db872-1b11-4e26-b92a-1a6f351a1163, invocation_timestamp=2021-04-15T13:44:12.293Z, origin=Only For Testing, session_id=360db872-1b11-4e26-b92a-1a6f351a1163, session_timestamp=2021-04-15T13:44:12.293Z, thread-id=645, tx_id=538649FC39BD418557067148E053158A82BBEE2B4BF2A0A3C3CFE8DA53446AE4}
net.corda.core.flows.UnexpectedFlowEndException: O=InvestorB, L=TestCity, C=US has finished prematurely and we're trying to send them the finalised transaction. Did they forget to call ReceiveFinalityFlow? (Counter-flow errored)
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:186) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:43) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow.call(ObserverAwareFinalityFlow.kt:75) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow.call(ObserverAwareFinalityFlow.kt:35) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:72) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:29) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[WARN ] 2021-04-15T13:44:13,101Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=d33a521d-9c95-4ebf-a856-458deed62dab, invocation_id=360db872-1b11-4e26-b92a-1a6f351a1163, invocation_timestamp=2021-04-15T13:44:12.293Z, origin=Only For Testing, session_id=360db872-1b11-4e26-b92a-1a6f351a1163, session_timestamp=2021-04-15T13:44:12.293Z, thread-id=645, tx_id=538649FC39BD418557067148E053158A82BBEE2B4BF2A0A3C3CFE8DA53446AE4}
[WARN ] 2021-04-15T13:44:13,127Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [d33a521d-9c95-4ebf-a856-458deed62dab] errored, dumping all transitions:

 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.297Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[d33a521d-9c95-4ebf-a856-458deed62dab], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=360db872-1b11-4e26-b92a-1a6f351a1163, timestamp: 2021-04-15T13:44:12.293Z, entityType: Invocation, sessionId=360db872-1b11-4e26-b92a-1a6f351a1163, timestamp: 2021-04-15T13:44:12.293Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=7C89CBCE0C667538847093353B74E829030967C608992ED505150D7A8D230993), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@22de383b])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@22de383b])
    SignalFlowHasStarted(flowId=[d33a521d-9c95-4ebf-a856-458deed62dab])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@22de383b]
    []


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.392Z
  Event: InitiateFlow(destination=O=InvestorB, L=TestCity, C=US, wellKnownParty=O=InvestorB, L=TestCity, C=US)
  Actions: 
    AddSessionBinding(flowId=[d33a521d-9c95-4ebf-a856-458deed62dab], sessionId=SessionId(toLong=-4137246367760135856))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.294Z
    2021-04-15T13:44:12.392Z
checkpoint.checkpointState.sessions.SessionId(toLong=-4137246367760135856): 
    null
    Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-4137246367760135856), additionalEntropy=-8476702942571381045)


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.392Z
  Event: InitiateFlow(destination=O=TIE, L=TestVillage, C=US, wellKnownParty=O=TIE, L=TestVillage, C=US)
  Actions: 
    AddSessionBinding(flowId=[d33a521d-9c95-4ebf-a856-458deed62dab], sessionId=SessionId(toLong=1290716911297466213))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=1290716911297466213): 
    null
    Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=1290716911297466213), additionalEntropy=6379030058213384628)


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.393Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.392Z
    2021-04-15T13:44:12.393Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.401Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.393Z
    2021-04-15T13:44:12.401Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false)]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.401Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.424Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-4137246367760135856))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), maySkipCheckpoint=false, fiber=BF6262D3DDF4D70BC1FF05EF67A338D9129799C0E3B2AB7740B01E3855B91B7E, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[d33a521d-9c95-4ebf-a856-458deed62dab], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=360db872-1b11-4e26-b92a-1a6f351a1163, timestamp: 2021-04-15T13:44:12.293Z, entityType: Invocation, sessionId=360db872-1b11-4e26-b92a-1a6f351a1163, timestamp: 2021-04-15T13:44:12.293Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=-4137246367760135856)=Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-4137246367760135856), additionalEntropy=-8476702942571381045), SessionId(toLong=1290716911297466213)=Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=1290716911297466213), additionalEntropy=6379030058213384628)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-4137246367760135856))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), frozenFiber=BF6262D3DDF4D70BC1FF05EF67A338D9129799C0E3B2AB7740B01E3855B91B7E), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=7C89CBCE0C667538847093353B74E829030967C608992ED505150D7A8D230993)
    Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-4137246367760135856))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), frozenFiber=BF6262D3DDF4D70BC1FF05EF67A338D9129799C0E3B2AB7740B01E3855B91B7E)
checkpoint.timestamp: 
    2021-04-15T13:44:12.401Z
    2021-04-15T13:44:12.420Z
checkpoint.flowIoRequest: 
    null
    Send
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.progressStep: 
    null
    Starting
numberOfCommits: 
    0
    2


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.429Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=InvestorB, L=TestCity, C=US, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-4137246367760135856), initiationEntropy=-8476702942571381045, initiatorFlowClassName=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--4137246367760135856--8476702942571381045-1-0), senderUUID=57a65b9b-65bd-4131-a74c-1bd8b3e9bbe2))], sendExisting=[])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:44:12.420Z
    2021-04-15T13:44:12.424Z
checkpoint.checkpointState.sessions.SessionId(toLong=-4137246367760135856): 
    Uninitiated(destination=O=InvestorB, L=TestCity, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-4137246367760135856), additionalEntropy=-8476702942571381045)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--4137246367760135856--8476702942571381045)


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.440Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=1290716911297466213))=0B9A9651C5E9F17665E1C7470E70C465EF497D6E0B91CA6ECCA58BDFE3E53298}), maySkipCheckpoint=false, fiber=FAB9C72356555B35652F689CC591CD6810E4489926FEE303A88CAAD008D72739, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[d33a521d-9c95-4ebf-a856-458deed62dab], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=360db872-1b11-4e26-b92a-1a6f351a1163, timestamp: 2021-04-15T13:44:12.293Z, entityType: Invocation, sessionId=360db872-1b11-4e26-b92a-1a6f351a1163, timestamp: 2021-04-15T13:44:12.293Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=-4137246367760135856)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--4137246367760135856--8476702942571381045), SessionId(toLong=1290716911297466213)=Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=1290716911297466213), additionalEntropy=6379030058213384628)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=1290716911297466213))=0B9A9651C5E9F17665E1C7470E70C465EF497D6E0B91CA6ECCA58BDFE3E53298}), frozenFiber=FAB9C72356555B35652F689CC591CD6810E4489926FEE303A88CAAD008D72739), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState.flowIORequest.sessionToMessage.FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-4137246367760135856)): 

    null
checkpoint.flowState.flowIORequest.sessionToMessage.FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=1290716911297466213)): 
    null

checkpoint.flowState.frozenFiber.hash: 
    BF6262D3DDF4D70BC1FF05EF67A338D9129799C0E3B2AB7740B01E3855B91B7E
    FAB9C72356555B35652F689CC591CD6810E4489926FEE303A88CAAD008D72739
checkpoint.timestamp: 
    2021-04-15T13:44:12.424Z
    2021-04-15T13:44:12.435Z
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.446Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=TIE, L=TestVillage, C=US, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=1290716911297466213), initiationEntropy=6379030058213384628, initiatorFlowClassName=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-1290716911297466213-6379030058213384628-2-0), senderUUID=57a65b9b-65bd-4131-a74c-1bd8b3e9bbe2))], sendExisting=[])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:44:12.435Z
    2021-04-15T13:44:12.441Z
checkpoint.checkpointState.sessions.SessionId(toLong=1290716911297466213): 
    Uninitiated(destination=O=TIE, L=TestVillage, C=US, initiatingSubFlow=Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=1290716911297466213), additionalEntropy=6379030058213384628)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-1290716911297466213-6379030058213384628)


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.446Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.FinalityFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.441Z
    2021-04-15T13:44:12.446Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.470Z
  Event: Suspend(ioRequest=net.corda.core.internal.FlowIORequest$ForceCheckpoint@31f67670, maySkipCheckpoint=false, fiber=582D0C64B0F33AD9646157516F4A59E427E9A0784603E4C9E310E91B7E0B5F58, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[d33a521d-9c95-4ebf-a856-458deed62dab], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=360db872-1b11-4e26-b92a-1a6f351a1163, timestamp: 2021-04-15T13:44:12.293Z, entityType: Invocation, sessionId=360db872-1b11-4e26-b92a-1a6f351a1163, timestamp: 2021-04-15T13:44:12.293Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=-4137246367760135856)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--4137246367760135856--8476702942571381045), SessionId(toLong=1290716911297466213)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-1290716911297466213-6379030058213384628)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=net.corda.core.internal.FlowIORequest$ForceCheckpoint@31f67670, frozenFiber=582D0C64B0F33AD9646157516F4A59E427E9A0784603E4C9E310E91B7E0B5F58), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=ForceCheckpoint, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=TIE, L=TestVillage, C=US, sourceSessionId=SessionId(toLong=1290716911297466213))=0B9A9651C5E9F17665E1C7470E70C465EF497D6E0B91CA6ECCA58BDFE3E53298})
    net.corda.core.internal.FlowIORequest$ForceCheckpoint@31f67670
checkpoint.flowState.frozenFiber.hash: 
    FAB9C72356555B35652F689CC591CD6810E4489926FEE303A88CAAD008D72739
    582D0C64B0F33AD9646157516F4A59E427E9A0784603E4C9E310E91B7E0B5F58
checkpoint.timestamp: 
    2021-04-15T13:44:12.446Z
    2021-04-15T13:44:12.466Z
checkpoint.flowIoRequest: 
    Send
    ForceCheckpoint
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
numberOfCommits: 
    3
    4


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.470Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.470Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.NotaryFlow$Client, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.466Z
    2021-04-15T13:44:12.470Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.NotaryFlow$Client, classToInitiateWith=class net.corda.core.flows.NotaryFlow$Client, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.475Z
  Event: InitiateFlow(destination=O=Notary, L=London, C=GB, wellKnownParty=O=Notary, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[d33a521d-9c95-4ebf-a856-458deed62dab], sessionId=SessionId(toLong=-2253000584376473934))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.470Z
    2021-04-15T13:44:12.475Z
checkpoint.checkpointState.sessions.SessionId(toLong=-2253000584376473934): 
    null
    Uninitiated(destination=O=Notary, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.core.flows.NotaryFlow$Client, classToInitiateWith=class net.corda.core.flows.NotaryFlow$Client, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2253000584376473934), additionalEntropy=-6061101730935234772)


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.477Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.NotaryFlow$Client$NotarySendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.475Z
    2021-04-15T13:44:12.477Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.NotaryFlow$Client, classToInitiateWith=class net.corda.core.flows.NotaryFlow$Client, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.NotaryFlow$Client, classToInitiateWith=class net.corda.core.flows.NotaryFlow$Client, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.NotaryFlow$Client$NotarySendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.487Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-2253000584376473934))=FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-2253000584376473934))=7A6FA86E22CCA083FD095725D488885BF1D96CC2AA00668D2EADBB9C5CF75432}, shouldRetrySend=true), maySkipCheckpoint=true, fiber=C73B985224DE31F6AD0FA01EDA6C19BE8799526798F19649D514D3E090B4D400, currentStep=Starting)
  Actions: 
    CommitTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState.flowIORequest: 
    net.corda.core.internal.FlowIORequest$ForceCheckpoint@31f67670
    SendAndReceive({FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-2253000584376473934))=FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-2253000584376473934))=7A6FA86E22CCA083FD095725D488885BF1D96CC2AA00668D2EADBB9C5CF75432}, shouldRetrySend=true)
checkpoint.flowState.frozenFiber.hash: 
    582D0C64B0F33AD9646157516F4A59E427E9A0784603E4C9E310E91B7E0B5F58
    C73B985224DE31F6AD0FA01EDA6C19BE8799526798F19649D514D3E090B4D400
checkpoint.timestamp: 
    2021-04-15T13:44:12.477Z
    2021-04-15T13:44:12.487Z
checkpoint.flowIoRequest: 
    ForceCheckpoint
    SendAndReceive
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.checkpointState.numberOfCommits: 
    4
    5
numberOfCommits: 
    4
    5


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.488Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Notary, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-2253000584376473934), initiationEntropy=-6061101730935234772, initiatorFlowClassName=net.corda.core.flows.NotaryFlow$Client, appName=corda-core-4.7, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--2253000584376473934--6061101730935234772-4-0), senderUUID=57a65b9b-65bd-4131-a74c-1bd8b3e9bbe2))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-2253000584376473934))=FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-2253000584376473934))=7A6FA86E22CCA083FD095725D488885BF1D96CC2AA00668D2EADBB9C5CF75432}, shouldRetrySend=true)
    Receive(sessions=[FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-2253000584376473934))])
checkpoint.checkpointState.sessions.SessionId(toLong=-2253000584376473934): 
    Uninitiated(destination=O=Notary, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.core.flows.NotaryFlow$Client, classToInitiateWith=class net.corda.core.flows.NotaryFlow$Client, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2253000584376473934), additionalEntropy=-6061101730935234772)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--2253000584376473934--6061101730935234772)


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.524Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-2253000584376473934), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-8163831896739840730), initiatedFlowInfo=FlowInfo(flowVersion=9, appName=corda))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85, sender=O=Notary, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.487Z
    2021-04-15T13:44:12.524Z
checkpoint.checkpointState.sessions.SessionId(toLong=-2253000584376473934): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--2253000584376473934--6061101730935234772)
    Initiated(peerParty=O=Notary, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=9, appName=corda), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-8163831896739840730), deduplicationSeed=R--2253000584376473934--6061101730935234772)
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.524Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.738Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-2253000584376473934), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ff85bd8, sender=O=Notary, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.524Z
    2021-04-15T13:44:12.738Z
checkpoint.checkpointState.sessions.SessionId(toLong=-2253000584376473934).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ff85bd8]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.739Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-2253000584376473934).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.758Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-2253000584376473934))=FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-2253000584376473934))=FDDA565FDDE1DB404307660F2FDDEB5EF2095D01336CFECBB8DFE0C62C316695}, shouldRetrySend=true), maySkipCheckpoint=true, fiber=70198D89D145538E7EFC94B74BF293272DCD75A2F62ADD78C2DD292465C8A765, currentStep=Starting)
  Actions: 
    CommitTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-2253000584376473934))])
    SendAndReceive({FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-2253000584376473934))=FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-2253000584376473934))=FDDA565FDDE1DB404307660F2FDDEB5EF2095D01336CFECBB8DFE0C62C316695}, shouldRetrySend=true)
checkpoint.flowState.frozenFiber.hash: 
    C73B985224DE31F6AD0FA01EDA6C19BE8799526798F19649D514D3E090B4D400
    70198D89D145538E7EFC94B74BF293272DCD75A2F62ADD78C2DD292465C8A765
checkpoint.timestamp: 
    2021-04-15T13:44:12.738Z
    2021-04-15T13:44:12.758Z
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.checkpointState.numberOfCommits: 
    5
    6
numberOfCommits: 
    5
    6


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.760Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Notary, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-8163831896739840730), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--2253000584376473934--6061101730935234772-5-0), senderUUID=57a65b9b-65bd-4131-a74c-1bd8b3e9bbe2))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-2253000584376473934))=FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-2253000584376473934))=FDDA565FDDE1DB404307660F2FDDEB5EF2095D01336CFECBB8DFE0C62C316695}, shouldRetrySend=true)
    Receive(sessions=[FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-2253000584376473934))])
checkpoint.timestamp: 
    2021-04-15T13:44:12.758Z
    2021-04-15T13:44:12.759Z


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.883Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4137246367760135856), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-3736130853497696017), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@741b75b5, sender=O=InvestorB, L=TestCity, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.759Z
    2021-04-15T13:44:12.883Z
checkpoint.checkpointState.sessions.SessionId(toLong=-4137246367760135856): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--4137246367760135856--8476702942571381045)
    Initiated(peerParty=O=InvestorB, L=TestCity, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3736130853497696017), deduplicationSeed=R--4137246367760135856--8476702942571381045)
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ff85bd8]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ff85bd8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@741b75b5]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.883Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.946Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4137246367760135856), payload=ErrorSessionMessage(flowException=null, errorId=4663309976884980997)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2daa0020, sender=O=InvestorB, L=TestCity, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.883Z
    2021-04-15T13:44:12.945Z
checkpoint.checkpointState.sessions.SessionId(toLong=-4137246367760135856).receivedMessages: 
    []
    [ErrorSessionMessage(flowException=null, errorId=4663309976884980997)]
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ff85bd8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@741b75b5]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ff85bd8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@741b75b5, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2daa0020]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.946Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.957Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1290716911297466213), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-6707497761927365348), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4061b8d6, sender=O=TIE, L=TestVillage, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.946Z
    2021-04-15T13:44:12.957Z
checkpoint.checkpointState.sessions.SessionId(toLong=1290716911297466213): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-1290716911297466213-6379030058213384628)
    Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6707497761927365348), deduplicationSeed=R-1290716911297466213-6379030058213384628)
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ff85bd8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@741b75b5, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2daa0020]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ff85bd8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@741b75b5, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2daa0020, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4061b8d6]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.957Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.970Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1290716911297466213), payload=ErrorSessionMessage(flowException=null, errorId=5345065742358477752)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@72c26c75, sender=O=TIE, L=TestVillage, C=US)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.957Z
    2021-04-15T13:44:12.970Z
checkpoint.checkpointState.sessions.SessionId(toLong=1290716911297466213).receivedMessages: 
    []
    [ErrorSessionMessage(flowException=null, errorId=5345065742358477752)]
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ff85bd8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@741b75b5, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2daa0020, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4061b8d6]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ff85bd8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@741b75b5, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2daa0020, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4061b8d6, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@72c26c75]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.970Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.981Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-2253000584376473934), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ddb0945, sender=O=Notary, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.970Z
    2021-04-15T13:44:12.981Z
checkpoint.checkpointState.sessions.SessionId(toLong=-2253000584376473934).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ff85bd8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@741b75b5, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2daa0020, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4061b8d6, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@72c26c75]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ff85bd8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@741b75b5, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2daa0020, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4061b8d6, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@72c26c75, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ddb0945]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.981Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-2253000584376473934).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.982Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.981Z
    2021-04-15T13:44:12.982Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.NotaryFlow$Client, classToInitiateWith=class net.corda.core.flows.NotaryFlow$Client, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.NotaryFlow$Client$NotarySendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.NotaryFlow$Client, classToInitiateWith=class net.corda.core.flows.NotaryFlow$Client, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.991Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-2253000584376473934))]), maySkipCheckpoint=true, fiber=EC6B153FAB7ABB9C440A778545794A75E0F645ECB07C44FE5F90570754B6E49C, currentStep=Starting)
  Actions: 
    CommitTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState.frozenFiber.hash: 
    70198D89D145538E7EFC94B74BF293272DCD75A2F62ADD78C2DD292465C8A765
    EC6B153FAB7ABB9C440A778545794A75E0F645ECB07C44FE5F90570754B6E49C
checkpoint.timestamp: 
    2021-04-15T13:44:12.982Z
    2021-04-15T13:44:12.991Z
checkpoint.flowIoRequest: 
    SendAndReceive
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
checkpoint.checkpointState.numberOfCommits: 
    6
    7
numberOfCommits: 
    6
    7


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:12.992Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:13.001Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-2253000584376473934), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@200db9de, sender=O=Notary, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:12.992Z
    2021-04-15T13:44:13.001Z
checkpoint.checkpointState.sessions.SessionId(toLong=-2253000584376473934).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ff85bd8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@741b75b5, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2daa0020, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4061b8d6, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@72c26c75, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ddb0945]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ff85bd8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@741b75b5, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2daa0020, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4061b8d6, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@72c26c75, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ddb0945, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@200db9de]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:13.001Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-2253000584376473934).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:13.004Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:13.001Z
    2021-04-15T13:44:13.004Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.NotaryFlow$Client, classToInitiateWith=class net.corda.core.flows.NotaryFlow$Client, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:13.034Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:13.004Z
    2021-04-15T13:44:13.034Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:13.069Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-4137246367760135856))=FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-4137246367760135856))=B574A333AF8755C723CCCBE70238698430C43E4980A91F3687879A1060D582AA}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=EB9014C8FDCF7E7E656FE8BAAB90C43169A1B7B93CB2F6A226CDDBB8790AFB63, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[d33a521d-9c95-4ebf-a856-458deed62dab], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=360db872-1b11-4e26-b92a-1a6f351a1163, timestamp: 2021-04-15T13:44:12.293Z, entityType: Invocation, sessionId=360db872-1b11-4e26-b92a-1a6f351a1163, timestamp: 2021-04-15T13:44:12.293Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=-4137246367760135856)=Initiated(peerParty=O=InvestorB, L=TestCity, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[ErrorSessionMessage(flowException=null, errorId=4663309976884980997)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3736130853497696017), deduplicationSeed=R--4137246367760135856--8476702942571381045), SessionId(toLong=1290716911297466213)=Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[ErrorSessionMessage(flowException=null, errorId=5345065742358477752)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6707497761927365348), deduplicationSeed=R-1290716911297466213-6379030058213384628), SessionId(toLong=-2253000584376473934)=Initiated(peerParty=O=Notary, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=9, appName=corda), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-8163831896739840730), deduplicationSeed=R--2253000584376473934--6061101730935234772)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-4137246367760135856))=FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-4137246367760135856))=B574A333AF8755C723CCCBE70238698430C43E4980A91F3687879A1060D582AA}, shouldRetrySend=false), frozenFiber=EB9014C8FDCF7E7E656FE8BAAB90C43169A1B7B93CB2F6A226CDDBB8790AFB63), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ff85bd8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@741b75b5, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2daa0020, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4061b8d6, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@72c26c75, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ddb0945, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@200db9de])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ff85bd8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@741b75b5, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2daa0020, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4061b8d6, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@72c26c75, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ddb0945, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@200db9de])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Notary, L=London, C=GB, sourceSessionId=SessionId(toLong=-2253000584376473934))])
    SendAndReceive({FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-4137246367760135856))=FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-4137246367760135856))=B574A333AF8755C723CCCBE70238698430C43E4980A91F3687879A1060D582AA}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    EC6B153FAB7ABB9C440A778545794A75E0F645ECB07C44FE5F90570754B6E49C
    EB9014C8FDCF7E7E656FE8BAAB90C43169A1B7B93CB2F6A226CDDBB8790AFB63
checkpoint.timestamp: 
    2021-04-15T13:44:13.034Z
    2021-04-15T13:44:13.047Z
checkpoint.flowIoRequest: 
    Receive
    SendAndReceive
checkpoint.checkpointState.numberOfSuspends: 
    6
    7
checkpoint.checkpointState.numberOfCommits: 
    7
    8
numberOfCommits: 
    7
    8
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c34bb85, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ff85bd8, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@741b75b5, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2daa0020, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4061b8d6, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@72c26c75, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ddb0945, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@200db9de]
    []


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:13.070Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2021-04-15T13:44:13.047Z
    2021-04-15T13:44:13.070Z
checkpoint.checkpointState.sessions.SessionId(toLong=-4137246367760135856).otherSideErrored: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-4137246367760135856).receivedMessages: 
    [ErrorSessionMessage(flowException=null, errorId=4663309976884980997)]
    []


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:13.071Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:13.070Z
    2021-04-15T13:44:13.071Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:13.071Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.7), subFlowVersion=CoreFlow(platformVersion=9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:13.072Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:13.071Z
    2021-04-15T13:44:13.072Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow, subFlowVersion=CorDappFlow(platformVersion=9, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false)]


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:13.075Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: O=InvestorB, L=TestCity, C=US has finished prematurely and we're trying to send them the finalised transaction. Did they forget to call ReceiveFinalityFlow? (Counter-flow errored), rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=4663309976884980997, exception=net.corda.core.flows.UnexpectedFlowEndException: O=InvestorB, L=TestCity, C=US has finished prematurely and we're trying to send them the finalised transaction. Did they forget to call ReceiveFinalityFlow? (Counter-flow errored))], propagatedIndex=0, propagating=false)


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:13.075Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:13.075Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-04-15T13:44:13.072Z
    2021-04-15T13:44:13.075Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [d33a521d-9c95-4ebf-a856-458deed62dab] ---
  Timestamp: 2021-04-15T13:44:13.110Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=4663309976884980997)], sessions=[Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[ErrorSessionMessage(flowException=null, errorId=5345065742358477752)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6707497761927365348), deduplicationSeed=R-1290716911297466213-6379030058213384628), Initiated(peerParty=O=Notary, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=9, appName=corda), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-8163831896739840730), deduplicationSeed=R--2253000584376473934--6061101730935234772)], senderUUID=57a65b9b-65bd-4131-a74c-1bd8b3e9bbe2)
    CreateTransaction
    RemoveCheckpoint(id=[d33a521d-9c95-4ebf-a856-458deed62dab], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=d33a521d-9c95-4ebf-a856-458deed62dab)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-4137246367760135856), SessionId(toLong=1290716911297466213), SessionId(toLong=-2253000584376473934)])
    RemoveFlow(flowId=[d33a521d-9c95-4ebf-a856-458deed62dab], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=4663309976884980997, exception=net.corda.core.flows.UnexpectedFlowEndException: O=InvestorB, L=TestCity, C=US has finished prematurely and we're trying to send them the finalised transaction. Did they forget to call ReceiveFinalityFlow? (Counter-flow errored))]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US)), trace=Trace(invocationId=360db872-1b11-4e26-b92a-1a6f351a1163, timestamp: 2021-04-15T13:44:12.293Z, entityType: Invocation, sessionId=360db872-1b11-4e26-b92a-1a6f351a1163, timestamp: 2021-04-15T13:44:12.293Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=InvestorA, L=TestLand, C=US), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=InvestorA, L=TestLand, C=US, sessions={SessionId(toLong=-4137246367760135856)=Initiated(peerParty=O=InvestorB, L=TestCity, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=-3736130853497696017), deduplicationSeed=R--4137246367760135856--8476702942571381045), SessionId(toLong=1290716911297466213)=Initiated(peerParty=O=TIE, L=TestVillage, C=US, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[ErrorSessionMessage(flowException=null, errorId=5345065742358477752)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6707497761927365348), deduplicationSeed=R-1290716911297466213-6379030058213384628), SessionId(toLong=-2253000584376473934)=Initiated(peerParty=O=Notary, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=9, appName=corda), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-8163831896739840730), deduplicationSeed=R--2253000584376473934--6061101730935234772)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, classToInitiateWith=class com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=9, corDappName=workflows-0.1, corDappHash=333A11FD704CE89195809D18F675C6393AAFB6A097BB655C8AF64AF0060DA5E9), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=9), flowState=net.corda.node.services.statemachine.FlowState$Finished@2408123c, errorState=Errored(errors=[FlowError(errorId=4663309976884980997, exception=net.corda.core.flows.UnexpectedFlowEndException: O=InvestorB, L=TestCity, C=US has finished prematurely and we're trying to send them the finalised transaction. Did they forget to call ReceiveFinalityFlow? (Counter-flow errored))], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), flowLogic=com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator@7fb46b3d, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, senderUUID=57a65b9b-65bd-4131-a74c-1bd8b3e9bbe2, reloadCheckpointAfterSuspendCount=null, numberOfCommits=9, lock=java.util.concurrent.Semaphore@4fcdfc0f[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.flowState: 
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-4137246367760135856))=FlowSessionImpl(destination=O=InvestorB, L=TestCity, C=US, sourceSessionId=SessionId(toLong=-4137246367760135856))=B574A333AF8755C723CCCBE70238698430C43E4980A91F3687879A1060D582AA}, shouldRetrySend=false), frozenFiber=EB9014C8FDCF7E7E656FE8BAAB90C43169A1B7B93CB2F6A226CDDBB8790AFB63)
    net.corda.node.services.statemachine.FlowState$Finished@2408123c
checkpoint.timestamp: 
    2021-04-15T13:44:13.075Z
    2021-04-15T13:44:13.101Z
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.checkpointState.numberOfCommits: 
    8
    9
numberOfCommits: 
    8
    9
isRemoved: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=d33a521d-9c95-4ebf-a856-458deed62dab, invocation_id=360db872-1b11-4e26-b92a-1a6f351a1163, invocation_timestamp=2021-04-15T13:44:12.293Z, origin=Only For Testing, session_id=360db872-1b11-4e26-b92a-1a6f351a1163, session_timestamp=2021-04-15T13:44:12.293Z, thread-id=645, tx_id=538649FC39BD418557067148E053158A82BBEE2B4BF2A0A3C3CFE8DA53446AE4}
[WARN ] 2021-04-15T13:44:13,127Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [d33a521d-9c95-4ebf-a856-458deed62dab] error {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=d33a521d-9c95-4ebf-a856-458deed62dab, invocation_id=360db872-1b11-4e26-b92a-1a6f351a1163, invocation_timestamp=2021-04-15T13:44:12.293Z, origin=Only For Testing, session_id=360db872-1b11-4e26-b92a-1a6f351a1163, session_timestamp=2021-04-15T13:44:12.293Z, thread-id=645, tx_id=538649FC39BD418557067148E053158A82BBEE2B4BF2A0A3C3CFE8DA53446AE4}
net.corda.core.flows.UnexpectedFlowEndException: O=InvestorB, L=TestCity, C=US has finished prematurely and we're trying to send them the finalised transaction. Did they forget to call ReceiveFinalityFlow? (Counter-flow errored)
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:186) ~[corda-core-4.7.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:43) ~[corda-core-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow.call(ObserverAwareFinalityFlow.kt:75) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.internal.flows.finality.ObserverAwareFinalityFlow.call(ObserverAwareFinalityFlow.kt:35) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:417) ~[corda-node-4.7.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.7.jar:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:72) ~[main/:?]
	at com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator.call(TransferFungEvoToken.java:29) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:346) ~[corda-node-4.7.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.7.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_282]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_282]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_282]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_282]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.7.jar:?]
[INFO ] 2021-04-15T13:44:13,133Z [Mock network] statemachine.SingleThreadedStateMachineManager. - Cannot find flow corresponding to session ID - SessionId(toLong=-6707497761927365348). {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=d33a521d-9c95-4ebf-a856-458deed62dab, invocation_id=360db872-1b11-4e26-b92a-1a6f351a1163, invocation_timestamp=2021-04-15T13:44:12.293Z, origin=Only For Testing, session_id=360db872-1b11-4e26-b92a-1a6f351a1163, session_timestamp=2021-04-15T13:44:12.293Z, thread-id=645}
[INFO ] 2021-04-15T13:44:13,136Z [Mock network] statemachine.SingleThreadedStateMachineManager. - Cannot find flow corresponding to session ID - SessionId(toLong=-8163831896739840730). {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=d33a521d-9c95-4ebf-a856-458deed62dab, invocation_id=360db872-1b11-4e26-b92a-1a6f351a1163, invocation_timestamp=2021-04-15T13:44:12.293Z, origin=Only For Testing, session_id=360db872-1b11-4e26-b92a-1a6f351a1163, session_timestamp=2021-04-15T13:44:12.293Z, thread-id=645}
[INFO ] 2021-04-15T13:44:13,151Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2021-04-15T13:44:13,182Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:44:13,182Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:44:13,187Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2021-04-15T13:44:13,201Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:44:13,201Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:44:13,203Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2021-04-15T13:44:13,217Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:44:13,217Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:44:13,219Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2021-04-15T13:44:13,233Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:44:13,233Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:52:02,971Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/peterli/Desktop/tokenTest/workflows ... {}
[INFO ] 2021-04-15T13:52:03,182Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:52:04,594Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2021-04-15T13:52:05,606Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2021-04-15T13:52:05,621Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2021-04-15T13:52:05,622Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:52:06,270Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:52:06,290Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2021-04-15T13:52:06,841Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:52:06,851Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:52:06,851Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2021-04-15T13:52:07,046Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:52:07,058Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:52:07,661Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2021-04-15T13:52:08,505Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:52:08,505Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2021-04-15T13:52:08,538Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:52:08,539Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2021-04-15T13:52:08,539Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:52:09,435Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:52:09,435Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2021-04-15T13:52:09,555Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:52:09,555Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2021-04-15T13:52:09,596Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:52:09,596Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2021-04-15T13:52:09,716Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:52:09,716Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:52:09,870Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:52:09,901Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:52:09,978Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2021-04-15T13:52:10,258Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:52:10,259Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2021-04-15T13:52:10,259Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:52:10,282Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2021-04-15T13:52:10,282Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:52:10,344Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:52:10,344Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2021-04-15T13:52:10,344Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:52:10,344Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2021-04-15T13:52:10,356Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:52:10,356Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:52:10,368Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2021-04-15T13:52:10,467Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:52:10,467Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:52:10,479Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:52:10,479Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:52:10,479Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:52:10,479Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:52:10,479Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:52:10,479Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:52:10,495Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:52:10,495Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:52:10,495Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2021-04-15T13:52:10,529Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:52:10,530Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:52:10,554Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2021-04-15T13:52:10,604Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:52:10,604Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2021-04-15T13:52:10,604Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:52:10,604Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2021-04-15T13:52:10,604Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:52:10,615Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:52:10,615Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2021-04-15T13:52:10,626Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:52:10,626Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2021-04-15T13:52:10,626Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:52:10,626Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:52:10,626Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2021-04-15T13:52:10,672Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:52:10,672Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:52:10,682Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:52:10,682Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:52:10,682Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:52:10,683Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:52:10,683Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:52:10,683Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:52:10,683Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:52:10,683Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:52:10,683Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:52:10,683Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:52:10,683Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2021-04-15T13:52:12,464Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:52:12,464Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:52:12,464Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2021-04-15T13:52:12,464Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:52:12,476Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:52:12,488Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/peterli/Desktop/tokenTest/.gradle {}
[INFO ] 2021-04-15T13:52:12,488Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:52:12,515Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2021-04-15T13:52:17,444Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/0/cordapps] {}
[INFO ] 2021-04-15T13:52:17,454Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:52:17,466Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:52:17,582Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:52:17,598Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:52:17,650Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:52:19,114Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:52:19,391Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:52:19,458Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:52:19,475Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:52:19,479Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL99ojgK4PFQqkFNLgRJFYpsjYvAocATNYiup2nyNmdcqJ, alias: identity-private-key {}
[INFO ] 2021-04-15T13:52:19,630Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:52:19,631Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:52:19,635Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:19,636Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:19,637Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:19,638Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:19,638Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:19,638Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:19,639Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:19,639Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:19,640Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:19,641Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:19,642Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:52:19,643Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:52:19,644Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:52:19,678Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:52:19,766Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:51:58.809Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:52:25,582Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:52:25,658Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-04-15T13:52:25,664Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-04-15T13:52:28,655Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-04-15T13:52:28,992Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:52:29,003Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494748993), owningKey=DL99ojgK4PFQqkFNLgRJFYpsjYvAocATNYiup2nyNmdcqJ {}
[INFO ] 2021-04-15T13:52:29,003Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:52:29,180Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494748993) {}
[INFO ] 2021-04-15T13:52:29,245Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:52:29,281Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:52:29,283Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:52:29,320Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494748993), owningKey=DL99ojgK4PFQqkFNLgRJFYpsjYvAocATNYiup2nyNmdcqJ {}
[INFO ] 2021-04-15T13:52:29,320Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:52:29,431Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:52:29,462Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:52:29,478Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:52:29,491Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:52:29,584Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:52:29,690Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:52:29,691Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-04-15T13:52:30,470Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494748993) {}
[INFO ] 2021-04-15T13:52:30,478Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494748993), owningKey=DL99ojgK4PFQqkFNLgRJFYpsjYvAocATNYiup2nyNmdcqJ {}
[INFO ] 2021-04-15T13:52:30,478Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:52:30,478Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494748993), owningKey=DL99ojgK4PFQqkFNLgRJFYpsjYvAocATNYiup2nyNmdcqJ {}
[INFO ] 2021-04-15T13:52:30,478Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:52:30,491Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/1/cordapps] {}
[INFO ] 2021-04-15T13:52:30,492Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:52:30,492Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:52:30,501Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:52:30,507Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:52:30,519Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:52:30,572Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:52:30,573Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:52:30,575Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:52:30,619Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:52:30,619Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLCth6hk3cHZxZDkq8bAUPyNzY8QdGkWTGhwwvNv7w4CAY, alias: identity-private-key {}
[INFO ] 2021-04-15T13:52:30,627Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:52:30,627Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:52:30,627Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:30,627Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:30,627Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:30,628Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:30,628Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:30,628Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:30,628Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:30,628Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:30,628Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:30,628Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:30,628Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:52:30,628Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:52:30,629Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:52:30,629Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:52:30,634Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:51:58.809Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:52:31,348Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:52:31,349Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:52:31,349Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:52:31,537Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:52:31,544Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:52:31,549Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494751544), owningKey=DLCth6hk3cHZxZDkq8bAUPyNzY8QdGkWTGhwwvNv7w4CAY {}
[INFO ] 2021-04-15T13:52:31,549Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:52:31,560Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494751544) {}
[INFO ] 2021-04-15T13:52:31,569Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:52:31,570Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:52:31,570Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:52:31,580Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494751544), owningKey=DLCth6hk3cHZxZDkq8bAUPyNzY8QdGkWTGhwwvNv7w4CAY {}
[INFO ] 2021-04-15T13:52:31,580Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:52:31,621Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:52:31,650Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:52:31,653Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:52:31,654Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:52:31,655Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:52:31,663Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:52:31,716Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494751544) {}
[INFO ] 2021-04-15T13:52:31,719Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494748993), owningKey=DL99ojgK4PFQqkFNLgRJFYpsjYvAocATNYiup2nyNmdcqJ {}
[INFO ] 2021-04-15T13:52:31,719Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:52:31,735Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494751544), owningKey=DLCth6hk3cHZxZDkq8bAUPyNzY8QdGkWTGhwwvNv7w4CAY {}
[INFO ] 2021-04-15T13:52:31,735Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:52:31,750Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494751544), owningKey=DLCth6hk3cHZxZDkq8bAUPyNzY8QdGkWTGhwwvNv7w4CAY {}
[INFO ] 2021-04-15T13:52:31,750Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:52:31,750Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494751544), owningKey=DLCth6hk3cHZxZDkq8bAUPyNzY8QdGkWTGhwwvNv7w4CAY {}
[INFO ] 2021-04-15T13:52:31,751Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:52:31,764Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/2/cordapps] {}
[INFO ] 2021-04-15T13:52:31,765Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:52:31,765Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:52:31,774Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:52:31,781Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:52:31,792Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:52:31,842Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:52:31,844Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:52:31,846Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:52:31,897Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:52:31,897Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL6vGFuZPLVTPprhSTVykxW9Vs9BqsBeuzEXFxEns7TDTs, alias: identity-private-key {}
[INFO ] 2021-04-15T13:52:31,907Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:52:31,907Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:52:31,907Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:31,907Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:31,907Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:31,907Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:31,907Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:31,908Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:31,908Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:31,908Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:31,908Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:31,908Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:31,908Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:52:31,908Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:52:31,908Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:52:31,908Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:52:31,914Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:51:58.809Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:52:32,583Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:52:32,584Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:52:32,584Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:52:32,764Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:52:32,772Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:52:32,776Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494752772), owningKey=DL6vGFuZPLVTPprhSTVykxW9Vs9BqsBeuzEXFxEns7TDTs {}
[INFO ] 2021-04-15T13:52:32,776Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:52:32,787Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494752772) {}
[INFO ] 2021-04-15T13:52:32,801Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:52:32,802Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:52:32,802Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:52:32,813Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494752772), owningKey=DL6vGFuZPLVTPprhSTVykxW9Vs9BqsBeuzEXFxEns7TDTs {}
[INFO ] 2021-04-15T13:52:32,813Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:52:32,850Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:52:32,876Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:52:32,879Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:52:32,880Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:52:32,880Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:52:32,889Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:52:32,919Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494752772) {}
[INFO ] 2021-04-15T13:52:32,922Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494748993), owningKey=DL99ojgK4PFQqkFNLgRJFYpsjYvAocATNYiup2nyNmdcqJ {}
[INFO ] 2021-04-15T13:52:32,922Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:52:32,939Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494752772), owningKey=DL6vGFuZPLVTPprhSTVykxW9Vs9BqsBeuzEXFxEns7TDTs {}
[INFO ] 2021-04-15T13:52:32,939Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:52:32,955Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494751544), owningKey=DLCth6hk3cHZxZDkq8bAUPyNzY8QdGkWTGhwwvNv7w4CAY {}
[INFO ] 2021-04-15T13:52:32,955Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:52:32,971Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494752772), owningKey=DL6vGFuZPLVTPprhSTVykxW9Vs9BqsBeuzEXFxEns7TDTs {}
[INFO ] 2021-04-15T13:52:32,971Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:52:32,981Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494752772), owningKey=DL6vGFuZPLVTPprhSTVykxW9Vs9BqsBeuzEXFxEns7TDTs {}
[INFO ] 2021-04-15T13:52:32,981Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:52:32,981Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494752772), owningKey=DL6vGFuZPLVTPprhSTVykxW9Vs9BqsBeuzEXFxEns7TDTs {}
[INFO ] 2021-04-15T13:52:32,981Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:52:32,993Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/3/cordapps] {}
[INFO ] 2021-04-15T13:52:32,993Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/3/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/3/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/3/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/3/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:52:32,993Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/3/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:52:33,001Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/3/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:52:33,007Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/3/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:52:33,017Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/3/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:52:33,078Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:52:33,079Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:52:33,081Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:52:33,133Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:52:33,133Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLB8sExr3YcmQgxYjXV2biLSS6jK4hQE4tnZDR9xuXA45K, alias: identity-private-key {}
[INFO ] 2021-04-15T13:52:33,143Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:52:33,143Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:52:33,143Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:33,143Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:33,144Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:33,144Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:33,144Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:33,144Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:33,144Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:33,144Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:33,144Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:33,144Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:52:33,144Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:52:33,144Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:52:33,144Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:52:33,144Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:52:33,149Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:51:58.809Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:52:33,746Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:52:33,749Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:52:33,749Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:52:33,931Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:52:33,937Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:52:33,941Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494753937), owningKey=DLB8sExr3YcmQgxYjXV2biLSS6jK4hQE4tnZDR9xuXA45K {}
[INFO ] 2021-04-15T13:52:33,941Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:52:33,952Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494753937) {}
[INFO ] 2021-04-15T13:52:33,960Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:52:33,961Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:52:33,961Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:52:33,970Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494753937), owningKey=DLB8sExr3YcmQgxYjXV2biLSS6jK4hQE4tnZDR9xuXA45K {}
[INFO ] 2021-04-15T13:52:33,970Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:52:34,003Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:52:34,028Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:52:34,031Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:52:34,032Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-135201.739-9D951E4C92052594/nodes/3/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:52:34,033Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:52:34,039Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:52:34,062Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494753937) {}
[INFO ] 2021-04-15T13:52:34,065Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494748993), owningKey=DL99ojgK4PFQqkFNLgRJFYpsjYvAocATNYiup2nyNmdcqJ {}
[INFO ] 2021-04-15T13:52:34,065Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:52:34,078Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494753937), owningKey=DLB8sExr3YcmQgxYjXV2biLSS6jK4hQE4tnZDR9xuXA45K {}
[INFO ] 2021-04-15T13:52:34,078Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:52:34,096Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494751544), owningKey=DLCth6hk3cHZxZDkq8bAUPyNzY8QdGkWTGhwwvNv7w4CAY {}
[INFO ] 2021-04-15T13:52:34,096Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:52:34,112Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494753937), owningKey=DLB8sExr3YcmQgxYjXV2biLSS6jK4hQE4tnZDR9xuXA45K {}
[INFO ] 2021-04-15T13:52:34,112Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:52:34,126Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494752772), owningKey=DL6vGFuZPLVTPprhSTVykxW9Vs9BqsBeuzEXFxEns7TDTs {}
[INFO ] 2021-04-15T13:52:34,126Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:52:34,141Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494753937), owningKey=DLB8sExr3YcmQgxYjXV2biLSS6jK4hQE4tnZDR9xuXA45K {}
[INFO ] 2021-04-15T13:52:34,141Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:52:34,153Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494753937), owningKey=DLB8sExr3YcmQgxYjXV2biLSS6jK4hQE4tnZDR9xuXA45K {}
[INFO ] 2021-04-15T13:52:34,153Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:52:34,153Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494753937), owningKey=DLB8sExr3YcmQgxYjXV2biLSS6jK4hQE4tnZDR9xuXA45K {}
[INFO ] 2021-04-15T13:52:34,153Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:52:35,002Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=baff8096-2c9f-4bc8-b038-14282892063b, invocation_id=d29578d5-039b-45c5-b8ce-36bdea42c29b, invocation_timestamp=2021-04-15T13:52:34.202Z, origin=Only For Testing, session_id=d29578d5-039b-45c5-b8ce-36bdea42c29b, session_timestamp=2021-04-15T13:52:34.202Z, thread-id=645, tx_id=26EBF30AD1416DF2970159A1FCF2BE6EF95637CB2AC7880C62575602BF1401F8}
[INFO ] 2021-04-15T13:52:35,002Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=baff8096-2c9f-4bc8-b038-14282892063b, invocation_id=d29578d5-039b-45c5-b8ce-36bdea42c29b, invocation_timestamp=2021-04-15T13:52:34.202Z, origin=Only For Testing, session_id=d29578d5-039b-45c5-b8ce-36bdea42c29b, session_timestamp=2021-04-15T13:52:34.202Z, thread-id=645, tx_id=26EBF30AD1416DF2970159A1FCF2BE6EF95637CB2AC7880C62575602BF1401F8}
[INFO ] 2021-04-15T13:52:35,136Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=baff8096-2c9f-4bc8-b038-14282892063b, invocation_id=d29578d5-039b-45c5-b8ce-36bdea42c29b, invocation_timestamp=2021-04-15T13:52:34.202Z, origin=Only For Testing, session_id=d29578d5-039b-45c5-b8ce-36bdea42c29b, session_timestamp=2021-04-15T13:52:34.202Z, thread-id=645, tx_id=26EBF30AD1416DF2970159A1FCF2BE6EF95637CB2AC7880C62575602BF1401F8}
[INFO ] 2021-04-15T13:52:35,136Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=baff8096-2c9f-4bc8-b038-14282892063b, invocation_id=d29578d5-039b-45c5-b8ce-36bdea42c29b, invocation_timestamp=2021-04-15T13:52:34.202Z, origin=Only For Testing, session_id=d29578d5-039b-45c5-b8ce-36bdea42c29b, session_timestamp=2021-04-15T13:52:34.202Z, thread-id=645, tx_id=26EBF30AD1416DF2970159A1FCF2BE6EF95637CB2AC7880C62575602BF1401F8}
[INFO ] 2021-04-15T13:52:35,636Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary, L=London, C=GB. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=72d1c8cb-8922-4c73-a522-a7363efd1333, invocation_id=2c438050-10fd-4ecc-bacc-215f8afa02d8, invocation_timestamp=2021-04-15T13:52:35.236Z, origin=Only For Testing, session_id=2c438050-10fd-4ecc-bacc-215f8afa02d8, session_timestamp=2021-04-15T13:52:35.236Z, thread-id=645, tx_id=D8123CC7DCFBF8B3F163FEC6BC48D254DFB4346BC9027EB9F2BBED27740AD137}
[INFO ] 2021-04-15T13:52:35,793Z [Mock network] corda.flow. - Received a notarisation request for Tx [D8123CC7DCFBF8B3F163FEC6BC48D254DFB4346BC9027EB9F2BBED27740AD137] from [O=InvestorA, L=TestLand, C=US] {fiber-id=10000003, flow-id=8fdcd891-6a92-409c-8139-46c8a4e78363, invocation_id=a63a8383-d905-4644-bd67-754707ebff60, invocation_timestamp=2021-04-15T13:52:35.749Z, origin=O=InvestorA, L=TestLand, C=US, session_id=a63a8383-d905-4644-bd67-754707ebff60, session_timestamp=2021-04-15T13:52:35.749Z, thread-id=645}
[INFO ] 2021-04-15T13:52:36,637Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 0 input states and 1 references {}
[INFO ] 2021-04-15T13:52:36,673Z [Mock network] corda.flow. - Transaction [D8123CC7DCFBF8B3F163FEC6BC48D254DFB4346BC9027EB9F2BBED27740AD137] successfully notarised, sending signature back to [O=InvestorA, L=TestLand, C=US] {fiber-id=10000003, flow-id=8fdcd891-6a92-409c-8139-46c8a4e78363, invocation_id=a63a8383-d905-4644-bd67-754707ebff60, invocation_timestamp=2021-04-15T13:52:35.749Z, origin=O=InvestorA, L=TestLand, C=US, session_id=a63a8383-d905-4644-bd67-754707ebff60, session_timestamp=2021-04-15T13:52:35.749Z, thread-id=645}
[INFO ] 2021-04-15T13:52:36,698Z [Mock network] corda.flow. - Notary responded (O=Notary, L=London, C=GB). {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=72d1c8cb-8922-4c73-a522-a7363efd1333, invocation_id=2c438050-10fd-4ecc-bacc-215f8afa02d8, invocation_timestamp=2021-04-15T13:52:35.236Z, origin=Only For Testing, session_id=2c438050-10fd-4ecc-bacc-215f8afa02d8, session_timestamp=2021-04-15T13:52:35.236Z, thread-id=645, tx_id=D8123CC7DCFBF8B3F163FEC6BC48D254DFB4346BC9027EB9F2BBED27740AD137}
[INFO ] 2021-04-15T13:52:36,700Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=72d1c8cb-8922-4c73-a522-a7363efd1333, invocation_id=2c438050-10fd-4ecc-bacc-215f8afa02d8, invocation_timestamp=2021-04-15T13:52:35.236Z, origin=Only For Testing, session_id=2c438050-10fd-4ecc-bacc-215f8afa02d8, session_timestamp=2021-04-15T13:52:35.236Z, thread-id=645, tx_id=D8123CC7DCFBF8B3F163FEC6BC48D254DFB4346BC9027EB9F2BBED27740AD137}
[INFO ] 2021-04-15T13:52:36,732Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=72d1c8cb-8922-4c73-a522-a7363efd1333, invocation_id=2c438050-10fd-4ecc-bacc-215f8afa02d8, invocation_timestamp=2021-04-15T13:52:35.236Z, origin=Only For Testing, session_id=2c438050-10fd-4ecc-bacc-215f8afa02d8, session_timestamp=2021-04-15T13:52:35.236Z, thread-id=645, tx_id=D8123CC7DCFBF8B3F163FEC6BC48D254DFB4346BC9027EB9F2BBED27740AD137}
[INFO ] 2021-04-15T13:52:36,732Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000002, flow-id=72d1c8cb-8922-4c73-a522-a7363efd1333, invocation_id=2c438050-10fd-4ecc-bacc-215f8afa02d8, invocation_timestamp=2021-04-15T13:52:35.236Z, origin=Only For Testing, session_id=2c438050-10fd-4ecc-bacc-215f8afa02d8, session_timestamp=2021-04-15T13:52:35.236Z, thread-id=645, tx_id=D8123CC7DCFBF8B3F163FEC6BC48D254DFB4346BC9027EB9F2BBED27740AD137}
[INFO ] 2021-04-15T13:52:37,004Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary, L=London, C=GB. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=31ce17b7-805e-411f-ae30-b1a75d0835c8, invocation_id=e04b0d46-3174-4587-8799-b6704e95629e, invocation_timestamp=2021-04-15T13:52:36.818Z, origin=Only For Testing, session_id=e04b0d46-3174-4587-8799-b6704e95629e, session_timestamp=2021-04-15T13:52:36.818Z, thread-id=645, tx_id=6E0AB96E687A4ADEE3DD3D2F7562C2D656C565B3B62CE2CC8A861B26721C2D9C}
[INFO ] 2021-04-15T13:52:37,037Z [Mock network] corda.flow. - Received a notarisation request for Tx [6E0AB96E687A4ADEE3DD3D2F7562C2D656C565B3B62CE2CC8A861B26721C2D9C] from [O=InvestorA, L=TestLand, C=US] {fiber-id=10000005, flow-id=3c2efc4e-97fb-4bba-8dbc-6eca95998139, invocation_id=1293a0ea-4e7a-40a2-946b-f6ff8ef8b83c, invocation_timestamp=2021-04-15T13:52:37.025Z, origin=O=InvestorA, L=TestLand, C=US, session_id=1293a0ea-4e7a-40a2-946b-f6ff8ef8b83c, session_timestamp=2021-04-15T13:52:37.025Z, thread-id=645}
[INFO ] 2021-04-15T13:52:37,284Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 1 references {}
[INFO ] 2021-04-15T13:52:37,291Z [Mock network] corda.flow. - Transaction [6E0AB96E687A4ADEE3DD3D2F7562C2D656C565B3B62CE2CC8A861B26721C2D9C] successfully notarised, sending signature back to [O=InvestorA, L=TestLand, C=US] {fiber-id=10000005, flow-id=3c2efc4e-97fb-4bba-8dbc-6eca95998139, invocation_id=1293a0ea-4e7a-40a2-946b-f6ff8ef8b83c, invocation_timestamp=2021-04-15T13:52:37.025Z, origin=O=InvestorA, L=TestLand, C=US, session_id=1293a0ea-4e7a-40a2-946b-f6ff8ef8b83c, session_timestamp=2021-04-15T13:52:37.025Z, thread-id=645}
[INFO ] 2021-04-15T13:52:37,342Z [Mock network] corda.flow. - Notary responded (O=Notary, L=London, C=GB). {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=31ce17b7-805e-411f-ae30-b1a75d0835c8, invocation_id=e04b0d46-3174-4587-8799-b6704e95629e, invocation_timestamp=2021-04-15T13:52:36.818Z, origin=Only For Testing, session_id=e04b0d46-3174-4587-8799-b6704e95629e, session_timestamp=2021-04-15T13:52:36.818Z, thread-id=645, tx_id=6E0AB96E687A4ADEE3DD3D2F7562C2D656C565B3B62CE2CC8A861B26721C2D9C}
[INFO ] 2021-04-15T13:52:37,343Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=31ce17b7-805e-411f-ae30-b1a75d0835c8, invocation_id=e04b0d46-3174-4587-8799-b6704e95629e, invocation_timestamp=2021-04-15T13:52:36.818Z, origin=Only For Testing, session_id=e04b0d46-3174-4587-8799-b6704e95629e, session_timestamp=2021-04-15T13:52:36.818Z, thread-id=645, tx_id=6E0AB96E687A4ADEE3DD3D2F7562C2D656C565B3B62CE2CC8A861B26721C2D9C}
[INFO ] 2021-04-15T13:52:37,359Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=31ce17b7-805e-411f-ae30-b1a75d0835c8, invocation_id=e04b0d46-3174-4587-8799-b6704e95629e, invocation_timestamp=2021-04-15T13:52:36.818Z, origin=Only For Testing, session_id=e04b0d46-3174-4587-8799-b6704e95629e, session_timestamp=2021-04-15T13:52:36.818Z, thread-id=645, tx_id=6E0AB96E687A4ADEE3DD3D2F7562C2D656C565B3B62CE2CC8A861B26721C2D9C}
[INFO ] 2021-04-15T13:52:37,402Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=InvestorA, L=TestLand, C=US. {fiber-id=10000006, flow-id=ba047b93-e9ee-4c04-8e85-ed734b507455, invocation_id=deac2a4f-e3d0-48ac-98be-b63a5046423b, invocation_timestamp=2021-04-15T13:52:37.061Z, origin=O=InvestorA, L=TestLand, C=US, session_id=deac2a4f-e3d0-48ac-98be-b63a5046423b, session_timestamp=2021-04-15T13:52:37.061Z, thread-id=645, tx_id=6E0AB96E687A4ADEE3DD3D2F7562C2D656C565B3B62CE2CC8A861B26721C2D9C}
[INFO ] 2021-04-15T13:52:37,657Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=ba047b93-e9ee-4c04-8e85-ed734b507455, invocation_id=deac2a4f-e3d0-48ac-98be-b63a5046423b, invocation_timestamp=2021-04-15T13:52:37.061Z, origin=O=InvestorA, L=TestLand, C=US, session_id=deac2a4f-e3d0-48ac-98be-b63a5046423b, session_timestamp=2021-04-15T13:52:37.061Z, thread-id=645, tx_id=6E0AB96E687A4ADEE3DD3D2F7562C2D656C565B3B62CE2CC8A861B26721C2D9C}
[INFO ] 2021-04-15T13:52:37,670Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000006, flow-id=ba047b93-e9ee-4c04-8e85-ed734b507455, invocation_id=deac2a4f-e3d0-48ac-98be-b63a5046423b, invocation_timestamp=2021-04-15T13:52:37.061Z, origin=O=InvestorA, L=TestLand, C=US, session_id=deac2a4f-e3d0-48ac-98be-b63a5046423b, session_timestamp=2021-04-15T13:52:37.061Z, thread-id=645, tx_id=6E0AB96E687A4ADEE3DD3D2F7562C2D656C565B3B62CE2CC8A861B26721C2D9C}
[INFO ] 2021-04-15T13:52:37,690Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000006, flow-id=ba047b93-e9ee-4c04-8e85-ed734b507455, invocation_id=deac2a4f-e3d0-48ac-98be-b63a5046423b, invocation_timestamp=2021-04-15T13:52:37.061Z, origin=O=InvestorA, L=TestLand, C=US, session_id=deac2a4f-e3d0-48ac-98be-b63a5046423b, session_timestamp=2021-04-15T13:52:37.061Z, thread-id=645, tx_id=6E0AB96E687A4ADEE3DD3D2F7562C2D656C565B3B62CE2CC8A861B26721C2D9C}
[INFO ] 2021-04-15T13:52:37,705Z [Mock network] corda.flow. - Party O=InvestorB, L=TestCity, C=US received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=31ce17b7-805e-411f-ae30-b1a75d0835c8, invocation_id=e04b0d46-3174-4587-8799-b6704e95629e, invocation_timestamp=2021-04-15T13:52:36.818Z, origin=Only For Testing, session_id=e04b0d46-3174-4587-8799-b6704e95629e, session_timestamp=2021-04-15T13:52:36.818Z, thread-id=645, tx_id=6E0AB96E687A4ADEE3DD3D2F7562C2D656C565B3B62CE2CC8A861B26721C2D9C}
[INFO ] 2021-04-15T13:52:37,728Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=InvestorA, L=TestLand, C=US. {fiber-id=10000007, flow-id=5f51b10c-9905-4f31-962d-9ebe6ae0bd5a, invocation_id=9d2b0948-2e8e-4deb-9f3c-c23c3d71dfe5, invocation_timestamp=2021-04-15T13:52:37.102Z, origin=O=InvestorA, L=TestLand, C=US, session_id=9d2b0948-2e8e-4deb-9f3c-c23c3d71dfe5, session_timestamp=2021-04-15T13:52:37.102Z, thread-id=645, tx_id=6E0AB96E687A4ADEE3DD3D2F7562C2D656C565B3B62CE2CC8A861B26721C2D9C}
[INFO ] 2021-04-15T13:52:38,200Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=5f51b10c-9905-4f31-962d-9ebe6ae0bd5a, invocation_id=9d2b0948-2e8e-4deb-9f3c-c23c3d71dfe5, invocation_timestamp=2021-04-15T13:52:37.102Z, origin=O=InvestorA, L=TestLand, C=US, session_id=9d2b0948-2e8e-4deb-9f3c-c23c3d71dfe5, session_timestamp=2021-04-15T13:52:37.102Z, thread-id=645, tx_id=6E0AB96E687A4ADEE3DD3D2F7562C2D656C565B3B62CE2CC8A861B26721C2D9C}
[INFO ] 2021-04-15T13:52:38,212Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=5f51b10c-9905-4f31-962d-9ebe6ae0bd5a, invocation_id=9d2b0948-2e8e-4deb-9f3c-c23c3d71dfe5, invocation_timestamp=2021-04-15T13:52:37.102Z, origin=O=InvestorA, L=TestLand, C=US, session_id=9d2b0948-2e8e-4deb-9f3c-c23c3d71dfe5, session_timestamp=2021-04-15T13:52:37.102Z, thread-id=645, tx_id=6E0AB96E687A4ADEE3DD3D2F7562C2D656C565B3B62CE2CC8A861B26721C2D9C}
[INFO ] 2021-04-15T13:52:38,234Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=5f51b10c-9905-4f31-962d-9ebe6ae0bd5a, invocation_id=9d2b0948-2e8e-4deb-9f3c-c23c3d71dfe5, invocation_timestamp=2021-04-15T13:52:37.102Z, origin=O=InvestorA, L=TestLand, C=US, session_id=9d2b0948-2e8e-4deb-9f3c-c23c3d71dfe5, session_timestamp=2021-04-15T13:52:37.102Z, thread-id=645, tx_id=6E0AB96E687A4ADEE3DD3D2F7562C2D656C565B3B62CE2CC8A861B26721C2D9C}
[INFO ] 2021-04-15T13:52:38,249Z [Mock network] corda.flow. - Party O=TIE, L=TestVillage, C=US received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=31ce17b7-805e-411f-ae30-b1a75d0835c8, invocation_id=e04b0d46-3174-4587-8799-b6704e95629e, invocation_timestamp=2021-04-15T13:52:36.818Z, origin=Only For Testing, session_id=e04b0d46-3174-4587-8799-b6704e95629e, session_timestamp=2021-04-15T13:52:36.818Z, thread-id=645, tx_id=6E0AB96E687A4ADEE3DD3D2F7562C2D656C565B3B62CE2CC8A861B26721C2D9C}
[INFO ] 2021-04-15T13:52:38,249Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000004, flow-id=31ce17b7-805e-411f-ae30-b1a75d0835c8, invocation_id=e04b0d46-3174-4587-8799-b6704e95629e, invocation_timestamp=2021-04-15T13:52:36.818Z, origin=Only For Testing, session_id=e04b0d46-3174-4587-8799-b6704e95629e, session_timestamp=2021-04-15T13:52:36.818Z, thread-id=645, tx_id=6E0AB96E687A4ADEE3DD3D2F7562C2D656C565B3B62CE2CC8A861B26721C2D9C}
[INFO ] 2021-04-15T13:52:38,324Z [Mock network] corda.flow. - Already stored a distribution record for O=InvestorA, L=TestLand, C=US and 7b591128-e78e-4f1c-8f78-7884cb158008. {fiber-id=10000009, flow-id=d0edc84a-0008-48a2-900b-03244eb1125d, invocation_id=186807ee-b338-4666-b359-4f8baf434139, invocation_timestamp=2021-04-15T13:52:38.312Z, origin=O=InvestorA, L=TestLand, C=US, session_id=186807ee-b338-4666-b359-4f8baf434139, session_timestamp=2021-04-15T13:52:38.312Z, thread-id=645}
[INFO ] 2021-04-15T13:52:38,358Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2021-04-15T13:52:38,378Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:52:38,378Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:52:38,381Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2021-04-15T13:52:38,395Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:52:38,395Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:52:38,396Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2021-04-15T13:52:38,412Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:52:38,412Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:52:38,413Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2021-04-15T13:52:38,425Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:52:38,425Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:53:04,160Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/peterli/Desktop/tokenTest/workflows ... {}
[INFO ] 2021-04-15T13:53:04,380Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:53:05,928Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2021-04-15T13:53:07,033Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2021-04-15T13:53:07,049Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2021-04-15T13:53:07,050Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:53:07,734Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:53:07,765Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2021-04-15T13:53:08,338Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:53:08,351Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:53:08,351Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2021-04-15T13:53:08,544Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:53:08,555Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:53:09,203Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2021-04-15T13:53:10,132Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:53:10,142Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2021-04-15T13:53:10,164Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:53:10,177Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2021-04-15T13:53:10,177Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-04-15T13:53:11,201Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:53:11,201Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2021-04-15T13:53:11,347Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:53:11,347Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2021-04-15T13:53:11,390Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:53:11,390Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2021-04-15T13:53:11,550Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-04-15T13:53:11,550Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:53:11,716Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:53:11,748Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:53:11,823Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2021-04-15T13:53:12,170Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:53:12,170Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2021-04-15T13:53:12,170Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:53:12,204Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2021-04-15T13:53:12,204Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2021-04-15T13:53:12,256Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:53:12,256Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2021-04-15T13:53:12,256Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:53:12,267Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2021-04-15T13:53:12,267Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:53:12,267Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:53:12,280Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2021-04-15T13:53:12,382Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:53:12,383Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:53:12,404Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:53:12,404Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:53:12,404Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:53:12,404Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:53:12,405Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:53:12,405Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2021-04-15T13:53:12,405Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2021-04-15T13:53:12,418Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:53:12,419Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2021-04-15T13:53:12,441Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:53:12,441Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:53:12,454Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2021-04-15T13:53:12,500Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:53:12,500Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2021-04-15T13:53:12,500Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:53:12,500Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2021-04-15T13:53:12,501Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2021-04-15T13:53:12,512Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:53:12,512Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2021-04-15T13:53:12,535Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:53:12,535Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2021-04-15T13:53:12,535Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:53:12,535Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:53:12,536Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2021-04-15T13:53:12,593Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:53:12,593Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:53:12,603Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:53:12,603Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:53:12,603Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:53:12,603Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:53:12,603Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:53:12,604Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:53:12,604Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:53:12,604Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2021-04-15T13:53:12,604Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2021-04-15T13:53:12,604Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:53:12,604Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2021-04-15T13:53:12,624Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-04-15T13:53:12,636Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:53:12,636Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2021-04-15T13:53:12,636Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-04-15T13:53:12,647Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:53:12,659Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/peterli/Desktop/tokenTest/.gradle {}
[INFO ] 2021-04-15T13:53:12,671Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-04-15T13:53:12,697Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2021-04-15T13:53:18,612Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/0/cordapps] {}
[INFO ] 2021-04-15T13:53:18,622Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:53:18,638Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:53:18,757Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:53:18,774Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:53:18,826Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:53:20,668Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:53:21,000Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:53:21,085Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:53:21,110Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:53:21,115Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL3hNjub4vzRdvGJJjtjhwfN2MFUGDNHcKzbVNFrTSGhJb, alias: identity-private-key {}
[INFO ] 2021-04-15T13:53:21,293Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:53:21,294Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:53:21,298Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:21,299Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:21,300Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:21,300Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:21,301Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:21,301Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:21,302Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:21,303Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:21,303Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:21,305Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:21,305Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:53:21,307Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:53:21,308Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:53:21,344Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:53:21,448Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:53:00.335Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:53:28,918Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:53:29,005Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-04-15T13:53:29,011Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-04-15T13:53:32,059Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-04-15T13:53:32,554Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:53:32,565Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494812554), owningKey=DL3hNjub4vzRdvGJJjtjhwfN2MFUGDNHcKzbVNFrTSGhJb {}
[INFO ] 2021-04-15T13:53:32,565Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:53:32,745Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494812554) {}
[INFO ] 2021-04-15T13:53:32,818Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:53:32,851Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:53:32,852Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:53:32,892Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494812554), owningKey=DL3hNjub4vzRdvGJJjtjhwfN2MFUGDNHcKzbVNFrTSGhJb {}
[INFO ] 2021-04-15T13:53:32,892Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:53:33,012Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:53:33,040Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:53:33,055Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:53:33,068Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:53:33,162Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:53:33,262Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:53:33,263Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-04-15T13:53:34,270Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494812554) {}
[INFO ] 2021-04-15T13:53:34,285Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494812554), owningKey=DL3hNjub4vzRdvGJJjtjhwfN2MFUGDNHcKzbVNFrTSGhJb {}
[INFO ] 2021-04-15T13:53:34,285Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:53:34,286Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494812554), owningKey=DL3hNjub4vzRdvGJJjtjhwfN2MFUGDNHcKzbVNFrTSGhJb {}
[INFO ] 2021-04-15T13:53:34,286Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:53:34,302Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/1/cordapps] {}
[INFO ] 2021-04-15T13:53:34,303Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:53:34,303Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:53:34,315Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:53:34,322Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:53:34,339Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:53:34,410Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:53:34,411Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:53:34,413Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:53:34,475Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:53:34,476Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL2UFVX3gfeB28vPyC4aAVdZVpgdBfqTrKXETbnR3eCLM5, alias: identity-private-key {}
[INFO ] 2021-04-15T13:53:34,486Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:53:34,486Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:53:34,486Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:34,486Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:34,487Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:34,487Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:34,487Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:34,487Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:34,487Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:34,487Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:34,487Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:34,487Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:34,487Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:53:34,487Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:53:34,487Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:53:34,487Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:53:34,493Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:53:00.335Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:53:35,300Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:53:35,302Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:53:35,302Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:53:35,541Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:53:35,550Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:53:35,556Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494815550), owningKey=DL2UFVX3gfeB28vPyC4aAVdZVpgdBfqTrKXETbnR3eCLM5 {}
[INFO ] 2021-04-15T13:53:35,556Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:53:35,570Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494815550) {}
[INFO ] 2021-04-15T13:53:35,582Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:53:35,586Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:53:35,586Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:53:35,596Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494815550), owningKey=DL2UFVX3gfeB28vPyC4aAVdZVpgdBfqTrKXETbnR3eCLM5 {}
[INFO ] 2021-04-15T13:53:35,596Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:53:35,647Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:53:35,688Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:53:35,692Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:53:35,693Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:53:35,694Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:53:35,704Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:53:35,740Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494815550) {}
[INFO ] 2021-04-15T13:53:35,743Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494812554), owningKey=DL3hNjub4vzRdvGJJjtjhwfN2MFUGDNHcKzbVNFrTSGhJb {}
[INFO ] 2021-04-15T13:53:35,743Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:53:35,768Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494815550), owningKey=DL2UFVX3gfeB28vPyC4aAVdZVpgdBfqTrKXETbnR3eCLM5 {}
[INFO ] 2021-04-15T13:53:35,768Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:53:35,792Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494815550), owningKey=DL2UFVX3gfeB28vPyC4aAVdZVpgdBfqTrKXETbnR3eCLM5 {}
[INFO ] 2021-04-15T13:53:35,792Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:53:35,792Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494815550), owningKey=DL2UFVX3gfeB28vPyC4aAVdZVpgdBfqTrKXETbnR3eCLM5 {}
[INFO ] 2021-04-15T13:53:35,792Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:53:35,810Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/2/cordapps] {}
[INFO ] 2021-04-15T13:53:35,810Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:53:35,810Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:53:35,821Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:53:35,828Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:53:35,839Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:53:35,890Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:53:35,891Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:53:35,892Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:53:35,940Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:53:35,940Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL4RDPGwB4SEogq2JTg96KMLEffWZvyZUSMWBreJpeZMu7, alias: identity-private-key {}
[INFO ] 2021-04-15T13:53:35,951Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:53:35,952Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:53:35,952Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:35,952Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:35,952Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:35,952Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:35,952Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:35,952Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:35,953Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:35,953Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:35,953Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:35,953Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:35,953Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:53:35,953Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:53:35,953Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:53:35,953Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:53:35,959Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:53:00.335Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:53:36,679Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:53:36,680Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:53:36,680Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:53:36,867Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:53:36,873Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:53:36,878Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494816873), owningKey=DL4RDPGwB4SEogq2JTg96KMLEffWZvyZUSMWBreJpeZMu7 {}
[INFO ] 2021-04-15T13:53:36,878Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:53:36,890Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494816873) {}
[INFO ] 2021-04-15T13:53:36,900Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:53:36,901Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:53:36,901Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:53:36,911Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494816873), owningKey=DL4RDPGwB4SEogq2JTg96KMLEffWZvyZUSMWBreJpeZMu7 {}
[INFO ] 2021-04-15T13:53:36,911Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:53:36,946Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:53:36,975Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:53:36,978Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:53:36,979Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:53:36,979Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:53:36,988Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:53:37,019Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494816873) {}
[INFO ] 2021-04-15T13:53:37,022Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494812554), owningKey=DL3hNjub4vzRdvGJJjtjhwfN2MFUGDNHcKzbVNFrTSGhJb {}
[INFO ] 2021-04-15T13:53:37,022Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:53:37,041Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494816873), owningKey=DL4RDPGwB4SEogq2JTg96KMLEffWZvyZUSMWBreJpeZMu7 {}
[INFO ] 2021-04-15T13:53:37,041Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:53:37,061Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494815550), owningKey=DL2UFVX3gfeB28vPyC4aAVdZVpgdBfqTrKXETbnR3eCLM5 {}
[INFO ] 2021-04-15T13:53:37,061Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:53:37,080Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494816873), owningKey=DL4RDPGwB4SEogq2JTg96KMLEffWZvyZUSMWBreJpeZMu7 {}
[INFO ] 2021-04-15T13:53:37,080Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:53:37,093Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494816873), owningKey=DL4RDPGwB4SEogq2JTg96KMLEffWZvyZUSMWBreJpeZMu7 {}
[INFO ] 2021-04-15T13:53:37,093Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:53:37,094Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494816873), owningKey=DL4RDPGwB4SEogq2JTg96KMLEffWZvyZUSMWBreJpeZMu7 {}
[INFO ] 2021-04-15T13:53:37,094Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:53:37,107Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/3/cordapps] {}
[INFO ] 2021-04-15T13:53:37,107Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/3/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/3/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/3/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/3/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-04-15T13:53:37,107Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/3/cordapps/contracts-0.1.jar {}
[INFO ] 2021-04-15T13:53:37,115Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/3/cordapps/workflows-0.1.jar {}
[INFO ] 2021-04-15T13:53:37,121Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/3/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-04-15T13:53:37,139Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokenTest/workflows/build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/3/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-04-15T13:53:37,196Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:53:37,197Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-04-15T13:53:37,200Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-04-15T13:53:37,252Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-04-15T13:53:37,252Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLAR9x4CodZr6QqCvZXSWU8NGPXEQ3QunJLk9aRgguAep9, alias: identity-private-key {}
[INFO ] 2021-04-15T13:53:37,262Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.NormalTransaction$NormalTransactionInitiator to initiate com.template.flows.NormalTransaction$Responder (version 1) {}
[INFO ] 2021-04-15T13:53:37,262Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.TransferFungEvoToken$TransferFungEvoTokenInitiator to initiate com.template.flows.TransferFungEvoToken$TransferFungEvoTokenResponder (version 1) {}
[INFO ] 2021-04-15T13:53:37,262Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:37,262Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:37,263Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:37,263Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:37,263Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:37,263Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:37,263Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:37,263Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:37,263Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:37,263Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-04-15T13:53:37,263Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-04-15T13:53:37,263Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-04-15T13:53:37,263Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:53:37,263Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-04-15T13:53:37,272Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-04-15T13:53:00.335Z
      epoch=1
  } {}
[INFO ] 2021-04-15T13:53:37,989Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-04-15T13:53:37,991Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:53:37,991Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:53:38,182Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-04-15T13:53:38,189Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-04-15T13:53:38,195Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494818189), owningKey=DLAR9x4CodZr6QqCvZXSWU8NGPXEQ3QunJLk9aRgguAep9 {}
[INFO ] 2021-04-15T13:53:38,195Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:53:38,206Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494818189) {}
[INFO ] 2021-04-15T13:53:38,214Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-04-15T13:53:38,214Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-04-15T13:53:38,214Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-04-15T13:53:38,224Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494818189), owningKey=DLAR9x4CodZr6QqCvZXSWU8NGPXEQ3QunJLk9aRgguAep9 {}
[INFO ] 2021-04-15T13:53:38,224Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:53:38,257Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BC8CEDED608BACFF929652294E1E472056D6D1FAA06C5A7909E49A7DAC8F3AF1 uploader=app filename=Template Contracts {}
[INFO ] 2021-04-15T13:53:38,286Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-04-15T13:53:38,288Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-04-15T13:53:38,289Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20210415-135303.038-BDBFF8F6B6F2A31E/nodes/3/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-04-15T13:53:38,289Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-04-15T13:53:38,297Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-04-15T13:53:38,325Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494818189) {}
[INFO ] 2021-04-15T13:53:38,328Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=9, serial=1618494812554), owningKey=DL3hNjub4vzRdvGJJjtjhwfN2MFUGDNHcKzbVNFrTSGhJb {}
[INFO ] 2021-04-15T13:53:38,328Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2021-04-15T13:53:38,344Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494818189), owningKey=DLAR9x4CodZr6QqCvZXSWU8NGPXEQ3QunJLk9aRgguAep9 {}
[INFO ] 2021-04-15T13:53:38,344Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:53:38,360Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorA, L=TestLand, C=US], platformVersion=9, serial=1618494815550), owningKey=DL2UFVX3gfeB28vPyC4aAVdZVpgdBfqTrKXETbnR3eCLM5 {}
[INFO ] 2021-04-15T13:53:38,360Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorA, L=TestLand, C=US {}
[INFO ] 2021-04-15T13:53:38,375Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494818189), owningKey=DLAR9x4CodZr6QqCvZXSWU8NGPXEQ3QunJLk9aRgguAep9 {}
[INFO ] 2021-04-15T13:53:38,375Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:53:38,389Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=InvestorB, L=TestCity, C=US], platformVersion=9, serial=1618494816873), owningKey=DL4RDPGwB4SEogq2JTg96KMLEffWZvyZUSMWBreJpeZMu7 {}
[INFO ] 2021-04-15T13:53:38,389Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=InvestorB, L=TestCity, C=US {}
[INFO ] 2021-04-15T13:53:38,405Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494818189), owningKey=DLAR9x4CodZr6QqCvZXSWU8NGPXEQ3QunJLk9aRgguAep9 {}
[INFO ] 2021-04-15T13:53:38,405Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=TIE, L=TestVillage, C=US {}
[INFO ] 2021-04-15T13:53:38,416Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494818189), owningKey=DLAR9x4CodZr6QqCvZXSWU8NGPXEQ3QunJLk9aRgguAep9 {}
[INFO ] 2021-04-15T13:53:38,416Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:53:38,417Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=TIE, L=TestVillage, C=US], platformVersion=9, serial=1618494818189), owningKey=DLAR9x4CodZr6QqCvZXSWU8NGPXEQ3QunJLk9aRgguAep9 {}
[INFO ] 2021-04-15T13:53:38,417Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-04-15T13:53:39,442Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=InvestorA, L=TestLand, C=US. {fiber-id=10000002, flow-id=f06df1d8-8170-4af6-b25c-a93014ad90b6, invocation_id=d6e9637e-555a-4608-9727-597294910c8d, invocation_timestamp=2021-04-15T13:53:39.383Z, origin=O=InvestorA, L=TestLand, C=US, session_id=d6e9637e-555a-4608-9727-597294910c8d, session_timestamp=2021-04-15T13:53:39.383Z, thread-id=649, tx_id=443807C112D95A576411534197BF7B938EF824D0130B2918CDEE8411A8DFB540}
[INFO ] 2021-04-15T13:53:39,501Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=f06df1d8-8170-4af6-b25c-a93014ad90b6, invocation_id=d6e9637e-555a-4608-9727-597294910c8d, invocation_timestamp=2021-04-15T13:53:39.383Z, origin=O=InvestorA, L=TestLand, C=US, session_id=d6e9637e-555a-4608-9727-597294910c8d, session_timestamp=2021-04-15T13:53:39.383Z, thread-id=649, tx_id=443807C112D95A576411534197BF7B938EF824D0130B2918CDEE8411A8DFB540}
[INFO ] 2021-04-15T13:53:39,726Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=InvestorA, L=TestLand, C=US. {fiber-id=10000003, flow-id=a2946179-32f8-4b36-84f0-7a2f94503ad6, invocation_id=053789e5-b439-49f7-91a5-d5fa16509f45, invocation_timestamp=2021-04-15T13:53:39.701Z, origin=O=InvestorA, L=TestLand, C=US, session_id=053789e5-b439-49f7-91a5-d5fa16509f45, session_timestamp=2021-04-15T13:53:39.701Z, thread-id=649, tx_id=443807C112D95A576411534197BF7B938EF824D0130B2918CDEE8411A8DFB540}
[INFO ] 2021-04-15T13:53:39,740Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000003, flow-id=a2946179-32f8-4b36-84f0-7a2f94503ad6, invocation_id=053789e5-b439-49f7-91a5-d5fa16509f45, invocation_timestamp=2021-04-15T13:53:39.701Z, origin=O=InvestorA, L=TestLand, C=US, session_id=053789e5-b439-49f7-91a5-d5fa16509f45, session_timestamp=2021-04-15T13:53:39.701Z, thread-id=649, tx_id=443807C112D95A576411534197BF7B938EF824D0130B2918CDEE8411A8DFB540}
[INFO ] 2021-04-15T13:53:39,914Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=e236947c-ef4a-4917-9dac-b2d7c4f543ce, invocation_id=bc553e7e-b765-4488-98fa-d8c7b97c2a12, invocation_timestamp=2021-04-15T13:53:38.474Z, origin=Only For Testing, session_id=bc553e7e-b765-4488-98fa-d8c7b97c2a12, session_timestamp=2021-04-15T13:53:38.474Z, thread-id=649, tx_id=443807C112D95A576411534197BF7B938EF824D0130B2918CDEE8411A8DFB540}
[INFO ] 2021-04-15T13:53:39,914Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=e236947c-ef4a-4917-9dac-b2d7c4f543ce, invocation_id=bc553e7e-b765-4488-98fa-d8c7b97c2a12, invocation_timestamp=2021-04-15T13:53:38.474Z, origin=Only For Testing, session_id=bc553e7e-b765-4488-98fa-d8c7b97c2a12, session_timestamp=2021-04-15T13:53:38.474Z, thread-id=649, tx_id=443807C112D95A576411534197BF7B938EF824D0130B2918CDEE8411A8DFB540}
[INFO ] 2021-04-15T13:53:39,993Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=e236947c-ef4a-4917-9dac-b2d7c4f543ce, invocation_id=bc553e7e-b765-4488-98fa-d8c7b97c2a12, invocation_timestamp=2021-04-15T13:53:38.474Z, origin=Only For Testing, session_id=bc553e7e-b765-4488-98fa-d8c7b97c2a12, session_timestamp=2021-04-15T13:53:38.474Z, thread-id=649, tx_id=443807C112D95A576411534197BF7B938EF824D0130B2918CDEE8411A8DFB540}
[INFO ] 2021-04-15T13:53:40,025Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=InvestorA, L=TestLand, C=US. {fiber-id=10000002, flow-id=f06df1d8-8170-4af6-b25c-a93014ad90b6, invocation_id=d6e9637e-555a-4608-9727-597294910c8d, invocation_timestamp=2021-04-15T13:53:39.383Z, origin=O=InvestorA, L=TestLand, C=US, session_id=d6e9637e-555a-4608-9727-597294910c8d, session_timestamp=2021-04-15T13:53:39.383Z, thread-id=649, tx_id=443807C112D95A576411534197BF7B938EF824D0130B2918CDEE8411A8DFB540}
[INFO ] 2021-04-15T13:53:40,035Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=f06df1d8-8170-4af6-b25c-a93014ad90b6, invocation_id=d6e9637e-555a-4608-9727-597294910c8d, invocation_timestamp=2021-04-15T13:53:39.383Z, origin=O=InvestorA, L=TestLand, C=US, session_id=d6e9637e-555a-4608-9727-597294910c8d, session_timestamp=2021-04-15T13:53:39.383Z, thread-id=649, tx_id=443807C112D95A576411534197BF7B938EF824D0130B2918CDEE8411A8DFB540}
[INFO ] 2021-04-15T13:53:40,041Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=f06df1d8-8170-4af6-b25c-a93014ad90b6, invocation_id=d6e9637e-555a-4608-9727-597294910c8d, invocation_timestamp=2021-04-15T13:53:39.383Z, origin=O=InvestorA, L=TestLand, C=US, session_id=d6e9637e-555a-4608-9727-597294910c8d, session_timestamp=2021-04-15T13:53:39.383Z, thread-id=649, tx_id=443807C112D95A576411534197BF7B938EF824D0130B2918CDEE8411A8DFB540}
[INFO ] 2021-04-15T13:53:40,053Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=f06df1d8-8170-4af6-b25c-a93014ad90b6, invocation_id=d6e9637e-555a-4608-9727-597294910c8d, invocation_timestamp=2021-04-15T13:53:39.383Z, origin=O=InvestorA, L=TestLand, C=US, session_id=d6e9637e-555a-4608-9727-597294910c8d, session_timestamp=2021-04-15T13:53:39.383Z, thread-id=649, tx_id=443807C112D95A576411534197BF7B938EF824D0130B2918CDEE8411A8DFB540}
[INFO ] 2021-04-15T13:53:40,082Z [Mock network] corda.flow. - Party O=InvestorB, L=TestCity, C=US received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=e236947c-ef4a-4917-9dac-b2d7c4f543ce, invocation_id=bc553e7e-b765-4488-98fa-d8c7b97c2a12, invocation_timestamp=2021-04-15T13:53:38.474Z, origin=Only For Testing, session_id=bc553e7e-b765-4488-98fa-d8c7b97c2a12, session_timestamp=2021-04-15T13:53:38.474Z, thread-id=649, tx_id=443807C112D95A576411534197BF7B938EF824D0130B2918CDEE8411A8DFB540}
[INFO ] 2021-04-15T13:53:40,104Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=InvestorA, L=TestLand, C=US. {fiber-id=10000003, flow-id=a2946179-32f8-4b36-84f0-7a2f94503ad6, invocation_id=053789e5-b439-49f7-91a5-d5fa16509f45, invocation_timestamp=2021-04-15T13:53:39.701Z, origin=O=InvestorA, L=TestLand, C=US, session_id=053789e5-b439-49f7-91a5-d5fa16509f45, session_timestamp=2021-04-15T13:53:39.701Z, thread-id=649, tx_id=443807C112D95A576411534197BF7B938EF824D0130B2918CDEE8411A8DFB540}
[INFO ] 2021-04-15T13:53:40,114Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000003, flow-id=a2946179-32f8-4b36-84f0-7a2f94503ad6, invocation_id=053789e5-b439-49f7-91a5-d5fa16509f45, invocation_timestamp=2021-04-15T13:53:39.701Z, origin=O=InvestorA, L=TestLand, C=US, session_id=053789e5-b439-49f7-91a5-d5fa16509f45, session_timestamp=2021-04-15T13:53:39.701Z, thread-id=649, tx_id=443807C112D95A576411534197BF7B938EF824D0130B2918CDEE8411A8DFB540}
[INFO ] 2021-04-15T13:53:40,120Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000003, flow-id=a2946179-32f8-4b36-84f0-7a2f94503ad6, invocation_id=053789e5-b439-49f7-91a5-d5fa16509f45, invocation_timestamp=2021-04-15T13:53:39.701Z, origin=O=InvestorA, L=TestLand, C=US, session_id=053789e5-b439-49f7-91a5-d5fa16509f45, session_timestamp=2021-04-15T13:53:39.701Z, thread-id=649, tx_id=443807C112D95A576411534197BF7B938EF824D0130B2918CDEE8411A8DFB540}
[INFO ] 2021-04-15T13:53:40,129Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000003, flow-id=a2946179-32f8-4b36-84f0-7a2f94503ad6, invocation_id=053789e5-b439-49f7-91a5-d5fa16509f45, invocation_timestamp=2021-04-15T13:53:39.701Z, origin=O=InvestorA, L=TestLand, C=US, session_id=053789e5-b439-49f7-91a5-d5fa16509f45, session_timestamp=2021-04-15T13:53:39.701Z, thread-id=649, tx_id=443807C112D95A576411534197BF7B938EF824D0130B2918CDEE8411A8DFB540}
[INFO ] 2021-04-15T13:53:40,145Z [Mock network] corda.flow. - Party O=TIE, L=TestVillage, C=US received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=e236947c-ef4a-4917-9dac-b2d7c4f543ce, invocation_id=bc553e7e-b765-4488-98fa-d8c7b97c2a12, invocation_timestamp=2021-04-15T13:53:38.474Z, origin=Only For Testing, session_id=bc553e7e-b765-4488-98fa-d8c7b97c2a12, session_timestamp=2021-04-15T13:53:38.474Z, thread-id=649, tx_id=443807C112D95A576411534197BF7B938EF824D0130B2918CDEE8411A8DFB540}
[INFO ] 2021-04-15T13:53:40,145Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=InvestorA, L=TestLand, C=US, actor_store_id=TEST, fiber-id=10000001, flow-id=e236947c-ef4a-4917-9dac-b2d7c4f543ce, invocation_id=bc553e7e-b765-4488-98fa-d8c7b97c2a12, invocation_timestamp=2021-04-15T13:53:38.474Z, origin=Only For Testing, session_id=bc553e7e-b765-4488-98fa-d8c7b97c2a12, session_timestamp=2021-04-15T13:53:38.474Z, thread-id=649, tx_id=443807C112D95A576411534197BF7B938EF824D0130B2918CDEE8411A8DFB540}
[INFO ] 2021-04-15T13:53:40,164Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2021-04-15T13:53:40,185Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:53:40,185Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:53:40,189Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2021-04-15T13:53:40,201Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:53:40,201Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:53:40,202Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2021-04-15T13:53:40,214Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:53:40,214Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-04-15T13:53:40,216Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2021-04-15T13:53:40,226Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-04-15T13:53:40,226Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
